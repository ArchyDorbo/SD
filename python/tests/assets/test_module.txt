[0/37] 'sbs::compositing' (SDModule)
	Definitions:
		[1/29] 'sbs::compositing::valueprocessor'
			Label: 'Value Processor'
			Description: 'The <b>Value Processor</b> filter evaluates a function for a single value'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input' [CONNECTABLE, READ_ONLY, VARIADIC]
					Label: 'Input Image 0'
					Description: 'Input Image 0'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'function' = SDValueBool(bool(false)) [FUNCTION_ONLY]
					Label: 'Value Processor Function'
					Description: 'Function evaluated by this Value Processor'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[2/29] 'sbs::compositing::fxmaps'
			Label: 'FX-Map'
			Description: 'The <b>FX-Map</b> filter creates procedural noises and patterns'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'colorswitch' = SDValueBool(bool(true)) 
					Label: 'Color Mode'
					Description: 'The <b>Color Mode</b> parameter toggles between a grayscale and a color output image'
					Types:
						'bool' (SDTypeBool)
				'background' = SDValueFloat4(float4(0,0,0,0)) [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Background'
					Description: 'The <b>Background</b> parameter sets an optional color or grayscale input background image'
					Types:
						'ColorRGBA' (SDTypeColorRGBA)
				'inputpattern' [CONNECTABLE, READ_ONLY, VARIADIC]
					Label: 'Input Image 0'
					Description: 'Input Image 0'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'renderroi' = SDValueFloat4(float4(0,1,0,1)) 
					Label: 'Render Region'
					Description: 'The <b>Render Region</b> parameter sets the region to render (left, right, top, bottom)'
					Types:
						'float4' (SDTypeFloat4)
				'tilingroi' = SDValueFloat4(float4(0,1,0,1)) 
					Label: 'Tiling Region'
					Description: 'The <b>Tiling Region</b> parameter sets a region of the FX-Map to tile (left, right, top, bottom)'
					Types:
						'float4' (SDTypeFloat4)
				'culling' = SDValueBool(bool(false)) 
					Label: 'Cull Outside'
					Description: 'Activate <b>Cull Outside</b> parameter in order to discard all patterns w/ centers outside the tiling region'
					Types:
						'bool' (SDTypeBool)
				'hurst' = SDValueFloat(float(1)) 
					Label: 'Roughness'
					Description: 'The <b>Roughness</b> parameter calculates the roughness value (depth and opacity multiplier). It applies a bias to the FX-Map's blending process'
					Types:
						'float' (SDTypeFloat)
				'opacitymult' = SDValueFloat(float(1)) 
					Label: 'Global Opacity'
					Description: 'The <b>Global Opacity</b> parameter is an opacity multiplier applied to each Fx-Map's patterns'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[3/29] 'sbs::compositing::blend'
			Label: 'Blend'
			Description: 'The <b>Blend</b> filter mixes two color inputs according to the grayscale input intensity'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'source' [CONNECTABLE, READ_ONLY]
					Label: 'Foreground'
					Description: 'Input 1 color or grayscale image'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'destination' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Background'
					Description: 'Input 2 color or grayscale image'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'opacity' [CONNECTABLE, READ_ONLY]
					Label: 'Opacity'
					Description: 'Optional Opacity Input: per-pixel blending result mask'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'opacitymult' = SDValueFloat(float(1)) 
					Label: 'Opacity'
					Description: 'The <b>Opacity</b> parameter sets the transparency of the blend'
					Types:
						'float' (SDTypeFloat)
				'blendingmode' = SDValueEnum("sbs::compositing::blendingmode",0) 
					Label: 'Blending Mode'
					Description: 'The <b>Blending Mode</b> parameter defines the blending operation used to combine the foreground and background images'
					Types:
						'sbs::compositing::blendingmode' (SDTypeEnum)
						'int' (SDTypeInt)
				'colorblending' = SDValueEnum("sbs::compositing::colorblending",0) 
					Label: 'Alpha Blending'
					Description: 'The <b>Alpha Blending</b> parameter defines the how alpha channels of color source and destination are interpreted'
					Types:
						'sbs::compositing::colorblending' (SDTypeEnum)
						'int' (SDTypeInt)
				'maskrectangle' = SDValueFloat4(float4(0,1,0,1)) 
					Label: 'Cropping Area'
					Description: 'The <b>Cropping Area</b> parameter applies a cropping area on the foreground input'
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[4/29] 'sbs::compositing::curve'
			Label: 'Curve'
			Description: 'The <b>Curve</b> filter replaces the colors or grayscale values of the input image by remapping them with a curve'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Primary Input Image. Image to be processed'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'exposecurve' = SDValueBool(bool(false)) 
					Label: 'Apply / Expose curve'
					Description: 'The <b>Apply / Expose curve</b> parameter allows to copy the user curve to the output instead of applying it to the input image'
					Types:
						'bool' (SDTypeBool)
				'addressingrepeat' = SDValueBool(bool(false)) 
					Label: 'Curve Addressing'
					Description: 'This parameter determines how out of 0..1 range <b>HDR</b> pixels of the input are handled: clamped or fold up to 0..1.'
					Types:
						'bool' (SDTypeBool)
				'curveluminance' 
					Label: 'Curve luminance'
					Types:
						'SDTypeArray<sbs::compositing::curve_key>' (SDTypeArray)
				'curvered' 
					Label: 'Curve red'
					Types:
						'SDTypeArray<sbs::compositing::curve_key>' (SDTypeArray)
				'curvegreen' 
					Label: 'Curve Green'
					Types:
						'SDTypeArray<sbs::compositing::curve_key>' (SDTypeArray)
				'curveblue' 
					Label: 'Curve blue'
					Types:
						'SDTypeArray<sbs::compositing::curve_key>' (SDTypeArray)
				'curvealpha' 
					Label: 'Curve Alpha'
					Types:
						'SDTypeArray<sbs::compositing::curve_key>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[5/29] 'sbs::compositing::pixelprocessor'
			Label: 'Pixel Processor'
			Description: 'The <b>Pixel Processor</b> filter evaluates a function per pixel'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'colorswitch' = SDValueBool(bool(true)) 
					Label: 'Color Mode'
					Description: 'The <b>Color Mode</b> parameter toggles between a grayscale and a color output image'
					Types:
						'bool' (SDTypeBool)
				'input' [CONNECTABLE, READ_ONLY, VARIADIC]
					Label: 'Input Image 0'
					Description: 'Input Image 0'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'perpixel' = SDValueFloat4(float4(0,0,0,1)) [FUNCTION_ONLY]
					Label: 'Per Pixel Function'
					Description: 'Function evaluated per pixel'
					Types:
						'ColorRGBA' (SDTypeColorRGBA)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[6/29] 'sbs::compositing::svg'
			Label: 'SVG'
			Description: 'The <b>Vector Graphics</b> filter takes a vector graphic image and inserts it into the graph as a bitmap'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'colorswitch' = SDValueBool(bool(true)) 
					Label: 'Color Mode'
					Description: 'The <b>Color Mode</b> parameter toggles between a grayscale or color image output'
					Types:
						'bool' (SDTypeBool)
				'background' = SDValueFloat4(float4(0,0,0,0)) [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Background'
					Description: 'The <b>Background</b> input/parameter sets the output image's background color'
					Types:
						'ColorRGBA' (SDTypeColorRGBA)
				'vectorresourcepath' = SDValueString(string()) 
					Label: 'PKG Resource Path'
					Description: 'The <b>PKG Resource Path</b> parameter displays the location of the vector image (SVG format) in your package'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[7/29] 'sbs::compositing::bitmap'
			Label: 'Bitmap'
			Description: 'The <b>Bitmap</b> filter imports a bitmap image resource into the graph'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'colorswitch' = SDValueBool(bool(true)) 
					Label: 'Color Mode'
					Description: 'The <b>Color Mode</b> parameter toggles between a grayscale and a color output image'
					Types:
						'bool' (SDTypeBool)
				'bitmapresourcepath' = SDValueString(string()) 
					Label: 'PKG Resource Path'
					Description: 'The <b>PKG Resource Path</b> parameter displays the bitmap's location in your package'
					Types:
						'string' (SDTypeString)
				'resizemethod' = SDValueEnum("sbs::compositing::resizemethod",0) 
					Label: 'Resize method'
					Description: 'The <b>Resize method</b> parameter select how the bitmap is resized if required'
					Types:
						'sbs::compositing::resizemethod' (SDTypeEnum)
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[8/29] 'sbs::compositing::shuffle'
			Label: 'Channels Shuffle'
			Description: 'The <b>Channels Shuffle</b> filter lets you create an output image using individual channels from either of the two input images, arranged in any order'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input 1'
					Description: 'Primary input image'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'input2' [CONNECTABLE, READ_ONLY]
					Label: 'Input 2'
					Description: 'Secondary input image'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'channelred' = SDValueEnum("sbs::compositing::channelred",0) 
					Label: 'Red Channel'
					Description: 'Choose the source channel to be inserted into the output image's Red channel'
					Types:
						'sbs::compositing::channelred' (SDTypeEnum)
						'int' (SDTypeInt)
				'channelgreen' = SDValueEnum("sbs::compositing::channelgreen",1) 
					Label: 'Green Channel'
					Description: 'Choose the source channel to be inserted into the output image's Green channel'
					Types:
						'sbs::compositing::channelgreen' (SDTypeEnum)
						'int' (SDTypeInt)
				'channelblue' = SDValueEnum("sbs::compositing::channelblue",2) 
					Label: 'Blue Channel'
					Description: 'Choose the source channel to be inserted into the output image's Blue channel'
					Types:
						'sbs::compositing::channelblue' (SDTypeEnum)
						'int' (SDTypeInt)
				'channelalpha' = SDValueEnum("sbs::compositing::channelalpha",3) 
					Label: 'Alpha Channel'
					Description: 'Choose the source channel to be inserted into the output image's Alpha channel'
					Types:
						'sbs::compositing::channelalpha' (SDTypeEnum)
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[9/29] 'sbs::compositing::normal'
			Label: 'Normal'
			Description: 'The <b>Normal</b> filter computes a normal map from a grayscale input image interpreted as height map'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Input Image Grayscale; interpreted as a height map'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'intensity' = SDValueFloat(float(1)) 
					Label: 'Intensity'
					Description: 'The <b>Intensity</b> parameter modifies the intensity of height map '
					Types:
						'float' (SDTypeFloat)
				'inversedy' = SDValueBool(bool(false)) 
					Label: 'Normal Format'
					Description: 'The <b>Normal Format</b> parameter inverts y coordinates of height map (Open-GL)'
					Types:
						'bool' (SDTypeBool)
				'input2alpha' = SDValueBool(bool(true)) 
					Label: 'Alpha Channel Content'
					Description: 'When checked, the <b>Alpha Channel Content</b> parameter will fill the normal map's alpha channel with the input texture'
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[10/29] 'sbs::compositing::uniform'
			Label: 'Uniform Color'
			Description: 'The <b>Uniform Color</b> filter creates an image that uses only one color, whether it is an RGB color image or a grayscale image'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'colorswitch' = SDValueBool(bool(true)) 
					Label: 'Color Mode'
					Description: 'The <b>Color Mode</b> parameter toggles between a grayscale and a color output image'
					Types:
						'bool' (SDTypeBool)
				'outputcolor' = SDValueFloat4(float4(0,0,0,1)) 
					Label: 'Output Color'
					Description: 'The <b>Color Output</b> parameter creates a uniform color output image'
					Types:
						'ColorRGBA' (SDTypeColorRGBA)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[11/29] 'sbs::compositing::hsl'
			Label: 'HSL'
			Description: 'The <b>HSL</b> filter adjusts the color appearance of an output image by modifying the intensity of the <b>hue</b>, <b>saturation</b>, and <b>lightness</b> parameters of the color input image'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Primary Input Image. Image to be processed'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'hue' = SDValueFloat(float(0.5)) 
					Label: 'Hue'
					Description: 'The <b>Hue</b> parameter determines the color of the input image'
					Types:
						'float' (SDTypeFloat)
				'saturation' = SDValueFloat(float(0.5)) 
					Label: 'Saturation'
					Description: 'The <b>Saturation</b> parameter determines the saturation of the input image's color'
					Types:
						'float' (SDTypeFloat)
				'luminosity' = SDValueFloat(float(0.5)) 
					Label: 'Lightness'
					Description: 'The <b>Lightness</b> parameter determines the lightness of the input image'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[12/29] 'sbs::compositing::blur'
			Label: 'Blur'
			Description: 'The <b>Blur</b> filter softens the input image'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Primary Input Image. Image to be processed'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'intensity' = SDValueFloat(float(10)) 
					Label: 'Intensity'
					Description: 'The <b>Intensity</b> parameter sets the intensity of the blur in pixels'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[13/29] 'sbs::compositing::gradient'
			Label: 'Gradient Map'
			Description: 'The <b>Gradient Map</b> filter replaces the grayscale values of the input image by remapping with a color gradient'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Primary Input Image. Image to be processed'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'colorswitch' = SDValueBool(bool(true)) 
					Label: 'Color Mode'
					Description: 'The <b>Color Mode</b> parameter toggles between the grayscale and the color image'
					Types:
						'bool' (SDTypeBool)
				'addressingrepeat' = SDValueBool(bool(false)) 
					Label: 'Gradient Addressing'
					Description: 'This parameter determines how out of 0..1 range <b>HDR</b> pixels of the grayscale input are handled: clamped or fold up to 0..1.'
					Types:
						'bool' (SDTypeBool)
				'gradientrgba' 
					Label: 'Gradient RGBA'
					Types:
						'SDTypeArray<sbs::compositing::gradient_key_rgba>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[14/29] 'sbs::compositing::dyngradient'
			Label: 'Gradient (Dynamic)'
			Description: 'The <b>Dynamic Gradient Map</b> filter replaces the grayscale values of the first input image by remapping with a color gradient read from the second input'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Grayscale Input'
					Description: 'Primary Input Image. Grayscale image to remap'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'input2' [CONNECTABLE, READ_ONLY]
					Label: 'Gradient Input'
					Description: '<b>Gradient image</b>. Gradient is sampled from this image'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'addressingrepeat' = SDValueBool(bool(false)) 
					Label: 'Gradient Addressing'
					Description: 'This parameter determines how out of 0..1 range <b>HDR</b> pixels of the grayscale input are handled: clamped or fold up to 0..1.'
					Types:
						'bool' (SDTypeBool)
				'uvselector' = SDValueEnum("sbs::compositing::uvselector",0) 
					Label: 'Gradient Orientation'
					Description: 'The <b>Gradient Orientation</b> parameter defines how the gradient values are sampled in gradient input'
					Types:
						'sbs::compositing::uvselector' (SDTypeEnum)
						'int' (SDTypeInt)
				'coordinate' = SDValueFloat(float(0)) 
					Label: 'Gradient Input Position'
					Description: 'Normalized coordinate of the line/column to sample in gradient input'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[15/29] 'sbs::compositing::passthrough'
			Label: 'Dot'
			Description: 'The <b>Dot</b> node lets you <i>reroute</i> connections between nodes. Rerouted connections can be hidden by using Dot nodes as portals.<br><br>Note: this node is a layout tool only and has no impact on the result of the graph.'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Input Image or Value.'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
				
		[16/29] 'sbs::compositing::dirmotionblur'
			Label: 'Directional Blur'
			Description: 'The <b>Directional Blur</b> filter displaces the color input pixels in a given direction according to a specific intensity'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Primary Input Image. Image to be processed'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'intensity' = SDValueFloat(float(10)) 
					Label: 'Intensity'
					Description: 'The <b>Intensity</b> parameter sets the intensity of the blur'
					Types:
						'float' (SDTypeFloat)
				'mblurangle' = SDValueFloat(float(0)) 
					Label: 'Angle'
					Description: 'The <b>Angle</b> parameter defines the direction of the blur effect'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[17/29] 'sbs::compositing::sharpen'
			Label: 'Sharpen'
			Description: 'The <b>Sharpen</b> filter emphasizes the edges in the image, or the differences between adjacent light and dark sample points in an image and improves the clarity of a fuzzy image'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Primary Input Image. Image to be processed'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'intensity' = SDValueFloat(float(1)) 
					Label: 'Intensity'
					Description: 'The <b>Intensity</b> parameter determines the intensity of the sharpening'
					Types:
						'float' (SDTypeFloat)
				'punchthrough' = SDValueBool(bool(false)) 
					Label: 'Punchthrough Alpha'
					Description: 'The <b>Punchthrough Alpha</b> parameter determines whether the Alpha channel is sharpened or left untouched'
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[18/29] 'sbs::compositing::text'
			Label: 'Text'
			Description: 'The <b>Text</b> filter defines the text color, size, alignment and position'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'colorswitch' = SDValueBool(bool(false)) 
					Label: 'Color Mode'
					Description: 'The <b>Color Mode</b> parameter toggles between a grayscale and a color output image'
					Types:
						'bool' (SDTypeBool)
				'text' = SDValueString(string()) 
					Label: 'Text'
					Description: 'The <b>Text</b> parameter determines the text description'
					Types:
						'string' (SDTypeString)
				'fontdata' = SDValueString(string()) 
					Label: 'Font'
					Description: 'The <b>Font</b> resource used to render the <b>Text</b>'
					Types:
						'string' (SDTypeString)
				'fontsize' = SDValueFloat(float(0.25)) 
					Label: 'Font Size'
					Description: 'The <b>Font Size</b> parameter sets the font size of the text in points'
					Types:
						'float' (SDTypeFloat)
				'alignment' = SDValueEnum("sbs::compositing::alignment",1) 
					Label: 'Alignment'
					Description: 'The <b>Alignment</b> parameter sets the text alignment as left, center (default), or right'
					Types:
						'sbs::compositing::alignment' (SDTypeEnum)
						'int' (SDTypeInt)
				'matrix22' = SDValueFloat4(float4(1,0,0,1)) 
					Label: 'Transformation'
					Description: 'The 2x2 <b>Transformation</b> matrix applied to the rendered text'
					Types:
						'float4' (SDTypeFloat4)
				'position' = SDValueFloat2(float2(0,0)) 
					Label: 'Position'
					Description: 'The <b>Position</b> parameter determines the position of the text in the output image'
					Types:
						'float2' (SDTypeFloat2)
				'background' = SDValueFloat4(float4(0,0,0,1)) [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Background'
					Description: 'The <b>Background</b> input/parameter sets the output image's background color'
					Types:
						'ColorRGBA' (SDTypeColorRGBA)
				'frontcolor' = SDValueFloat4(float4(1,1,1,1)) 
					Label: 'Font Color'
					Description: 'The <b>Font Color</b> parameter sets the color of the text'
					Types:
						'ColorRGBA' (SDTypeColorRGBA)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[19/29] 'sbs::compositing::transformation'
			Label: 'Transformation 2D'
			Description: 'The <b>Transformation 2D</b> filter applies a 2D geometric transformation to either a color or a grayscale input image'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Primary Input Image. Image to be transformed'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'matrix22' = SDValueFloat4(float4(1,0,0,1)) 
					Label: 'Transform matrix'
					Description: 'Open the underlying transform <b>matrix</b> for direct editing'
					Types:
						'float4' (SDTypeFloat4)
				'offset' = SDValueFloat2(float2(0,0)) 
					Label: 'Offset'
					Description: 'The <b>Offset</b> parameter defines the 2D displacement of the image'
					Types:
						'float2' (SDTypeFloat2)
				'mipmapmode' = SDValueEnum("sbs::compositing::mipmapmode",0) 
					Label: 'Mipmap Mode'
					Description: 'The <b>Mipmap Mode</b> parameter reduces artifacts in an image using texture filtering'
					Types:
						'sbs::compositing::mipmapmode' (SDTypeEnum)
						'int' (SDTypeInt)
				'manualmiplevel' = SDValueInt(int(0)) 
					Label: 'Mipmap Level'
					Description: 'The <b>MipMap level</b> parameter sets the mipmap level used if the Mipmap mode parameter is set to Manual'
					Types:
						'int' (SDTypeInt)
				'mattecolor' = SDValueFloat4(float4(0,0,0,0)) 
					Label: 'Matte Color'
					Description: 'The <b>Matte Color</b> parameter is used as the background color when tiling of transformation is disabled'
					Types:
						'ColorRGBA' (SDTypeColorRGBA)
				'filtering' = SDValueEnum("sbs::compositing::filtering",0) 
					Label: 'Filtering'
					Description: 'Filtering'
					Types:
						'sbs::compositing::filtering' (SDTypeEnum)
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[20/29] 'sbs::compositing::directionalwarp'
			Label: 'Directional Warp'
			Description: 'The <b>Directional Warp</b> filter displaces the input image’s color pixels in a given direction to create a warp effect'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Primary Input Image. Image to be processed'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'inputintensity' [CONNECTABLE, READ_ONLY]
					Label: 'Intensity Input'
					Description: '<b>Warp Intensity image</b>. Grayscale image map defining the amount of warp to apply to the primary input image'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'intensity' = SDValueFloat(float(10)) 
					Label: 'Intensity'
					Description: 'The <b>Intensity</b> parameter sets the intensity of the warp'
					Types:
						'float' (SDTypeFloat)
				'warpangle' = SDValueFloat(float(0)) 
					Label: 'Warp Angle'
					Description: 'The <b>Angle</b> parameter sets the angle of the warp'
					Types:
						'float' (SDTypeFloat)
				'warpfilter' = SDValueBool(bool(false)) 
					Label: 'Input Filtering Mode'
					Description: 'Controls whether bilinear or nearest filtering is used to sample the input'
					Types:
						'bool' (SDTypeBool)
				'intensityoffset' = SDValueFloat(float(0)) 
					Label: 'Intensity Map Offset'
					Description: 'This offset is subtracted from the Intensity input values'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[21/29] 'sbs::compositing::grayscaleconversion'
			Label: 'Grayscale Conversion'
			Description: 'The <b>Grayscale Conversion</b> filter replaces the color values of the input image using a grayscale gradient'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Primary Input Image. Image to be processed'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'channelsweights' = SDValueFloat4(float4(0.330000013,0.330000013,0.330000013,0)) 
					Label: 'Channels Weights'
					Description: 'The <b>Channels Weights</b> parameter defines the weightings for each channel. These weightings are used to calculate the grayscale result'
					Types:
						'float4' (SDTypeFloat4)
				'alphamult' = SDValueBool(bool(false)) 
					Label: 'Flatten Alpha'
					Description: 'The <b>Flatten Alpha</b> parameter multiplies the grayscale conversion by the input image’s alpha channel'
					Types:
						'bool' (SDTypeBool)
				'mattelevel' = SDValueFloat(float(1)) 
					Label: 'Background Value'
					Description: 'The <b>Background Value</b> parameter determines which pixels are to be treated as transparent. (Only used if the <b>Flatten Alpha</b> parameter is set to True)'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[22/29] 'sbs::compositing::distance'
			Label: 'Distance'
			Description: 'The <b>Distance</b> filter computes per-pixel distance to nearest white pixel from a mask and/or copy from this position in source input '
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'colorswitch' = SDValueBool(bool(false)) 
					Label: 'Color Mode'
					Description: 'The <b>Color Mode</b> parameter toggles between a grayscale and a color output image'
					Types:
						'bool' (SDTypeBool)
				'mask' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Mask Input'
					Description: 'Mask input to compute distance from'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'source' [CONNECTABLE, READ_ONLY]
					Label: 'Source Input'
					Description: 'Optional source input for nearest pixel copy'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'distance' = SDValueFloat(float(10)) 
					Label: 'Maximum Distance'
					Description: 'The <b>Maximum Distance</b> parameter adjusts the distance computation and copy limit'
					Types:
						'float' (SDTypeFloat)
				'combinedistance' = SDValueBool(bool(true)) 
					Label: 'Combine Source/Distance'
					Description: 'If Source Input is set, determines if is combined with computed distance.'
					Types:
						'bool' (SDTypeBool)
				'distancemode' = SDValueInt(int(0)) 
					Label: 'Distance Mode'
					Description: 'Choose the method of distance computation'
					Types:
						'sbs::compositing::distancemode' (SDTypeEnum)
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[23/29] 'sbs::compositing::levels'
			Label: 'Levels'
			Description: 'The <b>Levels</b> filter adjusts the global tonal range and color balance of an image by modifying intensity levels of the image’s shadows, midtones, and highlights'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Primary Input Image. Image to be processed'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'levelinlow' = SDValueFloat4(float4(0,0,0,0)) 
					Label: 'Level In Low'
					Description: 'The <b>Level in low</b> parameter defines the input image's lowlight levels'
					Types:
						'float4' (SDTypeFloat4)
				'levelinhigh' = SDValueFloat4(float4(1,1,1,1)) 
					Label: 'Level In High'
					Description: 'The <b>Level in high</b> parameter defines the input image's highlight levels'
					Types:
						'float4' (SDTypeFloat4)
				'levelinmid' = SDValueFloat4(float4(0.5,0.5,0.5,0.5)) 
					Label: 'Level In Mid'
					Description: 'The <b>Level in mid</b> parameter defines the input image's midtone levels'
					Types:
						'float4' (SDTypeFloat4)
				'leveloutlow' = SDValueFloat4(float4(0,0,0,0)) 
					Label: 'Level Out Low'
					Description: 'The <b>Level out low</b> parameter defines the output image's lowlight levels'
					Types:
						'float4' (SDTypeFloat4)
				'levelouthigh' = SDValueFloat4(float4(1,1,1,1)) 
					Label: 'Level Out High'
					Description: 'The <b>Level out high</b> parameter defines the output image's highlight levels'
					Types:
						'float4' (SDTypeFloat4)
				'clampinterm' = SDValueBool(bool(true)) 
					Label: 'Intermediary Clamp'
					Description: 'This parameter determines if transformed input value is clamped to 0..1 before computing output level'
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[24/29] 'sbs::compositing::emboss'
			Label: 'Emboss'
			Description: 'The <b>Emboss</b> filter displaces the Input 1 image’s color pixels in a given direction'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Primary Input Image. Image to be processed'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'inputgradient' [CONNECTABLE, READ_ONLY]
					Label: 'Intensity Input'
					Description: 'The intensity input displaces the Input 1 image’s color pixels in a given direction'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'intensity' = SDValueFloat(float(5)) 
					Label: 'Intensity'
					Description: 'The <b>Intensity</b> parameter adjusts the global intensity of illumination effect'
					Types:
						'float' (SDTypeFloat)
				'lightangle' = SDValueFloat(float(0)) 
					Label: 'Light Angle'
					Description: 'The <b>Light Angle</b> defines the illumination angle of the embossed image's highlight'
					Types:
						'float' (SDTypeFloat)
				'highlightcolor' = SDValueFloat4(float4(1,1,1,1)) 
					Label: 'Highlight Color'
					Description: 'The <b>Highlight</b> parameter sets the color of the highlight if the input image is color'
					Types:
						'ColorRGBA' (SDTypeColorRGBA)
				'shadowcolor' = SDValueFloat4(float4(0,0,0,0)) 
					Label: 'Shadow Color'
					Description: 'The <b>Shadow Color</b> parameter sets the color of the shadowed regions of the embossed image'
					Types:
						'ColorRGBA' (SDTypeColorRGBA)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[25/29] 'sbs::compositing::warp'
			Label: 'Warp'
			Description: 'The <b>Warp</b> filter displaces the color pixels in the input image'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Primary Input Image. The color or grayscale image'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'inputgradient' [CONNECTABLE, READ_ONLY]
					Label: 'Gradient Input'
					Description: 'The slope of the gradient of the grayscale input image determines the warp effect in the output image'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'intensity' = SDValueFloat(float(1)) 
					Label: 'Intensity'
					Description: 'The <b>Intensity</b> parameter sets the intensity of the warp'
					Types:
						'float' (SDTypeFloat)
				'warpfilter' = SDValueBool(bool(false)) 
					Label: 'Input Filtering Mode'
					Description: 'Controls whether bilinear or nearest filtering is used to sample the input'
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[26/29] 'sbs::compositing::input_color'
			Label: 'Input'
			Description: 'Input'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'bitmapresourcepath' = SDValueString(string()) 
					Label: 'PKG Resource Path'
					Description: 'The <b>PKG Resource Path</b> parameter displays the bitmap's location in your package'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
			SDPropertyCategory = 'Annotation'
				'label' 
					Label: 'Label'
					Types:
						'string' (SDTypeString)
				'description' 
					Label: 'Description'
					Types:
						'string' (SDTypeString)
				'identifier' 
					Label: 'Identifier'
					Types:
						'string' (SDTypeString)
				'userdata' 
					Label: 'User Data'
					Types:
						'string' (SDTypeString)
				'group' 
					Label: 'Group'
					Types:
						'string' (SDTypeString)
				'visible_if' 
					Label: 'Visible If'
					Types:
						'string' (SDTypeString)
				'usages' 
					Label: 'Usages'
					Types:
						'SDTypeArray<SDTypeUsage>' (SDTypeArray)
				
		[27/29] 'sbs::compositing::input_grayscale'
			Label: 'Input'
			Description: 'Input'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'bitmapresourcepath' = SDValueString(string()) 
					Label: 'PKG Resource Path'
					Description: 'The <b>PKG Resource Path</b> parameter displays the bitmap's location in your package'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
			SDPropertyCategory = 'Annotation'
				'label' 
					Label: 'Label'
					Types:
						'string' (SDTypeString)
				'description' 
					Label: 'Description'
					Types:
						'string' (SDTypeString)
				'identifier' 
					Label: 'Identifier'
					Types:
						'string' (SDTypeString)
				'userdata' 
					Label: 'User Data'
					Types:
						'string' (SDTypeString)
				'group' 
					Label: 'Group'
					Types:
						'string' (SDTypeString)
				'visible_if' 
					Label: 'Visible If'
					Types:
						'string' (SDTypeString)
				'usages' 
					Label: 'Usages'
					Types:
						'SDTypeArray<SDTypeUsage>' (SDTypeArray)
				
		[28/29] 'sbs::compositing::input_value'
			Label: 'Input'
			Description: 'Input'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Annotation'
				'label' 
					Label: 'Label'
					Types:
						'string' (SDTypeString)
				'description' 
					Label: 'Description'
					Types:
						'string' (SDTypeString)
				'identifier' 
					Label: 'Identifier'
					Types:
						'string' (SDTypeString)
				'userdata' 
					Label: 'User Data'
					Types:
						'string' (SDTypeString)
				'group' 
					Label: 'Group'
					Types:
						'string' (SDTypeString)
				'visible_if' 
					Label: 'Visible If'
					Types:
						'string' (SDTypeString)
				'usages' 
					Label: 'Usages'
					Types:
						'SDTypeArray<SDTypeUsage>' (SDTypeArray)
				
		[29/29] 'sbs::compositing::output'
			Label: 'Input'
			Description: 'Input connector'
			SDPropertyCategory = 'Input'
				'inputNodeOutput' [CONNECTABLE, READ_ONLY]
					Label: 'Input'
					Description: 'Input connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Annotation'
				'label' 
					Label: 'Label'
					Types:
						'string' (SDTypeString)
				'description' 
					Label: 'Description'
					Types:
						'string' (SDTypeString)
				'identifier' 
					Label: 'Identifier'
					Types:
						'string' (SDTypeString)
				'userdata' 
					Label: 'User Data'
					Types:
						'string' (SDTypeString)
				'group' 
					Label: 'Group'
					Types:
						'string' (SDTypeString)
				'visible_if' 
					Label: 'Visible If'
					Types:
						'string' (SDTypeString)
				'usages' 
					Label: 'Usages'
					Types:
						'SDTypeArray<SDTypeUsage>' (SDTypeArray)
				'mipmaps' 
					Label: 'Mipmaps'
					Types:
						'int' (SDTypeInt)
				'format' 
					Label: 'Format'
					Types:
						'int' (SDTypeInt)
				
	Types:
		[1/17] 'sbs::compositing::distancemode'
			'sbs::compositing::distancemode' (SDTypeEnum)
				int euclidean = SDValueInt(int(0))
					Label: 'Euclidean distance'
					Description: 'Euclidean distance'
				int manhattan = SDValueInt(int(1))
					Label: 'Manhattan distance'
					Description: 'Manhattan distance'
				int chebyshev = SDValueInt(int(2))
					Label: 'Chebyshev distance'
					Description: 'Chebyshev distance'
		[2/17] 'sbs::compositing::filtering'
			'sbs::compositing::filtering' (SDTypeEnum)
				int bilinear = SDValueInt(int(0))
					Label: 'Bilinear'
					Description: 'Bilinear'
				int nearest = SDValueInt(int(1))
					Label: 'Nearest'
					Description: 'Nearest'
		[3/17] 'sbs::compositing::mipmapmode'
			'sbs::compositing::mipmapmode' (SDTypeEnum)
				int automatic = SDValueInt(int(0))
					Label: 'Automatic'
					Description: 'Automatic'
				int manual = SDValueInt(int(1))
					Label: 'Manual'
					Description: 'Manual'
		[4/17] 'sbs::compositing::alignment'
			'sbs::compositing::alignment' (SDTypeEnum)
				int left = SDValueInt(int(0))
					Label: 'Left'
					Description: 'Left'
				int center = SDValueInt(int(1))
					Label: 'Center'
					Description: 'Center'
				int right = SDValueInt(int(2))
					Label: 'Right'
					Description: 'Right'
		[5/17] 'sbs::compositing::uvselector'
			'sbs::compositing::uvselector' (SDTypeEnum)
				int u = SDValueInt(int(0))
					Label: 'Horizontal'
					Description: 'Horizontal'
				int v = SDValueInt(int(1))
					Label: 'Vertical'
					Description: 'Vertical'
		[6/17] 'sbs::compositing::gradient_key_rgba'
			'sbs::compositing::gradient_key_rgba' (SDTypeStruct)
				ColorRGBA value
					Label: 'Gradient RGBA Value'
					Description: 'Gradient RGBA Value'
				float position
					Label: 'Gradient RGB Position'
					Description: 'Gradient RGB Position'
				float midpoint
					Label: 'Gradient RGBA Midpoint'
					Description: 'Gradient RGBA Midpoint'
		[7/17] 'sbs::compositing::channelalpha'
			'sbs::compositing::channelalpha' (SDTypeEnum)
				int input1red = SDValueInt(int(0))
					Label: 'Input 1 Red Channel'
					Description: 'Input 1 Red Channel'
				int input1green = SDValueInt(int(1))
					Label: 'Input 1 Green Channel'
					Description: 'Input 1 Green Channel'
				int input1blue = SDValueInt(int(2))
					Label: 'Input 1 Blue Channel'
					Description: 'Input 1 Blue Channel'
				int input1alpha = SDValueInt(int(3))
					Label: 'Input 1 Alpha Channel'
					Description: 'Input 1 Alpha Channel'
				int input2red = SDValueInt(int(4))
					Label: 'Input 2 Red Channel'
					Description: 'Input 2 Red Channel'
				int input2green = SDValueInt(int(5))
					Label: 'Input 2 Green Channel'
					Description: 'Input 2 Green Channel'
				int input2blue = SDValueInt(int(6))
					Label: 'Input 2 Blue Channel'
					Description: 'Input 2 Blue Channel'
				int input2alpha = SDValueInt(int(7))
					Label: 'Input 2 Alpha Channel'
					Description: 'Input 2 Alpha Channel'
		[8/17] 'sbs::compositing::channelblue'
			'sbs::compositing::channelblue' (SDTypeEnum)
				int input1red = SDValueInt(int(0))
					Label: 'Input 1 Red Channel'
					Description: 'Input 1 Red Channel'
				int input1green = SDValueInt(int(1))
					Label: 'Input 1 Green Channel'
					Description: 'Input 1 Green Channel'
				int input1blue = SDValueInt(int(2))
					Label: 'Input 1 Blue Channel'
					Description: 'Input 1 Blue Channel'
				int input1alpha = SDValueInt(int(3))
					Label: 'Input 1 Alpha Channel'
					Description: 'Input 1 Alpha Channel'
				int input2red = SDValueInt(int(4))
					Label: 'Input 2 Red Channel'
					Description: 'Input 2 Red Channel'
				int input2green = SDValueInt(int(5))
					Label: 'Input 2 Green Channel'
					Description: 'Input 2 Green Channel'
				int input2blue = SDValueInt(int(6))
					Label: 'Input 2 Blue Channel'
					Description: 'Input 2 Blue Channel'
				int input2alpha = SDValueInt(int(7))
					Label: 'Input 2 Alpha Channel'
					Description: 'Input 2 Alpha Channel'
		[9/17] 'sbs::compositing::channelgreen'
			'sbs::compositing::channelgreen' (SDTypeEnum)
				int input1red = SDValueInt(int(0))
					Label: 'Input 1 Red Channel'
					Description: 'Input 1 Red Channel'
				int input1green = SDValueInt(int(1))
					Label: 'Input 1 Green Channel'
					Description: 'Input 1 Green Channel'
				int input1blue = SDValueInt(int(2))
					Label: 'Input 1 Blue Channel'
					Description: 'Input 1 Blue Channel'
				int input1alpha = SDValueInt(int(3))
					Label: 'Input 1 Alpha Channel'
					Description: 'Input 1 Alpha Channel'
				int input2red = SDValueInt(int(4))
					Label: 'Input 2 Red Channel'
					Description: 'Input 2 Red Channel'
				int input2green = SDValueInt(int(5))
					Label: 'Input 2 Green Channel'
					Description: 'Input 2 Green Channel'
				int input2blue = SDValueInt(int(6))
					Label: 'Input 2 Blue Channel'
					Description: 'Input 2 Blue Channel'
				int input2alpha = SDValueInt(int(7))
					Label: 'Input 2 Alpha Channel'
					Description: 'Input 2 Alpha Channel'
		[10/17] 'sbs::compositing::channelred'
			'sbs::compositing::channelred' (SDTypeEnum)
				int input1red = SDValueInt(int(0))
					Label: 'Input 1 Red Channel'
					Description: 'Input 1 Red Channel'
				int input1green = SDValueInt(int(1))
					Label: 'Input 1 Green Channel'
					Description: 'Input 1 Green Channel'
				int input1blue = SDValueInt(int(2))
					Label: 'Input 1 Blue Channel'
					Description: 'Input 1 Blue Channel'
				int input1alpha = SDValueInt(int(3))
					Label: 'Input 1 Alpha Channel'
					Description: 'Input 1 Alpha Channel'
				int input2red = SDValueInt(int(4))
					Label: 'Input 2 Red Channel'
					Description: 'Input 2 Red Channel'
				int input2green = SDValueInt(int(5))
					Label: 'Input 2 Green Channel'
					Description: 'Input 2 Green Channel'
				int input2blue = SDValueInt(int(6))
					Label: 'Input 2 Blue Channel'
					Description: 'Input 2 Blue Channel'
				int input2alpha = SDValueInt(int(7))
					Label: 'Input 2 Alpha Channel'
					Description: 'Input 2 Alpha Channel'
		[11/17] 'sbs::compositing::blendingmode'
			'sbs::compositing::blendingmode' (SDTypeEnum)
				int copy = SDValueInt(int(0))
					Label: 'Copy'
					Description: 'Copy'
				int add = SDValueInt(int(1))
					Label: 'Add (Linear Dodge)'
					Description: 'Add (Linear Dodge)'
				int substract = SDValueInt(int(2))
					Label: 'Subtract'
					Description: 'Subtract'
				int multiply = SDValueInt(int(3))
					Label: 'Multiply'
					Description: 'Multiply'
				int addsub = SDValueInt(int(4))
					Label: 'Add Sub'
					Description: 'Add Sub'
				int max = SDValueInt(int(5))
					Label: 'Max (Lighten)'
					Description: 'Max (Lighten)'
				int min = SDValueInt(int(6))
					Label: 'Min (Darken)'
					Description: 'Min (Darken)'
				int switch = SDValueInt(int(7))
					Label: 'Switch'
					Description: 'Switch'
				int divide = SDValueInt(int(8))
					Label: 'Divide'
					Description: 'Divide'
				int overlay = SDValueInt(int(9))
					Label: 'Overlay'
					Description: 'Overlay'
				int screen = SDValueInt(int(10))
					Label: 'Screen'
					Description: 'Screen'
				int softlight = SDValueInt(int(11))
					Label: 'Soft Light'
					Description: 'Soft Light'
		[12/17] 'sbs::compositing::curve_key'
			'sbs::compositing::curve_key' (SDTypeStruct)
				float2 position
					Label: 'Luminance Position'
					Description: 'Luminance Position'
				bool isLocked
					Label: 'Luminance Locked'
					Description: 'Luminance Locked'
				float2 left
					Label: 'Luminance Left Tangent Handle'
					Description: 'Luminance Left Tangent Handle'
				bool isLeftBroken
					Label: 'Luminance Left Broken'
					Description: 'Luminance Left Broken'
				float2 right
					Label: 'Luminance Right Tangent Handle'
					Description: 'Luminance Right Tangent Handle'
				bool isRightBroken
					Label: 'Luminance Right Broken'
					Description: 'Luminance Right Broken'
		[13/17] 'sbs::compositing::resizemethod'
			'sbs::compositing::resizemethod' (SDTypeEnum)
				int stretchbilinear = SDValueInt(int(0))
					Label: 'Smooth stretch'
					Description: 'Smooth stretch'
				int stretchnearest = SDValueInt(int(1))
					Label: 'Nearest stretch'
					Description: 'Nearest stretch'
		[14/17] 'sbs::compositing::colorblending'
			'sbs::compositing::colorblending' (SDTypeEnum)
				int usesourcealpha = SDValueInt(int(0))
					Label: 'Use Source Alpha'
					Description: 'Use Source Alpha'
				int ignorealpha = SDValueInt(int(1))
					Label: 'Ignore Alpha'
					Description: 'Ignore Alpha'
				int straight = SDValueInt(int(2))
					Label: 'Straight Alpha Blending'
					Description: 'Straight Alpha Blending'
				int premul = SDValueInt(int(3))
					Label: 'Premultiplied Alpha Blending (Copy only)'
					Description: 'Premultiplied Alpha Blending (Copy only)'
		[15/17] 'sbs::compositing::format'
			'sbs::compositing::format' (SDTypeEnum)
				int 8_bits_per_channel = SDValueInt(int(0))
					Label: '8 Bits per Channel'
					Description: '8 Bits per Channel'
				int 16_bits_per_channel = SDValueInt(int(1))
					Label: '16 Bits per Channel'
					Description: '16 Bits per Channel'
				int hdr_low_precision = SDValueInt(int(2))
					Label: 'HDR Low Precision (16F)'
					Description: 'HDR Low Precision (16F)'
				int hdr_high_precision = SDValueInt(int(3))
					Label: 'HDR High Precision (32F)'
					Description: 'HDR High Precision (32F)'
		[16/17] 'sbs::compositing::tiling'
			'sbs::compositing::tiling' (SDTypeEnum)
				int no_tiling = SDValueInt(int(0))
					Label: 'No Tiling'
					Description: 'No Tiling'
				int horizontal_tiling = SDValueInt(int(1))
					Label: 'Horizontal Tiling'
					Description: 'Horizontal Tiling'
				int vertical_tiling = SDValueInt(int(2))
					Label: 'Vertical Tiling'
					Description: 'Vertical Tiling'
				int h_and_v_tiling = SDValueInt(int(3))
					Label: 'H and V Tiling'
					Description: 'H and V Tiling'
		[17/17] 'sbs::compositing::pixelratio'
			'sbs::compositing::pixelratio' (SDTypeEnum)
				int stretch = SDValueInt(int(0))
					Label: 'Stretch'
					Description: 'Stretch'
				int square = SDValueInt(int(1))
					Label: 'Square'
					Description: 'Square'
[1/37] 'sbs::function' (SDModule)
	Definitions:
		[1/84] 'sbs::function::const_float1'
			Label: 'Float'
			Description: 'The <b>Float</b> function defines a constant floating value'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueFloat(float(0)) 
					Label: 'Constant'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Float'
					Description: 'The <b>Float</b> function defines a constant floating value'
					Types:
						'float' (SDTypeFloat)
				
		[2/84] 'sbs::function::const_float2'
			Label: 'Float2'
			Description: 'The <b>Float2</b> function defines a constant two floating values vector'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueFloat2(float2(0,0)) 
					Label: 'Constant'
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Float2'
					Description: 'The <b>Float2</b> function defines a constant two floating values vector'
					Types:
						'float2' (SDTypeFloat2)
				
		[3/84] 'sbs::function::const_float3'
			Label: 'Float3'
			Description: 'The <b>Float3</b> function defines a constant three floating values vector'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueFloat3(float3(0,0,0)) 
					Label: 'Constant'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Float3'
					Description: 'The <b>Float3</b> function defines a constant three floating values vector'
					Types:
						'float3' (SDTypeFloat3)
				
		[4/84] 'sbs::function::const_float4'
			Label: 'Float4'
			Description: 'The <b>Float4</b> function defines a constant four floating values vector'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueFloat4(float4(0,0,0,0)) 
					Label: 'Constant'
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Float4'
					Description: 'The <b>Float4</b> function defines a constant four floating values vector'
					Types:
						'float4' (SDTypeFloat4)
				
		[5/84] 'sbs::function::const_int1'
			Label: 'Integer'
			Description: 'The <b>Integer</b> function defines a constant integer'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueInt(int(0)) 
					Label: 'Constant'
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Integer'
					Description: 'The <b>Integer</b> function defines a constant integer'
					Types:
						'int' (SDTypeInt)
				
		[6/84] 'sbs::function::const_int2'
			Label: 'Integer2'
			Description: 'The <b>Integer2</b> function defines a constant two integers vector'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueInt2(int2(0,0)) 
					Label: 'Constant'
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Integer2'
					Description: 'The <b>Integer2</b> function defines a constant two integers vector'
					Types:
						'int2' (SDTypeInt2)
				
		[7/84] 'sbs::function::const_int3'
			Label: 'Integer3'
			Description: 'The <b>Integer3</b> function defines a constant three integers vector'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueInt3(int3(0,0,0)) 
					Label: 'Constant'
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Integer3'
					Description: 'The <b>Integer3</b> function defines a constant three integers vector'
					Types:
						'int3' (SDTypeInt3)
				
		[8/84] 'sbs::function::const_int4'
			Label: 'Integer4'
			Description: 'The <b>Integer4</b> function defines a constant four integers vector'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueInt4(int4(0,0,0,0)) 
					Label: 'Constant'
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Integer4'
					Description: 'The <b>Integer4</b> function defines a constant four integers vector'
					Types:
						'int4' (SDTypeInt4)
				
		[9/84] 'sbs::function::const_bool'
			Label: 'Boolean'
			Description: 'The <b>Boolean</b> function defines a constant boolean'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueBool(bool(false)) 
					Label: 'Constant'
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Boolean'
					Description: 'The <b>Boolean</b> function defines a constant boolean'
					Types:
						'bool' (SDTypeBool)
				
		[10/84] 'sbs::function::const_string'
			Label: 'String'
			Description: 'The <b>Path</b> function defines a constant string'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueString(string()) 
					Label: 'Constant'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'String'
					Description: 'The <b>Path</b> function defines a constant string'
					Types:
						'string' (SDTypeString)
				
		[11/84] 'sbs::function::vector2'
			Label: 'Vector Float2'
			Description: 'The <b>Vector Float2</b> function casts two floating values in a vector with two coordinates'
			SDPropertyCategory = 'Input'
				'componentsin' [CONNECTABLE, READ_ONLY]
					Label: 'In'
					Types:
						'float' (SDTypeFloat)
				'componentslast' [CONNECTABLE, READ_ONLY]
					Label: 'Last'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Vector Float2'
					Description: 'The <b>Vector Float2</b> function casts two floating values in a vector with two coordinates'
					Types:
						'float2' (SDTypeFloat2)
				
		[12/84] 'sbs::function::vector3'
			Label: 'Vector Float3'
			Description: 'The <b>Vector Float3</b> function casts two floating values into a vector with three coordinates'
			SDPropertyCategory = 'Input'
				'componentsin' [CONNECTABLE, READ_ONLY]
					Label: 'In'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
				'componentslast' [CONNECTABLE, READ_ONLY]
					Label: 'Last'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Vector Float3'
					Description: 'The <b>Vector Float3</b> function casts two floating values into a vector with three coordinates'
					Types:
						'float3' (SDTypeFloat3)
				
		[13/84] 'sbs::function::vector4'
			Label: 'Vector Float4'
			Description: 'The <b>Vector Float4</b> function casts two floating values into a vector with four coordinates'
			SDPropertyCategory = 'Input'
				'componentsin' [CONNECTABLE, READ_ONLY]
					Label: 'In'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
				'componentslast' [CONNECTABLE, READ_ONLY]
					Label: 'Last'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Vector Float4'
					Description: 'The <b>Vector Float4</b> function casts two floating values into a vector with four coordinates'
					Types:
						'float4' (SDTypeFloat4)
				
		[14/84] 'sbs::function::swizzle1'
			Label: 'Swizzle Float1'
			Description: 'The <b>Swizzle Float1</b> function extracts a single specified coordinate from the input Vector'
			SDPropertyCategory = 'Input'
				'vector' [CONNECTABLE, READ_ONLY]
					Label: 'Vector'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'__constant__' = SDValueInt(int(0)) 
					Label: 'Constant'
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Swizzle Float1'
					Description: 'The <b>Swizzle Float1</b> function extracts a single specified coordinate from the input Vector'
					Types:
						'float' (SDTypeFloat)
				
		[15/84] 'sbs::function::swizzle2'
			Label: 'Swizzle Float2'
			Description: 'The <b>Swizzle Float2</b> function extracts two specified coordinates from the input Vector'
			SDPropertyCategory = 'Input'
				'vector' [CONNECTABLE, READ_ONLY]
					Label: 'Vector'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'__constant__' = SDValueInt2(int2(0,0)) 
					Label: 'Constant'
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Swizzle Float2'
					Description: 'The <b>Swizzle Float2</b> function extracts two specified coordinates from the input Vector'
					Types:
						'float2' (SDTypeFloat2)
				
		[16/84] 'sbs::function::swizzle3'
			Label: 'Swizzle Float3'
			Description: 'The <b>Swizzle Float3</b> function extracts three specified coordinates from the input Vector'
			SDPropertyCategory = 'Input'
				'vector' [CONNECTABLE, READ_ONLY]
					Label: 'Vector'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'__constant__' = SDValueInt3(int3(0,0,0)) 
					Label: 'Constant'
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Swizzle Float3'
					Description: 'The <b>Swizzle Float3</b> function extracts three specified coordinates from the input Vector'
					Types:
						'float3' (SDTypeFloat3)
				
		[17/84] 'sbs::function::swizzle4'
			Label: 'Swizzle Float4'
			Description: 'The <b>Swizzle Float4</b> function extracts four specified coordinates from the input Vector'
			SDPropertyCategory = 'Input'
				'vector' [CONNECTABLE, READ_ONLY]
					Label: 'Vector'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'__constant__' = SDValueInt4(int4(0,0,0,0)) 
					Label: 'Constant'
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Swizzle Float4'
					Description: 'The <b>Swizzle Float4</b> function extracts four specified coordinates from the input Vector'
					Types:
						'float4' (SDTypeFloat4)
				
		[18/84] 'sbs::function::ivector2'
			Label: 'Vector Integer2'
			Description: 'The <b>Vector Integer2</b> function casts two integer values in a vector with two coordinates'
			SDPropertyCategory = 'Input'
				'componentsin' [CONNECTABLE, READ_ONLY]
					Label: 'In'
					Types:
						'int' (SDTypeInt)
				'componentslast' [CONNECTABLE, READ_ONLY]
					Label: 'Last'
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Vector Integer2'
					Description: 'The <b>Vector Integer2</b> function casts two integer values in a vector with two coordinates'
					Types:
						'int2' (SDTypeInt2)
				
		[19/84] 'sbs::function::ivector3'
			Label: 'Vector Integer3'
			Description: 'The <b>Vector Integer3</b> function casts two integer values in a vector with three coordinates'
			SDPropertyCategory = 'Input'
				'componentsin' [CONNECTABLE, READ_ONLY]
					Label: 'In'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
				'componentslast' [CONNECTABLE, READ_ONLY]
					Label: 'Last'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Vector Integer3'
					Description: 'The <b>Vector Integer3</b> function casts two integer values in a vector with three coordinates'
					Types:
						'int3' (SDTypeInt3)
				
		[20/84] 'sbs::function::ivector4'
			Label: 'Vector Integer4'
			Description: 'The <b>Vector Integer4</b> function casts two integer values in a vector with four coordinates'
			SDPropertyCategory = 'Input'
				'componentsin' [CONNECTABLE, READ_ONLY]
					Label: 'In'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
				'componentslast' [CONNECTABLE, READ_ONLY]
					Label: 'Last'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Vector Integer4'
					Description: 'The <b>Vector Integer4</b> function casts two integer values in a vector with four coordinates'
					Types:
						'int4' (SDTypeInt4)
				
		[21/84] 'sbs::function::iswizzle1'
			Label: 'Swizzle Integer1'
			Description: 'The <b>Swizzle Integer1</b> function extracts a single specified integer coordinate from the input Vector'
			SDPropertyCategory = 'Input'
				'vector' [CONNECTABLE, READ_ONLY]
					Label: 'Vector'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
				'__constant__' = SDValueInt(int(0)) 
					Label: 'Constant'
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Swizzle Integer1'
					Description: 'The <b>Swizzle Integer1</b> function extracts a single specified integer coordinate from the input Vector'
					Types:
						'int' (SDTypeInt)
				
		[22/84] 'sbs::function::iswizzle2'
			Label: 'Swizzle Integer2'
			Description: 'The <b>Swizzle Integer2</b> function extracts two specified integer coordinates from the input Vector'
			SDPropertyCategory = 'Input'
				'vector' [CONNECTABLE, READ_ONLY]
					Label: 'Vector'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
				'__constant__' = SDValueInt2(int2(0,0)) 
					Label: 'Constant'
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Swizzle Integer2'
					Description: 'The <b>Swizzle Integer2</b> function extracts two specified integer coordinates from the input Vector'
					Types:
						'int2' (SDTypeInt2)
				
		[23/84] 'sbs::function::iswizzle3'
			Label: 'Swizzle Integer3'
			Description: 'The <b>Swizzle Integer3</b> function extracts three specified integer coordinates from the input Vector'
			SDPropertyCategory = 'Input'
				'vector' [CONNECTABLE, READ_ONLY]
					Label: 'Vector'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
				'__constant__' = SDValueInt3(int3(0,0,0)) 
					Label: 'Constant'
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Swizzle Integer3'
					Description: 'The <b>Swizzle Integer3</b> function extracts three specified integer coordinates from the input Vector'
					Types:
						'int3' (SDTypeInt3)
				
		[24/84] 'sbs::function::iswizzle4'
			Label: 'Swizzle Integer4'
			Description: 'The <b>Swizzle Integer4</b> function extracts four specified integer coordinates from the input Vector'
			SDPropertyCategory = 'Input'
				'vector' [CONNECTABLE, READ_ONLY]
					Label: 'Vector'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
				'__constant__' = SDValueInt4(int4(0,0,0,0)) 
					Label: 'Constant'
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Swizzle Integer4'
					Description: 'The <b>Swizzle Integer4</b> function extracts four specified integer coordinates from the input Vector'
					Types:
						'int4' (SDTypeInt4)
				
		[25/84] 'sbs::function::set'
			Label: 'Set'
			Description: 'The <b>Set</b> node lets you assign a value to a <i>variable</i> with a custom name, and outputs the same value. If the variable does not exist, it is initialised. If it does, its value is updated.'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE, READ_ONLY]
					Label: 'Value'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
				'__constant__' = SDValueString(string()) 
					Label: 'Constant'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Set'
					Description: 'The <b>Set</b> node lets you assign a value to a <i>variable</i> with a custom name, and outputs the same value. If the variable does not exist, it is initialised. If it does, its value is updated.'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
				
		[26/84] 'sbs::function::get_float1'
			Label: 'Get Float'
			Description: 'The <b>Get Float</b> function accesses a function's or graph's  floating value input(s)'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueString(string()) 
					Label: 'Constant'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Get Float'
					Description: 'The <b>Get Float</b> function accesses a function's or graph's  floating value input(s)'
					Types:
						'float' (SDTypeFloat)
				
		[27/84] 'sbs::function::get_float2'
			Label: 'Get Float2'
			Description: 'The <b>Get Float2</b> function accesses a function's or graph's two floating values vector input(s)'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueString(string()) 
					Label: 'Constant'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Get Float2'
					Description: 'The <b>Get Float2</b> function accesses a function's or graph's two floating values vector input(s)'
					Types:
						'float2' (SDTypeFloat2)
				
		[28/84] 'sbs::function::get_float3'
			Label: 'Get Float3'
			Description: 'The <b>Get Float3</b> function accesses a function's or graph's three floating values vector input(s)'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueString(string()) 
					Label: 'Constant'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Get Float3'
					Description: 'The <b>Get Float3</b> function accesses a function's or graph's three floating values vector input(s)'
					Types:
						'float3' (SDTypeFloat3)
				
		[29/84] 'sbs::function::get_float4'
			Label: 'Get Float4'
			Description: 'The <b>Get Float4</b> function accesses a function's or graph's four floating values vector input(s)'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueString(string()) 
					Label: 'Constant'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Get Float4'
					Description: 'The <b>Get Float4</b> function accesses a function's or graph's four floating values vector input(s)'
					Types:
						'float4' (SDTypeFloat4)
				
		[30/84] 'sbs::function::get_integer1'
			Label: 'Get Integer'
			Description: 'The <b>Get Integer</b> function accesses a function's or graph's integer input(s)'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueString(string()) 
					Label: 'Constant'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Get Integer'
					Description: 'The <b>Get Integer</b> function accesses a function's or graph's integer input(s)'
					Types:
						'int' (SDTypeInt)
				
		[31/84] 'sbs::function::get_integer2'
			Label: 'Get Integer2'
			Description: 'The <b>Get Integer2</b> function accesses a function's or graph's two integers vector input(s)'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueString(string()) 
					Label: 'Constant'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Get Integer2'
					Description: 'The <b>Get Integer2</b> function accesses a function's or graph's two integers vector input(s)'
					Types:
						'int2' (SDTypeInt2)
				
		[32/84] 'sbs::function::get_integer3'
			Label: 'Get Integer3'
			Description: 'The <b>Get Integer3</b> function accesses a function's or graph's three integers vector input(s)'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueString(string()) 
					Label: 'Constant'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Get Integer3'
					Description: 'The <b>Get Integer3</b> function accesses a function's or graph's three integers vector input(s)'
					Types:
						'int3' (SDTypeInt3)
				
		[33/84] 'sbs::function::get_integer4'
			Label: 'Get Integer4'
			Description: 'The <b>Get Integer4</b> function accesses a function's or graph's four integers vector input(s)'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueString(string()) 
					Label: 'Constant'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Get Integer4'
					Description: 'The <b>Get Integer4</b> function accesses a function's or graph's four integers vector input(s)'
					Types:
						'int4' (SDTypeInt4)
				
		[34/84] 'sbs::function::get_bool'
			Label: 'Get Boolean'
			Description: 'The <b>Get Boolean</b> function accesses a function's or graph's boolean input(s)'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueString(string()) 
					Label: 'Constant'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Get Boolean'
					Description: 'The <b>Get Boolean</b> function accesses a function's or graph's boolean input(s)'
					Types:
						'bool' (SDTypeBool)
				
		[35/84] 'sbs::function::get_string'
			Label: 'Get String'
			Description: 'The <b>Get String</b> function accesses a function's or graph's string input(s)'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueString(string()) 
					Label: 'Constant'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Get String'
					Description: 'The <b>Get String</b> function accesses a function's or graph's string input(s)'
					Types:
						'string' (SDTypeString)
				
		[36/84] 'sbs::function::samplelum'
			Label: 'Sample Gray'
			Description: 'Returns the grayscale pixel value of input image.'
			SDPropertyCategory = 'Input'
				'pos' [CONNECTABLE, READ_ONLY]
					Label: 'Position'
					Types:
						'float2' (SDTypeFloat2)
				'__constant__' = SDValueInt2(int2(0,0)) 
					Label: 'Constant'
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Sample Gray'
					Description: 'Returns the grayscale pixel value of input image.'
					Types:
						'float' (SDTypeFloat)
				
		[37/84] 'sbs::function::samplecol'
			Label: 'Sample Color'
			Description: 'Returns the color pixel value of input image.'
			SDPropertyCategory = 'Input'
				'pos' [CONNECTABLE, READ_ONLY]
					Label: 'Position'
					Types:
						'float2' (SDTypeFloat2)
				'__constant__' = SDValueInt2(int2(0,0)) 
					Label: 'Constant'
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Sample Color'
					Description: 'Returns the color pixel value of input image.'
					Types:
						'float4' (SDTypeFloat4)
				
		[38/84] 'sbs::function::tofloat'
			Label: 'To Float'
			Description: 'The <b>To Float</b> function converts integer to floating value'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE, READ_ONLY]
					Label: 'Value'
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'To Float'
					Description: 'The <b>To Float</b> function converts integer to floating value'
					Types:
						'float' (SDTypeFloat)
				
		[39/84] 'sbs::function::tofloat2'
			Label: 'To Float2'
			Description: 'The <b>To Float2</b> function converts two integer values to floating point values'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE, READ_ONLY]
					Label: 'Value'
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'To Float2'
					Description: 'The <b>To Float2</b> function converts two integer values to floating point values'
					Types:
						'float2' (SDTypeFloat2)
				
		[40/84] 'sbs::function::tofloat3'
			Label: 'To Float3'
			Description: 'The <b>To Float3</b> function converts three integer values to floating point values'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE, READ_ONLY]
					Label: 'Value'
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'To Float3'
					Description: 'The <b>To Float3</b> function converts three integer values to floating point values'
					Types:
						'float3' (SDTypeFloat3)
				
		[41/84] 'sbs::function::tofloat4'
			Label: 'To Float4'
			Description: 'The <b>To Float4</b> function converts four integer values to floating point values'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE, READ_ONLY]
					Label: 'Value'
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'To Float4'
					Description: 'The <b>To Float4</b> function converts four integer values to floating point values'
					Types:
						'float4' (SDTypeFloat4)
				
		[42/84] 'sbs::function::toint1'
			Label: 'To Integer'
			Description: 'The <b>To Integer</b> function converts floating value to integer'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE, READ_ONLY]
					Label: 'Value'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'To Integer'
					Description: 'The <b>To Integer</b> function converts floating value to integer'
					Types:
						'int' (SDTypeInt)
				
		[43/84] 'sbs::function::toint2'
			Label: 'To Integer2'
			Description: 'The <b>To Integer2</b> function converts two floating values to integers '
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE, READ_ONLY]
					Label: 'Value'
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'To Integer2'
					Description: 'The <b>To Integer2</b> function converts two floating values to integers '
					Types:
						'int2' (SDTypeInt2)
				
		[44/84] 'sbs::function::toint3'
			Label: 'To Integer3'
			Description: 'The <b>To Integer3</b> function converts three floating values to integers '
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE, READ_ONLY]
					Label: 'Value'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'To Integer3'
					Description: 'The <b>To Integer3</b> function converts three floating values to integers '
					Types:
						'int3' (SDTypeInt3)
				
		[45/84] 'sbs::function::toint4'
			Label: 'To Integer4'
			Description: 'The <b>To Integer4</b> function converts four floating values to integers '
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE, READ_ONLY]
					Label: 'Value'
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'To Integer4'
					Description: 'The <b>To Integer4</b> function converts four floating values to integers '
					Types:
						'int4' (SDTypeInt4)
				
		[46/84] 'sbs::function::add'
			Label: 'Add'
			Description: 'The <b>Add</b> function adds two same type values: a+b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Add'
					Description: 'The <b>Add</b> function adds two same type values: a+b'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[47/84] 'sbs::function::sub'
			Label: 'Subtraction'
			Description: 'The <b>Subtraction</b> function substracts two same type values: a-b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Subtraction'
					Description: 'The <b>Subtraction</b> function substracts two same type values: a-b'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[48/84] 'sbs::function::mul'
			Label: 'Multiplication'
			Description: 'The <b>Multiplication</b> function multiplies two same type values: a × b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Multiplication'
					Description: 'The <b>Multiplication</b> function multiplies two same type values: a × b'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[49/84] 'sbs::function::mulscalar'
			Label: 'Scalar Multiplication'
			Description: 'The <b>Scalar Multiplication</b> function multiplies each component of the input <b>Vector</b> by the same scalar value <b>Scale</b>'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'Vector'
					Types:
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'scalar' [CONNECTABLE, READ_ONLY]
					Label: 'Scale'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Scalar Multiplication'
					Description: 'The <b>Scalar Multiplication</b> function multiplies each component of the input <b>Vector</b> by the same scalar value <b>Scale</b>'
					Types:
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[50/84] 'sbs::function::div'
			Label: 'Division'
			Description: 'The <b>Division</b> function divides two same type values: a/b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Division'
					Description: 'The <b>Division</b> function divides two same type values: a/b'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[51/84] 'sbs::function::neg'
			Label: 'Negation'
			Description: 'The <b>Negation</b> function returns the opposite value of its input: -X'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'X'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Negation'
					Description: 'The <b>Negation</b> function returns the opposite value of its input: -X'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[52/84] 'sbs::function::mod'
			Label: 'Modulo'
			Description: 'The <b>Modulo</b> function returns modulo of entry value: mod(a,divisor)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'Divisor'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Modulo'
					Description: 'The <b>Modulo</b> function returns modulo of entry value: mod(a,divisor)'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[53/84] 'sbs::function::dot'
			Label: 'Dot Product'
			Description: 'The <b>Dot product</b> function returns dot product between two same type values: dot(a,b)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Dot Product'
					Description: 'The <b>Dot product</b> function returns dot product between two same type values: dot(a,b)'
					Types:
						'float' (SDTypeFloat)
				
		[54/84] 'sbs::function::and'
			Label: 'And'
			Description: 'The <b>And</b> function returns true if the two boolean entries values are true: a&b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'bool' (SDTypeBool)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'And'
					Description: 'The <b>And</b> function returns true if the two boolean entries values are true: a&b'
					Types:
						'bool' (SDTypeBool)
				
		[55/84] 'sbs::function::or'
			Label: 'Or'
			Description: 'The <b>Or</b> function returns true if one of the two boolean entries values are true: a|b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'bool' (SDTypeBool)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Or'
					Description: 'The <b>Or</b> function returns true if one of the two boolean entries values are true: a|b'
					Types:
						'bool' (SDTypeBool)
				
		[56/84] 'sbs::function::not'
			Label: 'Not'
			Description: 'The <b>Not</b> function returns the negation boolean of entry: !x'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Not'
					Description: 'The <b>Not</b> function returns the negation boolean of entry: !x'
					Types:
						'bool' (SDTypeBool)
				
		[57/84] 'sbs::function::eq'
			Label: 'Equal'
			Description: 'The <b>Equal</b> function returns true if entries values are equal: a=b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Equal'
					Description: 'The <b>Equal</b> function returns true if entries values are equal: a=b'
					Types:
						'bool' (SDTypeBool)
				
		[58/84] 'sbs::function::noteq'
			Label: 'Not Equal'
			Description: 'The <b>Not Equal</b> function returns true if entries values are different: a ≠ b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Not Equal'
					Description: 'The <b>Not Equal</b> function returns true if entries values are different: a ≠ b'
					Types:
						'bool' (SDTypeBool)
				
		[59/84] 'sbs::function::gt'
			Label: 'Greater'
			Description: 'The <b>Greater</b> function returns true if first entry is greater than second entry: a>b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Greater'
					Description: 'The <b>Greater</b> function returns true if first entry is greater than second entry: a>b'
					Types:
						'bool' (SDTypeBool)
				
		[60/84] 'sbs::function::gteq'
			Label: 'Greater or Equal'
			Description: 'The <b>Greater or Equal</b> function returns true if first entry is greater than second entry or equal: a ≥ b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Greater or Equal'
					Description: 'The <b>Greater or Equal</b> function returns true if first entry is greater than second entry or equal: a ≥ b'
					Types:
						'bool' (SDTypeBool)
				
		[61/84] 'sbs::function::lr'
			Label: 'Lower'
			Description: 'The <b>Lower</b> function returns true if first entry is lower than second entry: a &lt b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Lower'
					Description: 'The <b>Lower</b> function returns true if first entry is lower than second entry: a &lt b'
					Types:
						'bool' (SDTypeBool)
				
		[62/84] 'sbs::function::lreq'
			Label: 'Lower or Equal'
			Description: 'The <b>Lower or Equal</b> function returns true if first entry is lower than second entry or equal: a ≤ b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Lower or Equal'
					Description: 'The <b>Lower or Equal</b> function returns true if first entry is lower than second entry or equal: a ≤ b'
					Types:
						'bool' (SDTypeBool)
				
		[63/84] 'sbs::function::abs'
			Label: 'Absolute'
			Description: 'The <b>Absolute</b> function returns the absolute value of its input: abs(X)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'X'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Absolute'
					Description: 'The <b>Absolute</b> function returns the absolute value of its input: abs(X)'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[64/84] 'sbs::function::floor'
			Label: 'Floor'
			Description: 'The <b>Floor</b> function rounds its input value down. It returns the largest integer value not greater than X: floor(X)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'X'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Floor'
					Description: 'The <b>Floor</b> function rounds its input value down. It returns the largest integer value not greater than X: floor(X)'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[65/84] 'sbs::function::ceil'
			Label: 'Ceil'
			Description: 'The <b>Ceil</b> function rounds its input value up. It returns the smallest integer value not less than X: ceil(X)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'X'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Ceil'
					Description: 'The <b>Ceil</b> function rounds its input value up. It returns the smallest integer value not less than X: ceil(X)'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[66/84] 'sbs::function::cos'
			Label: 'Cosine'
			Description: 'The <b>Cosine</b> function returns the cosine value of its input value in radians: cos(X)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'X'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Cosine'
					Description: 'The <b>Cosine</b> function returns the cosine value of its input value in radians: cos(X)'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[67/84] 'sbs::function::sin'
			Label: 'Sine'
			Description: 'The <b>Sine</b> function returns the sine value of its input value in radians: sin(X)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'X'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Sine'
					Description: 'The <b>Sine</b> function returns the sine value of its input value in radians: sin(X)'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[68/84] 'sbs::function::tan'
			Label: 'Tangent'
			Description: 'The <b>Tangent</b> function returns the tangent value of its input value in radians: tan(X)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'X'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Tangent'
					Description: 'The <b>Tangent</b> function returns the tangent value of its input value in radians: tan(X)'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[69/84] 'sbs::function::atan2'
			Label: 'Arc Tangent 2'
			Description: 'The <b>Arc Tangent 2</b> function returns the angle in radians between the 2D vector <b>Vector</b> and the horizontal. (No need to switch x and y as in the usual atan2 function.)<br/>It is the reciprocal of the <b>Cartesian</b> function'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'Vector'
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Arc Tangent 2'
					Description: 'The <b>Arc Tangent 2</b> function returns the angle in radians between the 2D vector <b>Vector</b> and the horizontal. (No need to switch x and y as in the usual atan2 function.)<br/>It is the reciprocal of the <b>Cartesian</b> function'
					Types:
						'float' (SDTypeFloat)
				
		[70/84] 'sbs::function::cartesian'
			Label: 'Cartesian'
			Description: 'The <b>Cartesian</b> function converts polar coordinates to cartesian coordinates. (Polar coordinates are a distance from the origin and an angle in radians from the horizontal.)<br/>It is the reciprocal of the <b>Arc Tangent 2</b> function: <nobr>Length × Float2(cos(Angle), sin(Angle))</nobr>'
			SDPropertyCategory = 'Input'
				'rho' [CONNECTABLE, READ_ONLY]
					Label: 'Length'
					Types:
						'float' (SDTypeFloat)
				'theta' [CONNECTABLE, READ_ONLY]
					Label: 'Angle'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Cartesian'
					Description: 'The <b>Cartesian</b> function converts polar coordinates to cartesian coordinates. (Polar coordinates are a distance from the origin and an angle in radians from the horizontal.)<br/>It is the reciprocal of the <b>Arc Tangent 2</b> function: <nobr>Length × Float2(cos(Angle), sin(Angle))</nobr>'
					Types:
						'float2' (SDTypeFloat2)
				
		[71/84] 'sbs::function::sqrt'
			Label: 'Square Root'
			Description: 'The <b>Square Root</b> function returns the square root of its input value: √X'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'X'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Square Root'
					Description: 'The <b>Square Root</b> function returns the square root of its input value: √X'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[72/84] 'sbs::function::log'
			Label: 'Logarithm'
			Description: 'The <b>Logarithm</b> function returns the natural logarithm of its input value: ln(X)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'X'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Logarithm'
					Description: 'The <b>Logarithm</b> function returns the natural logarithm of its input value: ln(X)'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[73/84] 'sbs::function::exp'
			Label: 'Exponential'
			Description: 'The <b>Exponential</b> function returns the exponential value of its input value: <i>e</i><sup>X</sup> (with <i>e</i> ≈ 2.7182818)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'X'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Exponential'
					Description: 'The <b>Exponential</b> function returns the exponential value of its input value: <i>e</i><sup>X</sup> (with <i>e</i> ≈ 2.7182818)'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[74/84] 'sbs::function::log2'
			Label: 'Logarithm base 2'
			Description: 'The <b>Log2</b> function returns the <nobr>base 2</nobr> logarithm of its input value: log2(X)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'X'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Logarithm base 2'
					Description: 'The <b>Log2</b> function returns the <nobr>base 2</nobr> logarithm of its input value: log2(X)'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[75/84] 'sbs::function::pow2'
			Label: '2Pow'
			Description: 'The <b>2Pow</b> function returns 2 to the power of its input value: 2<sup>X</sup>'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'X'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: '2Pow'
					Description: 'The <b>2Pow</b> function returns 2 to the power of its input value: 2<sup>X</sup>'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[76/84] 'sbs::function::pow'
			Label: 'Pow'
			Description: 'The <b>Pow</b> function returns the first input raised to the power of the second input: X<sup>Y</sup>'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'X'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'Y'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Pow'
					Description: 'The <b>Pow</b> function returns the first input raised to the power of the second input: X<sup>Y</sup>'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[77/84] 'sbs::function::lerp'
			Label: 'Linear Interpolation'
			Description: 'The <b>Linear Interpolation</b> function returns the linear interpolation between two values in function of a floating value: (1-x)a+x × b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'x' [CONNECTABLE, READ_ONLY]
					Label: 'X'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Linear Interpolation'
					Description: 'The <b>Linear Interpolation</b> function returns the linear interpolation between two values in function of a floating value: (1-x)a+x × b'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[78/84] 'sbs::function::min'
			Label: 'Minimum'
			Description: 'The <b>Minimum</b> function returns minimum value of entries values: min(a,b)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Minimum'
					Description: 'The <b>Minimum</b> function returns minimum value of entries values: min(a,b)'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[79/84] 'sbs::function::max'
			Label: 'Maximum'
			Description: 'The <b>Maximum</b> function returns maximum value of entries values: max(a,b)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Maximum'
					Description: 'The <b>Maximum</b> function returns maximum value of entries values: max(a,b)'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[80/84] 'sbs::function::rand'
			Label: 'Random'
			Description: 'The <b>Random</b> function generates a random value between 0 and the input value <b>X</b>'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'X'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Random'
					Description: 'The <b>Random</b> function generates a random value between 0 and the input value <b>X</b>'
					Types:
						'float' (SDTypeFloat)
				
		[81/84] 'sbs::function::sequence'
			Label: 'Sequence'
			Description: 'The <b>Sequence</b> node ensures a portion of a Substance function graph (<b>In</b>) is computed <i>before</i> another portion (<b>Last</b>). The node then outputs the <b>Last</b> value.'
			SDPropertyCategory = 'Input'
				'seqin' [CONNECTABLE, READ_ONLY]
					Label: 'In'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
						'void' (SDTypeVoid)
				'seqlast' [CONNECTABLE, READ_ONLY]
					Label: 'Last'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
						'void' (SDTypeVoid)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Sequence'
					Description: 'The <b>Sequence</b> node ensures a portion of a Substance function graph (<b>In</b>) is computed <i>before</i> another portion (<b>Last</b>). The node then outputs the <b>Last</b> value.'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
						'void' (SDTypeVoid)
				
		[82/84] 'sbs::function::ifelse'
			Label: 'If...Else'
			Description: 'The <b>If...Else</b> function returns the second value if the boolean entry is true else returns the third entry'
			SDPropertyCategory = 'Input'
				'condition' [CONNECTABLE, READ_ONLY]
					Label: 'Condition'
					Types:
						'bool' (SDTypeBool)
				'ifpath' [CONNECTABLE, READ_ONLY]
					Label: 'If'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
						'void' (SDTypeVoid)
				'elsepath' [CONNECTABLE, READ_ONLY]
					Label: 'Else'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
						'void' (SDTypeVoid)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'If...Else'
					Description: 'The <b>If...Else</b> function returns the second value if the boolean entry is true else returns the third entry'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
						'void' (SDTypeVoid)
				
		[83/84] 'sbs::function::while'
			Label: 'While Loop'
			Description: 'The <b>While Loop</b> node will execute the <b>Init</b> branch once, 			then iterate over the <b>Exit Cond.</b> and <b>Loop Body</b> branches until the <b>Exit Cond.</b> 			branch returns true<br>Nodes connected to the <b>Exit Cond.</b> and <b>Loop Body</b> branches <b>cannot</b> 			be connected to other branches of the graph.<br>Loops have an implicit maximum number of iterations which 			can be disabled by setting it to -1.'
			SDPropertyCategory = 'Input'
				'init' [CONNECTABLE, READ_ONLY]
					Label: 'Init'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
						'void' (SDTypeVoid)
				'cond' [CONNECTABLE, READ_ONLY]
					Label: 'Exit Cond.'
					Types:
						'bool' (SDTypeBool)
				'loop' [CONNECTABLE, READ_ONLY]
					Label: 'Loop Body'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
						'void' (SDTypeVoid)
				'__constant__' = SDValueInt(int(0)) 
					Label: 'Constant'
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'While Loop'
					Description: 'The <b>While Loop</b> node will execute the <b>Init</b> branch once, 			then iterate over the <b>Exit Cond.</b> and <b>Loop Body</b> branches until the <b>Exit Cond.</b> 			branch returns true<br>Nodes connected to the <b>Exit Cond.</b> and <b>Loop Body</b> branches <b>cannot</b> 			be connected to other branches of the graph.<br>Loops have an implicit maximum number of iterations which 			can be disabled by setting it to -1.'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
						'void' (SDTypeVoid)
				
		[84/84] 'sbs::function::passthrough'
			Label: 'Dot'
			Description: 'The <b>Dot</b> function is doing a passthrough (output=input)'
			SDPropertyCategory = 'Input'
				'input' [CONNECTABLE, READ_ONLY]
					Label: 'Input'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
						'void' (SDTypeVoid)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Dot'
					Description: 'The <b>Dot</b> function is doing a passthrough (output=input)'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
						'void' (SDTypeVoid)
				
[2/37] 'sbs::fxmap' (SDModule)
	Definitions:
		[1/4] 'sbs::fxmap::paramset'
			Label: 'Quadrant'
			Description: 'Takes input image(s), positions them, and, if defined, also renders the node's own pattern or image'
			SDPropertyCategory = 'Input'
				'opacity' = SDValueFloat4(float4(1,1,1,1)) 
					Label: 'Color / Luminosity'
					Description: 'Pattern <B>Color / Luminosity</B> multiplier'
					Types:
						'float4' (SDTypeFloat4)
				'branchoffset' = SDValueFloat2(float2(0,0)) 
					Label: 'Branch Offset'
					Description: '<b>Branch Offset</b>. This value will be applied to the entire branch, beginning with this Parameter Set'
					Types:
						'float2' (SDTypeFloat2)
				'patterntype' = SDValueEnum("sbs::fxmap::patterntype",0) 
					Label: 'Pattern'
					Description: 'Select pattern'
					Types:
						'sbs::fxmap::patterntype' (SDTypeEnum)
						'int' (SDTypeInt)
				'frameoffset' = SDValueFloat2(float2(0,0)) 
					Label: 'Pattern  Offset'
					Description: '<b>Pattern  Offset</b> in 2D space. This value will apply only to this Parameter Set'
					Types:
						'float2' (SDTypeFloat2)
				'patternsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pattern Size'
					Description: 'Morphlet pattern size'
					Types:
						'float2' (SDTypeFloat2)
				'patternrotation' = SDValueFloat(float(0)) 
					Label: 'Pattern Rotation'
					Description: 'Morphlet pattern rotation'
					Types:
						'float' (SDTypeFloat)
				'patternsuppl' = SDValueFloat(float(0)) 
					Label: 'Pattern Variation'
					Description: '<b>Pattern Variation</b> parameter. Applies to: Brick, Gradation, Waves, Half Bell, Crescent, Capsule, Gradation w. Offset'
					Types:
						'float' (SDTypeFloat)
				'blendingmode' = SDValueEnum("sbs::fxmap::blendingmode",0) 
					Label: 'Blending Mode'
					Description: 'Blending mode'
					Types:
						'sbs::fxmap::blendingmode' (SDTypeEnum)
						'int' (SDTypeInt)
				'randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'Random seed'
					Types:
						'int' (SDTypeInt)
				'randominherited' = SDValueBool(bool(true)) 
					Label: 'Inherit Random'
					Description: 'When set, the random seed value is relative to the parent graph's random seed'
					Types:
						'bool' (SDTypeBool)
				'imageindex' = SDValueInt(int(0)) 
					Label: 'Input Image Index'
					Description: 'Input Image Pattern only: zero based index of the input plugged to FX-Map node.'
					Types:
						'int' (SDTypeInt)
				'imagepremul' = SDValueBool(bool(false)) 
					Label: 'Input Image Alpha'
					Description: 'Color Input Image Pattern only: alpha channel interpretation'
					Types:
						'bool' (SDTypeBool)
				'imagefiltering' = SDValueEnum("sbs::fxmap::imagefiltering",0) 
					Label: 'Input Image Filtering'
					Description: 'Input Image Pattern only: filtering mode'
					Types:
						'sbs::fxmap::imagefiltering' (SDTypeEnum)
						'int' (SDTypeInt)
				'output0' [CONNECTABLE, READ_ONLY]
					Label: 'Output 0'
					Description: 'Output 0'
					Types:
						'Undefined' (SDTypeCustom)
				'output1' [CONNECTABLE, READ_ONLY]
					Label: 'Output 1'
					Description: 'Output 1'
					Types:
						'Undefined' (SDTypeCustom)
				'output2' [CONNECTABLE, READ_ONLY]
					Label: 'Output 2'
					Description: 'Output 2'
					Types:
						'Undefined' (SDTypeCustom)
				'output3' [CONNECTABLE, READ_ONLY]
					Label: 'Output 3'
					Description: 'Output 3'
					Types:
						'Undefined' (SDTypeCustom)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'Undefined' (SDTypeCustom)
				
		[2/4] 'sbs::fxmap::markov2'
			Label: 'Switch'
			Description: 'Switches between primary and secondary outputs'
			SDPropertyCategory = 'Input'
				'switch' = SDValueBool(bool(false)) 
					Label: 'Selector'
					Description: 'Selector'
					Types:
						'bool' (SDTypeBool)
				'randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'Random seed'
					Types:
						'int' (SDTypeInt)
				'randominherited' = SDValueBool(bool(true)) 
					Label: 'Inherit Random'
					Description: 'When set, the random seed value is relative to the parent graph's random seed'
					Types:
						'bool' (SDTypeBool)
				'output0' [CONNECTABLE, READ_ONLY]
					Label: 'Output 0'
					Description: 'Output 0'
					Types:
						'Undefined' (SDTypeCustom)
				'output1' [CONNECTABLE, READ_ONLY]
					Label: 'Output 1'
					Description: 'Output 1'
					Types:
						'Undefined' (SDTypeCustom)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'Undefined' (SDTypeCustom)
				
		[3/4] 'sbs::fxmap::addnode'
			Label: 'Iterate'
			Description: 'Takes the secondary (right) output and duplicates it over the optional background (left), as many times as specified'
			SDPropertyCategory = 'Input'
				'numberadded' = SDValueInt(int(1)) 
					Label: 'Iterations'
					Description: 'Number of times the input node is duplicated'
					Types:
						'int' (SDTypeInt)
				'randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'Random seed'
					Types:
						'int' (SDTypeInt)
				'randominherited' = SDValueBool(bool(true)) 
					Label: 'Inherit Random'
					Description: 'When set, the random seed value is relative to the parent graph's random seed'
					Types:
						'bool' (SDTypeBool)
				'output0' [CONNECTABLE, READ_ONLY]
					Label: 'Output 0'
					Description: 'Output 0'
					Types:
						'Undefined' (SDTypeCustom)
				'output1' [CONNECTABLE, READ_ONLY]
					Label: 'Output 1'
					Description: 'Output 1'
					Types:
						'Undefined' (SDTypeCustom)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'Undefined' (SDTypeCustom)
				
		[4/4] 'sbs::fxmap::passthrough'
			Label: 'Dot'
			Description: 'The <b>Dot</b> node is not doing anything'
			SDPropertyCategory = 'Input'
				'output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output'
					Types:
						'Undefined' (SDTypeCustom)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'Undefined' (SDTypeCustom)
				
	Types:
		[1/3] 'sbs::fxmap::imagefiltering'
			'sbs::fxmap::imagefiltering' (SDTypeEnum)
				int bilinearmipmaps = SDValueInt(int(0))
					Label: 'Bilinear + Mipmaps'
					Description: 'Bilinear + Mipmaps'
				int bilinear = SDValueInt(int(1))
					Label: 'Bilinear'
					Description: 'Bilinear'
				int nearest = SDValueInt(int(2))
					Label: 'Nearest'
					Description: 'Nearest'
		[2/3] 'sbs::fxmap::blendingmode'
			'sbs::fxmap::blendingmode' (SDTypeEnum)
				int addsub = SDValueInt(int(0))
					Label: 'Add Sub'
					Description: 'Add Sub'
				int max = SDValueInt(int(1))
					Label: 'Max'
					Description: 'Max'
				int alphablend = SDValueInt(int(2))
					Label: 'Alpha Blend'
					Description: 'Alpha Blend'
		[3/3] 'sbs::fxmap::patterntype'
			'sbs::fxmap::patterntype' (SDTypeEnum)
				int null = SDValueInt(int(0))
					Label: 'No Pattern'
					Description: 'No Pattern'
				int image_entry = SDValueInt(int(1))
					Label: 'Input Image'
					Description: 'Input Image'
				int square = SDValueInt(int(2))
					Label: 'Square'
					Description: 'Square'
				int disc = SDValueInt(int(3))
					Label: 'Disc'
					Description: 'Disc'
				int paraboloid = SDValueInt(int(4))
					Label: 'Paraboloid'
					Description: 'Paraboloid'
				int bell = SDValueInt(int(5))
					Label: 'Bell'
					Description: 'Bell'
				int gaussian = SDValueInt(int(6))
					Label: 'Gaussian'
					Description: 'Gaussian'
				int thorn = SDValueInt(int(7))
					Label: 'Thorn'
					Description: 'Thorn'
				int pyramid = SDValueInt(int(8))
					Label: 'Pyramid'
					Description: 'Pyramid'
				int brick = SDValueInt(int(9))
					Label: 'Brick'
					Description: 'Brick'
				int gradation = SDValueInt(int(10))
					Label: 'Gradation'
					Description: 'Gradation'
				int waves = SDValueInt(int(11))
					Label: 'Waves'
					Description: 'Waves'
				int halfbell = SDValueInt(int(12))
					Label: 'Half Bell'
					Description: 'Half Bell'
				int ridgebell = SDValueInt(int(13))
					Label: 'Ridged Bell'
					Description: 'Ridged Bell'
				int crescent = SDValueInt(int(14))
					Label: 'Crescent'
					Description: 'Crescent'
				int capsule = SDValueInt(int(15))
					Label: 'Capsule'
					Description: 'Capsule'
				int cone = SDValueInt(int(16))
					Label: 'Cone'
					Description: 'Cone'
				int gradoffset = SDValueInt(int(17))
					Label: 'Gradation w. Offset'
					Description: 'Gradation w. Offset'
				int hemisphere = SDValueInt(int(18))
					Label: 'Hemisphere'
					Description: 'Hemisphere'
[3/37] 'mdl::custom_graph::custom_graph_nodes' (SDMDLModule)
	Definitions:
		[1/2] 'mdl::custom_graph::custom_graph_nodes::sampleNodeAdd(float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[2/2] 'mdl::custom_graph::custom_graph_nodes::sampleNodeMult(float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
[4/37] 'mdl::nvidia::core_definitions' (SDMDLModule)
	Definitions:
		[1/62] 'mdl::nvidia::core_definitions::texture_return.tint(::base::texture_return)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[2/62] 'mdl::nvidia::core_definitions::texture_return.mono(::base::texture_return)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[3/62] 'mdl::nvidia::core_definitions::material_type(::nvidia::core_definitions::material_type)'
			Label: 'User interface group'
			Description: 'User interface grouping hint for materials'
			SDPropertyCategory = 'Input'
				'v' = SDValueEnum("mdl::nvidia::core_definitions::material_type",0) [CONNECTABLE]
					Types:
						'mdl::nvidia::core_definitions::material_type' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::nvidia::core_definitions::material_type' (SDTypeEnum)
				
		[4/62] 'mdl::nvidia::core_definitions::int(::nvidia::core_definitions::material_type)'
			Label: 'User interface group'
			Description: 'User interface grouping hint for materials'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::nvidia::core_definitions::material_type' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[5/62] 'mdl::nvidia::core_definitions::emission_type(::nvidia::core_definitions::emission_type)'
			Label: 'Emission mode'
			Description: 'Emission mode definition for light sources'
			SDPropertyCategory = 'Input'
				'v' = SDValueEnum("mdl::nvidia::core_definitions::emission_type",0) [CONNECTABLE]
					Types:
						'mdl::nvidia::core_definitions::emission_type' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::nvidia::core_definitions::emission_type' (SDTypeEnum)
				
		[6/62] 'mdl::nvidia::core_definitions::int(::nvidia::core_definitions::emission_type)'
			Label: 'Emission mode'
			Description: 'Emission mode definition for light sources'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::nvidia::core_definitions::emission_type' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[7/62] 'mdl::nvidia::core_definitions::cell_type(::nvidia::core_definitions::cell_type)'
			Label: 'Worley noise cell type'
			Description: 'Behavior of the Worley noise cell'
			SDPropertyCategory = 'Input'
				'v' = SDValueEnum("mdl::nvidia::core_definitions::cell_type",0) [CONNECTABLE]
					Types:
						'mdl::nvidia::core_definitions::cell_type' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::nvidia::core_definitions::cell_type' (SDTypeEnum)
				
		[8/62] 'mdl::nvidia::core_definitions::int(::nvidia::core_definitions::cell_type)'
			Label: 'Worley noise cell type'
			Description: 'Behavior of the Worley noise cell'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::nvidia::core_definitions::cell_type' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[9/62] 'mdl::nvidia::core_definitions::cell_base(::nvidia::core_definitions::cell_base)'
			Label: 'Worley noise cell shape'
			Description: 'Shape of the Worley noise cell'
			SDPropertyCategory = 'Input'
				'v' = SDValueEnum("mdl::nvidia::core_definitions::cell_base",0) [CONNECTABLE]
					Types:
						'mdl::nvidia::core_definitions::cell_base' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::nvidia::core_definitions::cell_base' (SDTypeEnum)
				
		[10/62] 'mdl::nvidia::core_definitions::int(::nvidia::core_definitions::cell_base)'
			Label: 'Worley noise cell shape'
			Description: 'Shape of the Worley noise cell'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::nvidia::core_definitions::cell_base' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[11/62] 'mdl::nvidia::core_definitions::blend_colors(color,color,::base::color_layer_mode,float,bool)'
			Label: 'Blend colors'
			Description: 'Allows combining textures and colors in varied ways'
			SDPropertyCategory = 'Input'
				'color_1' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Color 1'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color_2' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Color 2'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'mode' = SDValueEnum("mdl::base::color_layer_mode",0) [CONNECTABLE]
					Label: 'Blend mode'
					Description: 'Describes how Color 1 and Color 2 are combined'
					Types:
						'mdl::base::color_layer_mode' (SDTypeEnum) [Uniform]
				'weight' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Blend weight'
					Description: 'Defines strength of the effect. At weight 0, only color 1 will be visible. At weight 1, the blend function will have full effect.'
					Types:
						'float' (SDTypeFloat)
				'linear_blend' = SDValueBool(bool(true)) [CONNECTABLE]
					Label: 'Linear blend'
					Description: 'The blend opperation can either be applied in linear or gamma (2.2) color space'
					Types:
						'bool' (SDTypeBool) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[12/62] 'mdl::nvidia::core_definitions::file_texture(texture_2d,::base::mono_mode,float,float,float2,float2,float,bool,int,bool)'
			Label: 'Bitmap texture'
			Description: 'Allows texturing using image files of various file formats'
			SDPropertyCategory = 'Input'
				'texture' [CONNECTABLE]
					Label: 'Bitmap file'
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'mono_source' = SDValueEnum("mdl::base::mono_mode",1) [CONNECTABLE]
					Label: 'Scalar mode'
					Description: 'Defines how the texture applies to scalar parameters'
					Types:
						'mdl::base::mono_mode' (SDTypeEnum) [Uniform]
				'brightness' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Brightness'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'contrast' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Contrast'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scaling' = SDValueFloat2(float2(1,1)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Controls the scale of the texture on the object'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'translation' = SDValueFloat2(float2(0,0)) [CONNECTABLE]
					Label: 'Offset'
					Description: 'Controls position of the texture on the object'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'rotation' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Rotation'
					Description: 'Rotation angle of the texture in degrees'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'clip' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Clip'
					Description: 'If set to true, texture will not repeat. Outside of the texture, color will be black and the scalar value will be 0.'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Label: 'UV space index'
					Description: 'Selects a specific UV space'
					Types:
						'int' (SDTypeInt) [Uniform]
				'invert' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Invert image'
					Description: 'Invert image'
					Types:
						'bool' (SDTypeBool) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct) [Varying]
				
		[13/62] 'mdl::nvidia::core_definitions::perlin_noise_texture(color,color,bool,int,bool,float,float,float3,float3,float3,int)'
			Label: 'Perlin noise texture'
			Description: 'Enable texturing with a random noise pattern'
			SDPropertyCategory = 'Input'
				'color1' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Color 1'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color2' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Color 2'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'object_space' = SDValueBool(bool(true)) [CONNECTABLE]
					Label: 'Use object space'
					Description: 'If off, UV space will be used. If on, 3D texturing in object space will apply. For applications that do not support object space, world space will be used.'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'noise_levels' = SDValueInt(int(3)) [CONNECTABLE]
					Label: 'Levels'
					Description: 'Higher amounts will add detail to the noise'
					Types:
						'int' (SDTypeInt) [Uniform]
				'absolute_noise' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Billowing appearance'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'noise_threshold_high' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Upper threshold'
					Description: 'Lowering this value will create bigger areas uniformly colored with Color 1'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_threshold_low' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Lower threshold'
					Description: 'Increasing this value will create bigger areas uniformly colored with Color 2'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scaling' = SDValueFloat3(float3(10,10,10)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Controls the scale of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'translation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Offset'
					Description: 'Controls position of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'rotation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Rotation'
					Description: 'Rotation angle of the texture in degrees'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Label: 'UV space index'
					Description: 'Only applies if "Use object space" is off. Selects a specific UV space.'
					Types:
						'int' (SDTypeInt) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct) [Varying]
				
		[14/62] 'mdl::nvidia::core_definitions::perlin_noise_bump_texture(float,float3,int,bool,bool,float,float,float3,float3,int)'
			Label: 'Perlin noise texture -- bump mapping'
			Description: 'Enable bump-map texturing with a random noise pattern'
			SDPropertyCategory = 'Input'
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Bump strength'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scaling' = SDValueFloat3(float3(10,10,10)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Controls the scale of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'noise_levels' = SDValueInt(int(1)) [CONNECTABLE]
					Label: 'Levels'
					Description: 'Higher amounts will add detail to the noise'
					Types:
						'int' (SDTypeInt) [Uniform]
				'object_space' = SDValueBool(bool(true)) [CONNECTABLE]
					Label: 'Use object space'
					Description: 'If off, UV space will be used. If on, 3D texturing in object space will apply. For applications that do not support object space, world space will be used.'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'absolute_noise' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Billowing appearance'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'noise_threshold_high' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Upper threshold'
					Description: 'Lowering this value will create bigger areas uniformly colored with Color 1'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_threshold_low' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Lower threshold'
					Description: 'Increasing this value will create bigger areas uniformly colored with Color 2'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'translation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Offset'
					Description: 'Controls position of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'rotation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Rotation'
					Description: 'Rotation angle of the texture in degrees'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Label: 'UV space index'
					Description: 'Only applies if "Use object space" is off. Selects a specific UV space.'
					Types:
						'int' (SDTypeInt) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[15/62] 'mdl::nvidia::core_definitions::worley_noise_texture(color,color,bool,int,::nvidia::core_definitions::cell_type,::nvidia::core_definitions::cell_base,float,float,float3,float3,float3)'
			Label: 'Cellular noise texture'
			Description: 'Allow texturing with a cell forming pattern'
			SDPropertyCategory = 'Input'
				'color1' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Color 1'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color2' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Color 2'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'object_space' = SDValueBool(bool(true)) [CONNECTABLE]
					Label: 'Use object space'
					Description: 'If off, UV space will be used. If on, 3D texturing in object space will apply. For applications that do not support object space, world space will be used.'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Label: 'UV space index'
					Description: 'Only applies if "Use object space" is off. Selects a specific UV space.'
					Types:
						'int' (SDTypeInt) [Uniform]
				'mode' = SDValueEnum("mdl::nvidia::core_definitions::cell_type",0) [CONNECTABLE]
					Label: 'Cell type'
					Description: 'Cell pattern type'
					Types:
						'mdl::nvidia::core_definitions::cell_type' (SDTypeEnum) [Uniform]
				'metric' = SDValueEnum("mdl::nvidia::core_definitions::cell_base",0) [CONNECTABLE]
					Label: 'Cell shape'
					Description: 'The shape of the cell form'
					Types:
						'mdl::nvidia::core_definitions::cell_base' (SDTypeEnum) [Uniform]
				'noise_threshold_high' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Upper threshold'
					Description: 'Lowering this value will create bigger areas uniformly colored with Color 1'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_threshold_low' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Lower threshold'
					Description: 'Increasing this value will create bigger areas uniformly colored with Color 2'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scaling' = SDValueFloat3(float3(10,10,10)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Controls the scale of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'translation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Offset'
					Description: 'Controls position of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'rotation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Rotation'
					Description: 'Rotation angle of the texture in degrees'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct) [Varying]
				
		[16/62] 'mdl::nvidia::core_definitions::worley_noise_bump_texture(float,::nvidia::core_definitions::cell_base,bool,int,float,float,float3,float3,float3)'
			Label: 'Cellular noise texture -- bump mapping'
			Description: 'Allow texturing with a cell forming pattern'
			SDPropertyCategory = 'Input'
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Bump strength'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'metric' = SDValueEnum("mdl::nvidia::core_definitions::cell_base",0) [CONNECTABLE]
					Label: 'Cell shape'
					Description: 'The shape of the cell form'
					Types:
						'mdl::nvidia::core_definitions::cell_base' (SDTypeEnum) [Uniform]
				'object_space' = SDValueBool(bool(true)) [CONNECTABLE]
					Label: 'Use object space'
					Description: 'If off, UV space will be used. If on, 3D texturing in object space will apply. For applications that do not support object space, world space will be used.'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Label: 'UV space index'
					Description: 'Only applies if "Use object space" is off. Selects a specific UV space.'
					Types:
						'int' (SDTypeInt) [Uniform]
				'noise_threshold_high' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Upper threshold'
					Description: 'Lowering this value will create bigger areas uniformly colored with Color 1'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_threshold_low' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Lower threshold'
					Description: 'Increasing this value will create bigger areas uniformly colored with Color 2'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scaling' = SDValueFloat3(float3(10,10,10)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Controls the scale of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'translation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Offset'
					Description: 'Controls position of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'rotation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Rotation'
					Description: 'Rotation angle of the texture in degrees'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[17/62] 'mdl::nvidia::core_definitions::flow_noise_texture(color,color,bool,int,int,bool,float,float,float,float,float,float3,float3,float3)'
			Label: 'Flow noise texture'
			Description: 'Allow texturing with a 2D noise pattern suitable for waves'
			SDPropertyCategory = 'Input'
				'color1' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Color 1'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color2' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Color 2'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'object_space' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Use object space'
					Description: 'If off, UV space will be used. If on, 3D texturing in object space will apply. For applications that do not support object space, world space will be used.'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Label: 'UV space index'
					Description: 'Only applies if "Use object space" is off. Selects a specific UV space.'
					Types:
						'int' (SDTypeInt) [Uniform]
				'noise_levels' = SDValueInt(int(3)) [CONNECTABLE]
					Label: 'Levels'
					Description: 'Higher amounts will add detail to the noise'
					Types:
						'int' (SDTypeInt) [Uniform]
				'absolute_noise' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Billowing appearance'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'phase' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Phase offset'
					Description: 'Controls the third dimension of the function'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_gain' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Level intensity gain'
					Description: 'If multiple levels are used, this parameter specifies a weighting factor for subsequent levels'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_scale' = SDValueFloat(float(2)) [CONNECTABLE]
					Label: 'Level scaling'
					Description: 'If multiple levels are used, this parameter specifies a global scaling factor for subsequent levels'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_progressive_u_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Progressive u scale'
					Description: 'If multiple levels are used, this parameter specifies an additional scaling factor in the "u" direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_progressive_v_motion' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Progressive v offset'
					Description: 'If multiple levels are used, this parameter specifies an offset for subsequent levels in the "v" direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scaling' = SDValueFloat3(float3(10,10,10)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Controls the scale of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'translation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Offset'
					Description: 'Controls position of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'rotation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Rotation'
					Description: 'Rotation angle of the texture in degrees'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct) [Varying]
				
		[18/62] 'mdl::nvidia::core_definitions::flow_noise_bump_texture(float,float3,int,bool,int,bool,float,float,float,float,float,float3,float3)'
			Label: 'Flow noise texture -- bump mapping'
			Description: 'Allow texturing with a 2D noise pattern suitable for waves'
			SDPropertyCategory = 'Input'
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Bump strength'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scaling' = SDValueFloat3(float3(10,10,10)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Controls the scale of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'noise_levels' = SDValueInt(int(1)) [CONNECTABLE]
					Label: 'Levels'
					Description: 'Higher amounts will add detail to the noise'
					Types:
						'int' (SDTypeInt) [Uniform]
				'object_space' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Use object space'
					Description: 'If off, UV space will be used. If on, 3D texturing in object space will apply. For applications that do not support object space, world space will be used.'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Label: 'UV space index'
					Description: 'Only applies if "Use object space" is off. Selects a specific UV space.'
					Types:
						'int' (SDTypeInt) [Uniform]
				'absolute_noise' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Billowing appearance'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'phase' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Phase offset'
					Description: 'Controls the 3rd dimension of the function'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_gain' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Level intensity gain'
					Description: 'If multiple levels are used, this parameter specifies a weighting factor for subsequent levels'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_scale' = SDValueFloat(float(2)) [CONNECTABLE]
					Label: 'Level scaling'
					Description: 'If multiple levels are used, this parameter specifies a global scaling factor for subsequent levels'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_progressive_u_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Progressive u scale'
					Description: 'If multiple levels are used, this parameter specifies an additional scaling factor in the "u" direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_progressive_v_motion' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Progressive v offset'
					Description: 'If multiple levels are used, this parameter specifies an offset for subsequent levels in the "v" direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'translation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Offset'
					Description: 'Controls position of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'rotation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Rotation'
					Description: 'Rotation angle of the texture in degrees'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[19/62] 'mdl::nvidia::core_definitions::checker_texture(color,color,float3,float3,bool,float,float3,int)'
			Label: '3D checker texture'
			Description: 'Allows texturing a checkerboard pattern'
			SDPropertyCategory = 'Input'
				'color1' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Color 1'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color2' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Color 2'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'scaling' = SDValueFloat3(float3(10,10,10)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Controls the scale of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'translation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Offset'
					Description: 'Controls position of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'object_space' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Use object space'
					Description: 'If off, UV space will be used. If on, 3D texturing in object space will apply. For applications that do not support object space, world space will be used.'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'blur' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Blur'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'rotation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Rotation'
					Description: 'Rotation angle of the texture in degrees'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Label: 'UV space index'
					Description: 'Only applies if "Use object space" is off. Selects a specific UV space.'
					Types:
						'int' (SDTypeInt) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct) [Varying]
				
		[20/62] 'mdl::nvidia::core_definitions::checker_bump_texture(float,float,bool,float3,float3,float3,int)'
			Label: '3D checker texture -- bump mapping'
			Description: 'Allows texturing a checkerboard pattern'
			SDPropertyCategory = 'Input'
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Bump strength'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'blur' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Blur'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'object_space' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Use object space'
					Description: 'If off, UV space will be used. If on, 3D texturing in object space will apply. For applications that do not support object space, world space will be used.'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'scaling' = SDValueFloat3(float3(10,10,10)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Controls the scale of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'translation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Offset'
					Description: 'Controls position of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'rotation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Rotation'
					Description: 'Rotation angle of the texture in degrees'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Label: 'UV space index'
					Description: 'Only applies if "Use object space" is off. Selects a specific UV space.'
					Types:
						'int' (SDTypeInt) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[21/62] 'mdl::nvidia::core_definitions::file_bump_texture(texture_2d,::base::mono_mode,float2,float2,float,bool,float,int)'
			Label: 'Bitmap texture, bump'
			Description: 'Allows texturing using image files of various file formats'
			SDPropertyCategory = 'Input'
				'texture' [CONNECTABLE]
					Label: 'Bitmap file'
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'bump_source' = SDValueEnum("mdl::base::mono_mode",1) [CONNECTABLE]
					Label: 'Bump mode'
					Description: 'Defines how the texture is evaluated to create the bumps'
					Types:
						'mdl::base::mono_mode' (SDTypeEnum) [Uniform]
				'scaling' = SDValueFloat2(float2(1,1)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Controls the scale of the texture on the object'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'translation' = SDValueFloat2(float2(0,0)) [CONNECTABLE]
					Label: 'Offset'
					Description: 'Controls position of the texture on the object'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'rotation' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Rotation'
					Description: 'Rotation angle of the texture in degrees'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'clip' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Clip'
					Description: 'If set to true, texture will not repeat. Outside of the texture the surface will be flat'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Bump strength'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Label: 'UV space index'
					Description: 'Selects a specific UV space'
					Types:
						'int' (SDTypeInt) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[22/62] 'mdl::nvidia::core_definitions::normalmap_texture(texture_2d,float2,float2,float,bool,float,int,bool)'
			Label: 'Normal map texture'
			Description: 'Allows the use of tangent space normal maps'
			SDPropertyCategory = 'Input'
				'texture' [CONNECTABLE]
					Label: 'Normalmap file'
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'scaling' = SDValueFloat2(float2(1,1)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Controls the scale of the texture on the object'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'translation' = SDValueFloat2(float2(0,0)) [CONNECTABLE]
					Label: 'Offset'
					Description: 'Controls position of the texture on the object'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'rotation' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Rotation'
					Description: 'Rotation angle of the texture in degrees'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'clip' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Clip'
					Description: 'If set to true, texture will not repeat. Outside of the texture the surface will be flat.'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Strength'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Label: 'UV space index'
					Description: 'Selects a specific UV space'
					Types:
						'int' (SDTypeInt) [Uniform]
				'flip' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Flip V'
					Description: 'Flip handedness of the tangent space'
					Types:
						'bool' (SDTypeBool) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[23/62] 'mdl::nvidia::core_definitions::blend_normals(float3,float,float3,float)'
			Label: 'Blend normals'
			Description: 'Blend two normals or apply a detail normal map'
			SDPropertyCategory = 'Input'
				'base_normal' = SDMDLValueCall(mdl::state::normal()__default_call___207) [CONNECTABLE]
					Description: 'The base normal'
					Types:
						'float3' (SDTypeFloat3)
				'base_normal_weight' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Specifies the strength of the base normal using a linear blend between state::normal and "base_normal"'
					Types:
						'float' (SDTypeFloat)
				'detail_normal' = SDMDLValueCall(mdl::state::normal()__default_call___208) [CONNECTABLE]
					Description: 'The detail normal'
					Types:
						'float3' (SDTypeFloat3)
				'detail_normal_weight' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Specifies the strength of the detail normal using a linear blend between state::normal and "detail_normal"'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[24/62] 'mdl::nvidia::core_definitions::diffuse'
			Label: 'Simple diffuse'
			Description: 'A basic diffuse material'
			SDPropertyCategory = 'Input'
				'diffuse_color' = SDValueColorRGB(ColorRGB(0.800000012,0.800000012,0.800000012)) [CONNECTABLE]
					Label: 'Color'
					Description: 'The color of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Diffuse roughness'
					Description: 'Higher roughness values lead a powdery appearance'
					Types:
						'float' (SDTypeFloat)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___209) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[25/62] 'mdl::nvidia::core_definitions::scratched_metal_v2'
			Label: 'Metal'
			Description: 'A metallic material with stretched reflections'
			SDPropertyCategory = 'Input'
				'metal_color' = SDValueColorRGB(ColorRGB(0.899999976,0.899999976,0.899999976)) [CONNECTABLE]
					Label: 'Color'
					Description: 'The color of the metal'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0.200000003)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'glossy_weight' = SDValueFloat(float(0.899999976)) [CONNECTABLE]
					Label: 'Reflection weight'
					Description: 'Intensity of highlights and glossy reflections and highlights'
					Types:
						'float' (SDTypeFloat)
				'anisotropy' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy'
					Description: 'Higher values will stretch the highlight'
					Types:
						'float' (SDTypeFloat)
				'anisotropy_rotation' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy rotation'
					Description: 'Changes the orientation of the anisotropy. A value of 1 will rotate the orientation 360 degrees.'
					Types:
						'float' (SDTypeFloat)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___210) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[26/62] 'mdl::nvidia::core_definitions::scratched_plastic_v2'
			Label: 'Plastic'
			Description: 'A basic dielectric, works for everything opaque that is not metallic. Supports stretched highlights.'
			SDPropertyCategory = 'Input'
				'diffuse_color' = SDValueColorRGB(ColorRGB(0.5,0.5,0.5)) [CONNECTABLE]
					Label: 'Color'
					Description: 'The color of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0.200000003)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'anisotropy' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy'
					Description: 'Higher values will stretch the highlight'
					Types:
						'float' (SDTypeFloat)
				'anisotropy_rotation' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy rotation'
					Description: 'Changes the orientation of the anisotropy. A value of 1 will rotate the orientation 360 degrees.'
					Types:
						'float' (SDTypeFloat)
				'ior' = SDValueFloat(float(1.39999998)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines reflectivity'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'reflectivity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Reflection weight'
					Description: 'Additional reflectivity control'
					Types:
						'float' (SDTypeFloat)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___211) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[27/62] 'mdl::nvidia::core_definitions::retroreflective'
			Label: 'Retroreflective'
			Description: 'A material with a retroreflective component, works well for road signs and retroreflective stickers'
			SDPropertyCategory = 'Input'
				'base_color' = SDValueColorRGB(ColorRGB(0.200000003,0.0299999993,0.0299999993)) [CONNECTABLE]
					Label: 'Color'
					Description: 'The color of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'reflection_color' = SDValueColorRGB(ColorRGB(0.800000012,0.800000012,0.0299999993)) [CONNECTABLE]
					Label: 'Reflection color'
					Description: 'The color of the retroreflection'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0.150000006)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'normal_reflectivity' = SDValueFloat(float(0.0500000007)) [CONNECTABLE]
					Label: 'Reflection weight facing'
					Description: 'Reflectivity control for geometry facing the viewer'
					Types:
						'float' (SDTypeFloat)
				'grazing_reflectivity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Reflection weight edge'
					Description: 'Reflectivity control for the reflectivity at geometry edges'
					Types:
						'float' (SDTypeFloat)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___212) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[28/62] 'mdl::nvidia::core_definitions::flex_material_v2'
			Label: 'Flexible material model'
			Description: 'A complex material that can be configured to a wide variety of looks'
			SDPropertyCategory = 'Input'
				'base_color' = SDValueColorRGB(ColorRGB(0.5,0.5,0.5)) [CONNECTABLE]
					Label: 'Base color'
					Description: 'The color of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'diffuse_roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Diffuse roughness'
					Description: 'Higher roughness values lead to a more "powdery" look'
					Types:
						'float' (SDTypeFloat)
				'is_metal' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Metallic material'
					Description: 'If 1.0, reflection will be colored and independent of view direction. If 0.0, reflection will be white and direction dependent. Directional dependence is in this case based on the IOR (Fresnel effect).'
					Types:
						'float' (SDTypeFloat)
				'reflectivity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Reflection weight'
					Description: 'Controls the amount of reflection'
					Types:
						'float' (SDTypeFloat)
				'reflection_roughness' = SDValueFloat(float(0.300000012)) [CONNECTABLE]
					Label: 'Reflection roughness'
					Description: 'Higher roughness values lead to more blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'anisotropy' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Reflection anisotropy'
					Description: 'Higher values will stretch the highlight'
					Types:
						'float' (SDTypeFloat)
				'anisotropy_rotation' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy rotation'
					Description: 'Changes the orientation of the anisotropy. A value of 1 will rotate the orientation 360 degrees.'
					Types:
						'float' (SDTypeFloat)
				'transparency' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Transmission weight'
					Description: 'Weights how much light passes through the object compared to its diffuse reflectivity.'
					Types:
						'float' (SDTypeFloat)
				'transmission_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Transmission color'
					Description: 'Color effect for transmission independent of thickness of the object, similar to stained glass.'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'volume_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Volume color'
					Description: 'If the material is not "Thin walled", "Volume color" will be reached at "Volume reference distance" (m).'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'transmission_roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Transmission roughness'
					Description: 'higher values lead to objects seen through the material to appear blurry'
					Types:
						'float' (SDTypeFloat)
				'base_thickness' = SDValueFloat(float(0.100000001)) [CONNECTABLE]
					Label: 'Volume reference distance'
					Description: 'If the material is not "Thin walled", "Volume color" will be reached at this distance (m). Enter a typical thickness of objects made of this material here.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'ior' = SDValueFloat(float(1.5)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines refraction in the volume. It also influences the reflectivity for materials that are not metallic.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'thin_walled' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Thin walled'
					Description: 'Thin walled materials do not refract and do not have volume effects. Good for soap bubbles or window glass.'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___213) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				'abbe_number' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Abbe number'
					Description: 'Controls dispersion. A value of 0 switches dispersion off. Dispersive materials have Abbe numbers between 25 and 85'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[29/62] 'mdl::nvidia::core_definitions::thin_glass_v2'
			Label: 'Thin glass'
			Description: 'A basic transmissive dielectric without refraction or volume'
			SDPropertyCategory = 'Input'
				'glass_color' = SDValueColorRGB(ColorRGB(0.949999988,0.949999988,0.949999988)) [CONNECTABLE]
					Label: 'Transmission color'
					Description: 'The color of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'ior' = SDValueFloat(float(1.39999998)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines reflectivity'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___214) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[30/62] 'mdl::nvidia::core_definitions::thin_translucent_v2'
			Label: 'Thin translucent'
			Description: 'A diffuse transmissive dielectric material'
			SDPropertyCategory = 'Input'
				'surface_color' = SDValueColorRGB(ColorRGB(0.949999988,0.949999988,0.949999988)) [CONNECTABLE]
					Label: 'Diffuse color'
					Description: 'The color of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'translucent_color' = SDValueColorRGB(ColorRGB(0.949999988,0.949999988,0.949999988)) [CONNECTABLE]
					Label: 'Translucence color'
					Description: 'The color of the volume of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'translucency' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Translucence weight'
					Description: 'Fraction of the incoming light that should be visible on the backside'
					Types:
						'float' (SDTypeFloat)
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'ior' = SDValueFloat(float(1.39999998)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines reflectivity'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___215) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[31/62] 'mdl::nvidia::core_definitions::thick_glass_v2'
			Label: 'Thick glass'
			Description: 'A basic transmissive dielectric with refraction and coloring in the volume'
			SDPropertyCategory = 'Input'
				'transmission_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Transmission color'
					Description: 'Colors the light entering the volume, similar to stained glass'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'glass_color' = SDValueColorRGB(ColorRGB(0.949999988,0.949999988,0.949999988)) [CONNECTABLE]
					Label: 'Volume color'
					Description: 'The color of the glass body'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'ior' = SDValueFloat(float(1.39999998)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines reflectivity as well as amount of refraction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'base_thickness' = SDValueFloat(float(0.100000001)) [CONNECTABLE]
					Label: 'Volume reference distance'
					Description: '"Volume color" will be reached at this distance (m). Enter a typical thickness of objects made of this material here.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___216) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				'abbe_number' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Abbe number'
					Description: 'Controls dispersion. 0 switches dispersion off. Dispersive materials have Abbe numbers between 25 and 85.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[32/62] 'mdl::nvidia::core_definitions::thick_translucent_v2'
			Label: 'Thick translucent'
			Description: 'A subsurface scattering material'
			SDPropertyCategory = 'Input'
				'transmission_color' = SDValueColorRGB(ColorRGB(0.949999988,0.949999988,0.949999988)) [CONNECTABLE]
					Label: 'Transmission color'
					Description: 'The color of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'volume_color' = SDValueColorRGB(ColorRGB(0.949999988,0.949999988,0.949999988)) [CONNECTABLE]
					Label: 'Volume color'
					Description: 'The color of the volume at "Volume reference distance"'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'volume_scattering' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Volume scattering'
					Description: 'Amount of scattering for objects at "Volume reference distance"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Reflection roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'reflectivity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Reflection weight'
					Description: 'Overall reflectivity of the material'
					Types:
						'float' (SDTypeFloat)
				'base_thickness' = SDValueFloat(float(0.100000001)) [CONNECTABLE]
					Label: 'Volume reference distance'
					Description: '"Volume color" and "Volume scattering" will be reached at this distance (m). Enter a typical thickness of objects made of this material here.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___217) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				'ior' = SDValueFloat(float(1.39999998)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines reflectivity as well as amount of refraction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'abbe_number' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Abbe number'
					Description: 'Controls dispersion. A value of 0 switches dispersion off, Dispersive materials have Abbe numbers between 25 and 85.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[33/62] 'mdl::nvidia::core_definitions::blend'
			Label: 'Surface blender'
			Description: 'Blend surface characteristics of 2 materials or mask them using a texture'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::scratched_plastic_v2__default_call___219) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material the blend is based on'
					Types:
						'mdl::material' (SDTypeStruct)
				'blend' = SDMDLValueCall(mdl::nvidia::core_definitions::scratched_metal_v2__default_call___221) [CONNECTABLE]
					Label: 'Blend Material'
					Description: 'Surface properties to use for the blend'
					Types:
						'mdl::material' (SDTypeStruct)
				'weight' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Blend weight'
					Description: 'Blend weight or mask texture'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[34/62] 'mdl::nvidia::core_definitions::surface_falloff'
			Label: 'Surface falloff'
			Description: 'Blend surface characteristics of 2 materials or mask them using a texture'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::scratched_plastic_v2__default_call___223) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material the blend is based on'
					Types:
						'mdl::material' (SDTypeStruct)
				'blend' = SDMDLValueCall(mdl::nvidia::core_definitions::scratched_metal_v2__default_call___225) [CONNECTABLE]
					Label: 'Blend Material'
					Description: 'Surface properties to use for the blend'
					Types:
						'mdl::material' (SDTypeStruct)
				'facing_weight' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Blend weight facing'
					Description: 'Blend weight or mask texture'
					Types:
						'float' (SDTypeFloat)
				'edge_weight' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Blend weight edge'
					Description: 'Blend weight or mask texture'
					Types:
						'float' (SDTypeFloat)
				'blend_bias' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Blend bias'
					Description: 'Controls how fast the transition should happen. 5.0 results in fresnel like transition.'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[35/62] 'mdl::nvidia::core_definitions::apply_clearcoat_v2'
			Label: 'Apply clear coating'
			Description: 'Apply clear coat to an existing material'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::diffuse__default_call___227) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get a clear coating applied'
					Types:
						'mdl::material' (SDTypeStruct)
				'ior' = SDValueFloat(float(1.60000002)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines reflectivity of the clear coat'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Reflection roughness'
					Description: 'Determines roughness of the clear coat'
					Types:
						'float' (SDTypeFloat)
				'visibility' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Coat visibility'
					Description: 'Determines visibility of the clear coat'
					Types:
						'float' (SDTypeFloat)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___228) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				'coat_filter_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Coat filter color'
					Description: 'For simulating coatings with colored resins that modulate the color of underlying layers'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[36/62] 'mdl::nvidia::core_definitions::apply_thinfilm'
			Label: 'Apply thin film'
			Description: 'Apply thin film to an existing material'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::scratched_metal_v2__default_call___230) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get shows a thin film effect'
					Types:
						'mdl::material' (SDTypeStruct)
				'ior' = SDValueFloat(float(1.60000002)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'The IOR of the thin film interface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'thickness' = SDValueFloat(float(400)) [CONNECTABLE]
					Label: 'Thickness'
					Description: 'Thickness of the thin film in nm'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[37/62] 'mdl::nvidia::core_definitions::apply_metalcoat_v2'
			Label: 'Apply thin metal coating'
			Description: 'Apply metal coat to an existing material'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::diffuse__default_call___232) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get a metallic coating applied'
					Types:
						'mdl::material' (SDTypeStruct)
				'metal_color' = SDValueColorRGB(ColorRGB(0.949999988,0.949999988,0.949999988)) [CONNECTABLE]
					Label: 'Reflection color'
					Description: 'The color of the metal'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'visibility' = SDValueFloat(float(0.300000012)) [CONNECTABLE]
					Label: 'Reflection weight'
					Description: 'The opacity of the coat'
					Types:
						'float' (SDTypeFloat)
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Reflection roughness'
					Description: 'Determines roughness of the metal coat'
					Types:
						'float' (SDTypeFloat)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___233) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[38/62] 'mdl::nvidia::core_definitions::apply_dustcover'
			Label: 'Apply a cover of dust'
			Description: 'Apply a diffuse cover of dust or dirt'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::diffuse__default_call___235) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get a clear coating applied'
					Types:
						'mdl::material' (SDTypeStruct)
				'dust_color' = SDValueColorRGB(ColorRGB(0.699999988,0.699999988,0.699999988)) [CONNECTABLE]
					Label: 'Dust color'
					Description: 'The color of the dust'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'visibility' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Dust density'
					Description: 'The opacity of the cover'
					Types:
						'float' (SDTypeFloat)
				'dust_density' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Dust amount'
					Description: 'How dusty the material is'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___236) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[39/62] 'mdl::nvidia::core_definitions::apply_colorfalloff_v2'
			Label: 'Apply a color falloff'
			Description: 'Makes the color view dependent'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::scratched_metal_v2__default_call___238) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get a clear coating applied'
					Types:
						'mdl::material' (SDTypeStruct)
				'color_0' = SDValueColorRGB(ColorRGB(1,0,0)) [CONNECTABLE]
					Label: 'Color 1'
					Description: 'Color 1 (facing direction)'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'color_1' = SDValueColorRGB(ColorRGB(0,1,0)) [CONNECTABLE]
					Label: 'Color 2'
					Description: 'Color 2'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'color_2' = SDValueColorRGB(ColorRGB(0,0,1)) [CONNECTABLE]
					Label: 'Color 3'
					Description: 'Color 3'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'color_3' = SDValueColorRGB(ColorRGB(1,0,0)) [CONNECTABLE]
					Label: 'Color 4'
					Description: 'Color 4'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'color_4' = SDValueColorRGB(ColorRGB(0,1,0)) [CONNECTABLE]
					Label: 'Color 5'
					Description: 'Color 5 (object edges)'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[40/62] 'mdl::nvidia::core_definitions::apply_metallicflakes'
			Label: 'Apply flake coating'
			Description: 'Apply layer of metallic flakes to an existing material'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::diffuse__default_call___240) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get a flake layer applied'
					Types:
						'mdl::material' (SDTypeStruct)
				'flake_color' = SDValueColorRGB(ColorRGB(0.899999976,0.699999988,0.5)) [CONNECTABLE]
					Label: 'Color'
					Description: 'The color of the flakes'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Determines roughness of the metallic flakes'
					Types:
						'float' (SDTypeFloat)
				'size' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Flake size'
					Description: 'Determines size of the metallic flakes, in mm'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'amount' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Flake amount'
					Description: 'Determines amount of visible metallic flakes'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'opacity' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Flake opacity'
					Description: 'Determines visibility of the metallic flakes'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'bump' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Flake orientation randomness'
					Description: 'Larger numbers will increase the sparkle radius around highlights'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[41/62] 'mdl::nvidia::core_definitions::flake_paint'
			Label: 'Flaky paint'
			Description: 'A multi layer paint material containing flakes'
			SDPropertyCategory = 'Input'
				'base_color' = SDValueColorRGB(ColorRGB(0.300000012,0.00999999978,0.00999999978)) [CONNECTABLE]
					Label: 'Base color'
					Description: 'The color of the base paint'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'flake_color' = SDValueColorRGB(ColorRGB(0.600000024,1,0.100000001)) [CONNECTABLE]
					Label: 'Flake color'
					Description: 'The color of the flakes'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0.150000006)) [CONNECTABLE]
					Label: 'Flake roughness'
					Description: 'Determines roughness of the metallic flakes'
					Types:
						'float' (SDTypeFloat)
				'size' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Flake size'
					Description: 'Determines size of the metallic flakes, in mm'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'amount' = SDValueFloat(float(0.400000006)) [CONNECTABLE]
					Label: 'Flake amount'
					Description: 'Determines amount of visible metallic flakes'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'opacity' = SDValueFloat(float(0.800000012)) [CONNECTABLE]
					Label: 'Flake weight'
					Description: 'Determines visibility of the metallic flakes'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'bump' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Flake orientation randomness'
					Description: 'Larger numbers will increase the sparkle radius around highlights'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'ior' = SDValueFloat(float(1.60000002)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines reflectivity of the clear coat'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'coat_roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Coat roughness'
					Description: 'Determines roughness of the clear coat'
					Types:
						'float' (SDTypeFloat)
				'coat_bump' = SDMDLValueCall(mdl::state::normal()__default_call___241) [CONNECTABLE]
					Label: 'Coat bump'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[42/62] 'mdl::nvidia::core_definitions::add_cutout'
			Label: 'Add cut-outs'
			Description: 'Adds cut-outs to existing materials. Also forces material to be thin-walled. Good for modeling leaves, grass or fences.'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::scratched_plastic_v2__default_call___243) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get a cut-out'
					Types:
						'mdl::material' (SDTypeStruct)
				'cutout' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Cutout'
					Description: 'Determines where the object is visible'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[43/62] 'mdl::nvidia::core_definitions::add_simple_sticker'
			Label: 'Add simple sticker'
			Description: 'A quick way for adding simple stickers to a material. The sticker is a simple dielectric and needs a mask to define its extent.'
			SDPropertyCategory = 'Input'
				'diffuse_color' = SDValueColorRGB(ColorRGB(0.5,0.5,0.5)) [CONNECTABLE]
					Label: 'Sticker color'
					Description: 'The color of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0.0500000007)) [CONNECTABLE]
					Label: 'Sticker roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'ior' = SDValueFloat(float(1.39999998)) [CONNECTABLE]
					Label: 'Sticker IOR'
					Description: 'Determines reflectivity'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'reflectivity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Sticker reflectivity'
					Description: 'Additional Reflectivity control'
					Types:
						'float' (SDTypeFloat)
				'sticker_normal' = SDMDLValueCall(mdl::state::normal()__default_call___244) [CONNECTABLE]
					Label: 'Sticker bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				'sticker_mask' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Sticker mask'
					Description: 'Determines extent of the sticker'
					Types:
						'float' (SDTypeFloat)
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::scratched_plastic_v2__default_call___246) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get a sticker added'
					Types:
						'mdl::material' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[44/62] 'mdl::nvidia::core_definitions::add_globalbump'
			Label: 'Add global bumpmap'
			Description: 'Adds global bumpmap to existing materials. Local bump map of the base material is preserved.'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::scratched_plastic_v2__default_call___248) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get a bump map'
					Types:
						'mdl::material' (SDTypeStruct)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___249) [CONNECTABLE]
					Label: 'Bump'
					Description: 'An additional global bump map for the material. Local bump map of the base material is preserved.'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[45/62] 'mdl::nvidia::core_definitions::add_displacement'
			Label: 'Add displacement'
			Description: 'Adds displacement to existing materials'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::scratched_plastic_v2__default_call___251) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get a bump map'
					Types:
						'mdl::material' (SDTypeStruct)
				'displacement' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Displacement amount'
					Description: 'Attach displacement texture here. Note that the object needs to be set up correctly to have good displacement results.'
					Types:
						'float' (SDTypeFloat)
				'displacement_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Displacement scale'
					Description: 'A global scale factor for the displacement amount'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[46/62] 'mdl::nvidia::core_definitions::add_emission'
			Label: 'Add emission'
			Description: 'Adds emission to a material'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::diffuse__default_call___253) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get emission added'
					Types:
						'mdl::material' (SDTypeStruct)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Color'
					Description: 'The color of the light'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'intensity' = SDValueFloat(float(1000)) [CONNECTABLE]
					Label: 'Intensity'
					Description: 'The brightness of the light source'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'unit_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Unit scale'
					Description: 'Modeling unit to meter conversion factor'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'unit' = SDValueEnum("mdl::nvidia::core_definitions::emission_type",0) [CONNECTABLE]
					Label: 'Unit for emission'
					Description: 'The physical unit of "Intensity"'
					Types:
						'mdl::nvidia::core_definitions::emission_type' (SDTypeEnum) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[47/62] 'mdl::nvidia::core_definitions::add_thermal_emission'
			Label: 'Add thermal emission'
			Description: 'Adds emission to a material, color is based on a "color temperature"'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::diffuse__default_call___255) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get emission added'
					Types:
						'mdl::material' (SDTypeStruct)
				'temperature' = SDValueFloat(float(6500)) [CONNECTABLE]
					Label: 'Temperature'
					Description: 'The color temperature of the light in Kelvin'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'intensity' = SDValueFloat(float(1000)) [CONNECTABLE]
					Label: 'Intensity'
					Description: 'The brightness of the light source'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'unit' = SDValueEnum("mdl::nvidia::core_definitions::emission_type",0) [CONNECTABLE]
					Label: 'Unit for emission'
					Description: 'The physical unit of "Intensity"'
					Types:
						'mdl::nvidia::core_definitions::emission_type' (SDTypeEnum) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[48/62] 'mdl::nvidia::core_definitions::light_omni'
			Label: 'Diffuse emission'
			Description: 'Emissive material emitting in all directions'
			SDPropertyCategory = 'Input'
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Color'
					Description: 'The color of the light'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'intensity' = SDValueFloat(float(1000)) [CONNECTABLE]
					Label: 'Intensity'
					Description: 'The brightness of the light source'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'unit_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Unit scale'
					Description: 'Modeling unit to meter conversion factor'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'unit' = SDValueEnum("mdl::nvidia::core_definitions::emission_type",0) [CONNECTABLE]
					Label: 'Unit for emission'
					Description: 'The physical unit of "Intensity"'
					Types:
						'mdl::nvidia::core_definitions::emission_type' (SDTypeEnum) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[49/62] 'mdl::nvidia::core_definitions::light_spot'
			Label: 'Spotlight emission'
			Description: 'Emissive material emitting focused in one direction'
			SDPropertyCategory = 'Input'
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Color'
					Description: 'The color of the light'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'intensity' = SDValueFloat(float(1000)) [CONNECTABLE]
					Label: 'Intensity'
					Description: 'The brightness of the light source'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'unit_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Unit scale'
					Description: 'Modeling unit to meter conversion factor'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'spot_exponent' = SDValueFloat(float(30)) [CONNECTABLE]
					Label: 'Spot focus'
					Description: 'larger values lead to more focused spotlights'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'unit' = SDValueEnum("mdl::nvidia::core_definitions::emission_type",0) [CONNECTABLE]
					Label: 'Unit for emission'
					Description: 'The physical unit of "Intensity"'
					Types:
						'mdl::nvidia::core_definitions::emission_type' (SDTypeEnum) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[50/62] 'mdl::nvidia::core_definitions::light_ies'
			Label: 'IES file based emission'
			Description: 'Emissive material emitting as described in an IES file'
			SDPropertyCategory = 'Input'
				'profile' [CONNECTABLE]
					Label: 'IES light profile data'
					Description: 'Data to describe the distribution of the light'
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference) [Uniform]
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Color'
					Description: 'The color of the light'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'intensity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Intensity'
					Description: 'The brightness of the light source'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'unit_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Unit scale'
					Description: 'Modeling unit to meter conversion factor'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[51/62] 'mdl::nvidia::core_definitions::metal'
			Label: 'Simple metal, deprecated'
			Description: 'A basic metallic material'
			SDPropertyCategory = 'Input'
				'metal_color' = SDValueColorRGB(ColorRGB(0.899999976,0.899999976,0.899999976)) [CONNECTABLE]
					Label: 'Color'
					Description: 'The color of the metal'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0.0500000007)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'glossy_weight' = SDValueFloat(float(0.899999976)) [CONNECTABLE]
					Label: 'Reflectivity'
					Description: 'Intensity of highlights and glossy reflections and highlights'
					Types:
						'float' (SDTypeFloat)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___256) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[52/62] 'mdl::nvidia::core_definitions::plastic'
			Label: 'Simple plastic, deprecated'
			Description: 'A basic dielectric, works for everything opaque that is not metallic'
			SDPropertyCategory = 'Input'
				'diffuse_color' = SDValueColorRGB(ColorRGB(0.5,0.5,0.5)) [CONNECTABLE]
					Label: 'Color'
					Description: 'The color of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0.25)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'ior' = SDValueFloat(float(1.39999998)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines reflectivity'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___257) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[53/62] 'mdl::nvidia::core_definitions::scratched_metal'
			Label: 'Metal , deprecated'
			Description: 'A metallic material with stretched reflections'
			SDPropertyCategory = 'Input'
				'metal_color' = SDValueColorRGB(ColorRGB(0.899999976,0.899999976,0.899999976)) [CONNECTABLE]
					Label: 'Color'
					Description: 'The color of the metal'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0.0500000007)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'glossy_weight' = SDValueFloat(float(0.899999976)) [CONNECTABLE]
					Label: 'Reflection weight'
					Description: 'Intensity of highlights and glossy reflections and highlights'
					Types:
						'float' (SDTypeFloat)
				'anisotropy' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy'
					Description: 'Higher values will stretch the highlight'
					Types:
						'float' (SDTypeFloat)
				'anisotropy_rotation' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy rotation'
					Description: 'Changes the orientation of the anisotropy. A value of 1 will rotate the orientation 360 degrees.'
					Types:
						'float' (SDTypeFloat)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___258) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[54/62] 'mdl::nvidia::core_definitions::scratched_plastic'
			Label: 'Plastic, deprecated'
			Description: 'A basic dielectric, works for everything opaque that is not metallic. Supports stretched highlights.'
			SDPropertyCategory = 'Input'
				'diffuse_color' = SDValueColorRGB(ColorRGB(0.5,0.5,0.5)) [CONNECTABLE]
					Label: 'Color'
					Description: 'The color of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0.0500000007)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'anisotropy' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy'
					Description: 'Higher values will stretch the highlight'
					Types:
						'float' (SDTypeFloat)
				'anisotropy_rotation' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy rotation'
					Description: 'Changes the orientation of the anisotropy. A value of 1 will rotate the orientation 360 degrees.'
					Types:
						'float' (SDTypeFloat)
				'ior' = SDValueFloat(float(1.39999998)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines reflectivity'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'reflectivity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Reflection weight'
					Description: 'Additional Reflectivity control'
					Types:
						'float' (SDTypeFloat)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___259) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[55/62] 'mdl::nvidia::core_definitions::apply_colorfalloff'
			Label: 'Apply a color falloff, deprecated'
			Description: 'Makes the color view dependent'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::scratched_metal__default_call___261) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get a clear coating applied'
					Types:
						'mdl::material' (SDTypeStruct)
				'color_0' = SDValueColorRGB(ColorRGB(1,0,0)) [CONNECTABLE]
					Label: 'Color 1'
					Description: 'The color of the dust'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color_1' = SDValueColorRGB(ColorRGB(0,1,0)) [CONNECTABLE]
					Label: 'Color 2'
					Description: 'The color of the dust'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color_2' = SDValueColorRGB(ColorRGB(0,0,1)) [CONNECTABLE]
					Label: 'Color 3'
					Description: 'The color of the dust'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color_3' = SDValueColorRGB(ColorRGB(1,0,0)) [CONNECTABLE]
					Label: 'Color 4'
					Description: 'The color of the dust'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color_4' = SDValueColorRGB(ColorRGB(0,1,0)) [CONNECTABLE]
					Label: 'Color 5'
					Description: 'The color of the dust'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[56/62] 'mdl::nvidia::core_definitions::flex_material'
			Label: 'Flexible material model, deprecated'
			Description: 'A complex material that can be configured to a wide variety of looks'
			SDPropertyCategory = 'Input'
				'base_color' = SDValueColorRGB(ColorRGB(0.5,0.5,0.5)) [CONNECTABLE]
					Label: 'Base color'
					Description: 'The color of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'diffuse_roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Diffuse roughness'
					Description: 'Higher roughness values lead to a more "powdery" look'
					Types:
						'float' (SDTypeFloat)
				'is_metal' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Metallic material'
					Description: 'If true, reflection will be colored and independent of view direction. If false, reflection will be white and direction dependent. Directional dependence is in this case based on the IOR (Fresnel effect).'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'reflectivity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Reflection weight'
					Description: 'Controls the amount of reflection'
					Types:
						'float' (SDTypeFloat)
				'reflection_roughness' = SDValueFloat(float(0.100000001)) [CONNECTABLE]
					Label: 'Reflection roughness'
					Description: 'Higher roughness values lead to more blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'anisotropy' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Reflection anisotropy'
					Description: 'Higher values will stretch the highlight'
					Types:
						'float' (SDTypeFloat)
				'anisotropy_rotation' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy rotation'
					Description: 'Changes the orientation of the anisotropy. A value of 1 will rotate the orientation 360 degrees.'
					Types:
						'float' (SDTypeFloat)
				'transparency' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Transmission weight'
					Description: 'Weights how much light passes through the object vs. its diffuse reflectivity'
					Types:
						'float' (SDTypeFloat)
				'transmission_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Transmission color'
					Description: 'Color effect for transmission independent of thickness of the object, similar to stained glass'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'volume_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Volume color'
					Description: 'If the material is not "Thin walled", "Volume color" will be reached at "Volume reference distance"(m)'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'transmission_roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Transmission roughness'
					Description: 'higher values lead to objects seen through the material to appear blurry'
					Types:
						'float' (SDTypeFloat)
				'base_thickness' = SDValueFloat(float(0.100000001)) [CONNECTABLE]
					Label: 'Volume reference distance'
					Description: 'If the material is not "Thin walled", "Volume color" will be reached at this distance (m). Enter a typical thickness of objects made of this material here.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'ior' = SDValueFloat(float(1.5)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines refraction in the volume. It also influences the reflectivity for materials that are not metallic.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'thin_walled' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Thin walled'
					Description: 'Thin walled materials do not refract and do not have volume effects. Good for soap bubbles or window glass.'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___262) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				'abbe_number' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Abbe number'
					Description: 'Controls dispersion. A value of 0 switches dispersion off, Dispersive materials have Abbe numbers between 25 and 85.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[57/62] 'mdl::nvidia::core_definitions::thin_glass'
			Label: 'Thin glass, deprecated'
			Description: 'A basic transmissive dielectric without refraction or volume'
			SDPropertyCategory = 'Input'
				'glass_color' = SDValueColorRGB(ColorRGB(0.949999988,0.949999988,0.949999988)) [CONNECTABLE]
					Label: 'Transmission color'
					Description: 'The color of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'ior' = SDValueFloat(float(1.39999998)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines reflectivity'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___263) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[58/62] 'mdl::nvidia::core_definitions::thin_translucent'
			Label: 'Thin translucent, deprecated'
			Description: 'A diffuse transmissive dielectric material'
			SDPropertyCategory = 'Input'
				'surface_color' = SDValueColorRGB(ColorRGB(0.949999988,0.949999988,0.949999988)) [CONNECTABLE]
					Label: 'Diffuse color'
					Description: 'The color of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'translucent_color' = SDValueColorRGB(ColorRGB(0.949999988,0.949999988,0.949999988)) [CONNECTABLE]
					Label: 'Translucence color'
					Description: 'The color of the volume of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'translucency' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Translucence weight'
					Description: 'Fraction of the incoming light that should be visible on the backside'
					Types:
						'float' (SDTypeFloat)
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'ior' = SDValueFloat(float(1.39999998)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines reflectivity'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___264) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[59/62] 'mdl::nvidia::core_definitions::thick_glass'
			Label: 'Thick glass, deprecated'
			Description: 'A basic transmissive dielectric with refraction and coloring in the volume'
			SDPropertyCategory = 'Input'
				'transmission_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Transmission color'
					Description: 'Colors the light entering the volume, similar to stained glass'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'glass_color' = SDValueColorRGB(ColorRGB(0.949999988,0.949999988,0.949999988)) [CONNECTABLE]
					Label: 'Volume color'
					Description: 'The color of the glass body'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'ior' = SDValueFloat(float(1.39999998)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines reflectivity as well as amount of refraction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'base_thickness' = SDValueFloat(float(0.100000001)) [CONNECTABLE]
					Label: 'Volume reference distance'
					Description: '"Volume color" will be reached at this distance (m). Enter a typical thickness of objects made of this material here.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___265) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				'abbe_number' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Abbe number'
					Description: 'Controls dispersion. A value of 0 switches dispersion off. Dispersive materials have Abbe numbers between 25 and 85.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[60/62] 'mdl::nvidia::core_definitions::thick_translucent'
			Label: 'Thick translucent, deprecated'
			Description: 'A subsurface scattering material'
			SDPropertyCategory = 'Input'
				'transmission_color' = SDValueColorRGB(ColorRGB(0.949999988,0.949999988,0.949999988)) [CONNECTABLE]
					Label: 'Transmission color'
					Description: 'The color of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'volume_color' = SDValueColorRGB(ColorRGB(0.949999988,0.949999988,0.949999988)) [CONNECTABLE]
					Label: 'Volume color'
					Description: 'The color of the volume at "Volume reference distance"'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'volume_scattering' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Volume scattering'
					Description: 'Amount of scattering for objects at "Volume reference distance"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Reflection roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'reflectivity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Reflection weight'
					Description: 'Overall reflectivity of the material'
					Types:
						'float' (SDTypeFloat)
				'base_thickness' = SDValueFloat(float(0.100000001)) [CONNECTABLE]
					Label: 'Volume reference distance'
					Description: '"Volume color" and "Volume scattering" will be reached at this distance (m). Enter a typical thickness of objects made of this material here.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___266) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				'ior' = SDValueFloat(float(1.39999998)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines reflectivity as well as amount of refraction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'abbe_number' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Abbe number'
					Description: 'Controls dispersion. A value of 0switches dispersion off. Dispersive materials have Abbe numbers between 25 and 85.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[61/62] 'mdl::nvidia::core_definitions::apply_clearcoat'
			Label: 'Apply clear coating, deprecated'
			Description: 'Apply clear coat to an existing material'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::diffuse__default_call___268) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get a clear coating applied'
					Types:
						'mdl::material' (SDTypeStruct)
				'ior' = SDValueFloat(float(1.60000002)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines reflectivity of the clear coat'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Reflection roughness'
					Description: 'Determines roughness of the clear coat'
					Types:
						'float' (SDTypeFloat)
				'visibility' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Coat visibility'
					Description: 'Determines visibility of the clear coat'
					Types:
						'float' (SDTypeFloat)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___269) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				'coat_filter_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Coat filter color'
					Description: 'For simulating coatings with colored resins that modulate the color of underlying layers'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[62/62] 'mdl::nvidia::core_definitions::apply_metalcoat'
			Label: 'Apply thin metal coating, deprecated'
			Description: 'Apply metal coat to an existing material'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::diffuse__default_call___271) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get a metallic coating applied'
					Types:
						'mdl::material' (SDTypeStruct)
				'metal_color' = SDValueColorRGB(ColorRGB(0.949999988,0.949999988,0.949999988)) [CONNECTABLE]
					Label: 'Reflection color'
					Description: 'The color of the metal'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'visibility' = SDValueFloat(float(0.300000012)) [CONNECTABLE]
					Label: 'Reflection weight'
					Description: 'The opacity of the coat'
					Types:
						'float' (SDTypeFloat)
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Reflection roughness'
					Description: 'Determines roughness of the metal coat'
					Types:
						'float' (SDTypeFloat)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___272) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
	Types:
		[1/4] 'mdl::nvidia::core_definitions::emission_type'
			'mdl::nvidia::core_definitions::emission_type' (SDTypeEnum)
				int lumen_m2 = SDValueInt(int(0))
				int lumen = SDValueInt(int(1))
				int candela = SDValueInt(int(2))
				int nit = SDValueInt(int(3))
		[2/4] 'mdl::nvidia::core_definitions::material_type'
			'mdl::nvidia::core_definitions::material_type' (SDTypeEnum)
				int simple_material = SDValueInt(int(0))
				int complex_material = SDValueInt(int(1))
				int combiner_material = SDValueInt(int(2))
				int modifier_material = SDValueInt(int(3))
		[3/4] 'mdl::nvidia::core_definitions::cell_type'
			'mdl::nvidia::core_definitions::cell_type' (SDTypeEnum)
				int simple_cells = SDValueInt(int(0))
				int crystal_cells = SDValueInt(int(1))
				int bordered_cells = SDValueInt(int(2))
		[4/4] 'mdl::nvidia::core_definitions::cell_base'
			'mdl::nvidia::core_definitions::cell_base' (SDTypeEnum)
				int circular_cells = SDValueInt(int(0))
				int diamond_cells = SDValueInt(int(1))
[5/37] 'mdl::alg::materials::designer::skin' (SDMDLModule)
	Definitions:
		[1/1] 'mdl::alg::materials::designer::skin::physically_metallic_roughness_sss'
			Label: 'Physically Metallic Roughness - SSS'
			Description: 'Mixture of the usual PBR shader with a Subsurface scattering one'
			SDPropertyCategory = 'Input'
				'baseColor' = SDValueColorRGB(ColorRGB(0.214040995,0.214040995,0.214040995)) [CONNECTABLE]
					Label: 'Base Color/Diffuse'
					Description: 'Base Color channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___206) [CONNECTABLE]
					Label: 'Normal'
					Description: 'Normal channel'
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'roughness' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Roughness channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'metallic' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Metallic'
					Description: 'Metallic channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'height' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Height'
					Description: 'Height channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'heightScale' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scale'
					Description: 'provides significant physical detail to the surface by manipulating the vertices of the mesh'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'ior' = SDValueFloat(float(1.5)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Desrcibes the index of refraction of the material medium'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scattering' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scattering'
					Description: 'How much to blend the SSS material to take into account vs. the usual PBR shader'
					Types:
						'float' (SDTypeFloat) [Varying]
				'scatteringScale' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scale'
					Description: 'Artistict control to tweak the subsurface scattering effect'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scatteringColor' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Color'
					Description: 'Describes at which probability each wavelength scatters within the volume'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'ambientOcclusion' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Ambient Occlusion'
					Description: 'Ambient Occlusion channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropyLevel' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy Level'
					Description: 'Anisotropy Level channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropyAngle' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy Angle'
					Description: 'Anisotropy Angle channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'emissiveColor' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Emissive'
					Description: 'Emissive channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'emissiveIntensity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Emissive Intensity'
					Description: 'Controls how much light is emitted from the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'specularLevel' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Specular Level'
					Description: 'Specular Level channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'scalarZeroValue' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Scalar Zero Value'
					Description: 'Determine the neutral height value'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'tiling' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Tiling value to keep displacement tiling independent'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
[6/37] 'mdl::alg::materials::designer::legacy::physically_metallic_roughness_coated' (SDMDLModule)
	Definitions:
		[1/1] 'mdl::alg::materials::designer::legacy::physically_metallic_roughness_coated::physically_metallic_roughness_coated'
			Label: 'Physically Metallic Roughness - Coating'
			Description: 'The usual PBR shader, with a coated layer color'
			SDPropertyCategory = 'Input'
				'baseColor' = SDValueColorRGB(ColorRGB(0.214040995,0.214040995,0.214040995)) [CONNECTABLE]
					Label: 'Base Color/Diffuse'
					Description: 'Base Color channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___196) [CONNECTABLE]
					Label: 'Normal'
					Description: 'Normal channel'
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'roughness' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Roughness channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'metallic' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Metallic'
					Description: 'Metallic channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'height' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Height'
					Description: 'Height channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'heightScale' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scale'
					Description: 'provides significant physical detail to the surface by manipulating the vertices of the mesh'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'ambientOcclusion' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Ambient Occlusion'
					Description: 'Ambient Occlusion channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropyLevel' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy Level'
					Description: 'Anisotropy Level channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropyAngle' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy Angle'
					Description: 'Anisotropy Angle channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'emissiveColor' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Emissive'
					Description: 'Emissive channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'emissiveIntensity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Emissive Intensity'
					Description: 'Controls how much light is emitted from the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'specularLevel' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Specular Level'
					Description: 'Specular Level channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'opacity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Opacity'
					Description: 'Opacity channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'refraction' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Refraction'
					Description: 'Refraction channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'refractionIOR' = SDValueFloat(float(1.5)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Index of Refraction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scattering' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scattering'
					Description: 'controls how much light is scattered through the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'absorption' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Absorption'
					Description: 'controls how much light is absorbed through the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'absorptionColor' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Absorption Color'
					Description: 'simulates shifts in color when light passes through the surface'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'coatWeight' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Weight'
					Description: 'How much of the coating is present'
					Types:
						'float' (SDTypeFloat) [Varying]
				'coatSpecularLevel' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Specular Level'
					Description: 'Specular control for F0 : 0 -> 0%, 1 -> 8%'
					Types:
						'float' (SDTypeFloat) [Varying]
				'coatColor' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Tint color'
					Description: 'Coating color which affects transmitted light going to below layers'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'coatRoughness' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'How irregular are surface micro detail : 0 -> regular (i.e. polished), 1 -> irregular (i.e. rough)'
					Types:
						'float' (SDTypeFloat) [Varying]
				'coatNormal' = SDMDLValueCall(mdl::state::normal()__default_call___197) [CONNECTABLE]
					Label: 'Normal'
					Description: 'Desribes surface relief details'
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'coatInheritNormal' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Inherit normal'
					Description: 'Whether the coat surface inherit the same relief as below layer or if it has its own'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'scalarZeroValue' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Scalar Zero Value'
					Description: 'Determine the neutral height value'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'tiling' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Tiling value to keep displacement tiling independent'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
[7/37] 'mdl::alg::materials::designer::legacy::physically_metallic_roughness' (SDMDLModule)
	Definitions:
		[1/1] 'mdl::alg::materials::designer::legacy::physically_metallic_roughness::physically_metallic_roughness'
			Label: 'Physically Metallic Roughness'
			SDPropertyCategory = 'Input'
				'baseColor' = SDValueColorRGB(ColorRGB(0.214040995,0.214040995,0.214040995)) [CONNECTABLE]
					Label: 'Base Color/Diffuse'
					Description: 'Base Color channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___195) [CONNECTABLE]
					Label: 'Normal'
					Description: 'Normal channel'
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'roughness' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Roughness channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'metallic' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Metallic'
					Description: 'Metallic channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'height' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Height'
					Description: 'Height channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'heightScale' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scale'
					Description: 'provides significant physical detail to the surface by manipulating the vertices of the mesh'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'ambientOcclusion' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Ambient Occlusion'
					Description: 'Ambient Occlusion channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropyLevel' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy Level'
					Description: 'Anisotropy Level channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropyAngle' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy Angle'
					Description: 'Anisotropy Angle channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'emissiveColor' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Emissive'
					Description: 'Emissive channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'emissiveIntensity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Emissive Intensity'
					Description: 'Controls how much light is emitted from the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'specularLevel' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Specular Level'
					Description: 'Specular Level channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'opacity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Opacity'
					Description: 'Opacity channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'refraction' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Refraction'
					Description: 'Refraction channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'refractionIOR' = SDValueFloat(float(1.5)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Index of Refraction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scattering' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scattering'
					Description: 'controls how much light is scattered through the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'absorption' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Absorption'
					Description: 'controls how much light is absorbed through the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'absorptionColor' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Absorption Color'
					Description: 'simulates shifts in color when light passes through the surface'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'scalarZeroValue' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Scalar Zero Value'
					Description: 'Determine the neutral height value'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'tiling' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Tiling value to keep displacement tiling independent'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
[8/37] 'mdl::alg::materials::designer::legacy::physically_metallic_roughness_sss' (SDMDLModule)
	Definitions:
		[1/1] 'mdl::alg::materials::designer::legacy::physically_metallic_roughness_sss::physically_metallic_roughness_sss'
			Label: 'Physically Metallic Roughness - SSS'
			Description: 'Mixture of the usual PBR shader with a Subsurface scattering one'
			SDPropertyCategory = 'Input'
				'baseColor' = SDValueColorRGB(ColorRGB(0.214040995,0.214040995,0.214040995)) [CONNECTABLE]
					Label: 'Base Color/Diffuse'
					Description: 'Base Color channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___205) [CONNECTABLE]
					Label: 'Normal'
					Description: 'Normal channel'
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'roughness' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Roughness channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'metallic' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Metallic'
					Description: 'Metallic channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'height' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Height'
					Description: 'Height channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'heightScale' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scale'
					Description: 'provides significant physical detail to the surface by manipulating the vertices of the mesh'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'ior' = SDValueFloat(float(1.5)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Desrcibes the index of refraction of the material medium'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scattering' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scattering'
					Description: 'How much to blend the SSS material to take into account vs. the usual PBR shader'
					Types:
						'float' (SDTypeFloat) [Varying]
				'scatteringScale' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scale'
					Description: 'Artistict control to tweak the subsurface scattering effect'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scatteringColor' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Color'
					Description: 'Describes at which probability each wavelength scatters within the volume'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'ambientOcclusion' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Ambient Occlusion'
					Description: 'Ambient Occlusion channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropyLevel' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy Level'
					Description: 'Anisotropy Level channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropyAngle' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy Angle'
					Description: 'Anisotropy Angle channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'emissiveColor' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Emissive'
					Description: 'Emissive channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'emissiveIntensity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Emissive Intensity'
					Description: 'Controls how much light is emitted from the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'specularLevel' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Specular Level'
					Description: 'Specular Level channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'scalarZeroValue' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Scalar Zero Value'
					Description: 'Determine the neutral height value'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'tiling' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Tiling value to keep displacement tiling independent'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
[9/37] 'mdl::alg::materials::designer::pbr' (SDMDLModule)
	Definitions:
		[1/3] 'mdl::alg::materials::designer::pbr::physically_metallic_roughness'
			Label: 'Physically Metallic Roughness'
			SDPropertyCategory = 'Input'
				'baseColor' = SDValueColorRGB(ColorRGB(0.214040995,0.214040995,0.214040995)) [CONNECTABLE]
					Label: 'Base Color/Diffuse'
					Description: 'Base Color channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___200) [CONNECTABLE]
					Label: 'Normal'
					Description: 'Normal channel'
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'roughness' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Roughness channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'metallic' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Metallic'
					Description: 'Metallic channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'height' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Height'
					Description: 'Height channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'heightScale' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scale'
					Description: 'provides significant physical detail to the surface by manipulating the vertices of the mesh'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'ambientOcclusion' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Ambient Occlusion'
					Description: 'Ambient Occlusion channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropyLevel' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy Level'
					Description: 'Anisotropy Level channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropyAngle' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy Angle'
					Description: 'Anisotropy Angle channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'emissiveColor' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Emissive'
					Description: 'Emissive channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'emissiveIntensity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Emissive Intensity'
					Description: 'Controls how much light is emitted from the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'specularLevel' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Specular Level'
					Description: 'Specular Level channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'opacity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Opacity'
					Description: 'Opacity channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'refraction' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Refraction'
					Description: 'Refraction channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'refractionIOR' = SDValueFloat(float(1.5)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Index of Refraction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scattering' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scattering'
					Description: 'controls how much light is scattered through the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'absorption' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Absorption'
					Description: 'controls how much light is absorbed through the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'absorptionColor' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Absorption Color'
					Description: 'simulates shifts in color when light passes through the surface'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'scalarZeroValue' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Scalar Zero Value'
					Description: 'Determine the neutral height value'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'tiling' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Tiling value to keep displacement tiling independent'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[2/3] 'mdl::alg::materials::designer::pbr::physically_metallic_roughness_coated'
			Label: 'Physically Metallic Roughness - Coating'
			Description: 'The usual PBR shader, with a coated layer color'
			SDPropertyCategory = 'Input'
				'baseColor' = SDValueColorRGB(ColorRGB(0.214040995,0.214040995,0.214040995)) [CONNECTABLE]
					Label: 'Base Color/Diffuse'
					Description: 'Base Color channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___201) [CONNECTABLE]
					Label: 'Normal'
					Description: 'Normal channel'
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'roughness' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Roughness channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'metallic' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Metallic'
					Description: 'Metallic channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'height' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Height'
					Description: 'Height channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'heightScale' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scale'
					Description: 'provides significant physical detail to the surface by manipulating the vertices of the mesh'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'ambientOcclusion' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Ambient Occlusion'
					Description: 'Ambient Occlusion channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropyLevel' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy Level'
					Description: 'Anisotropy Level channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropyAngle' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy Angle'
					Description: 'Anisotropy Angle channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'emissiveColor' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Emissive'
					Description: 'Emissive channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'emissiveIntensity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Emissive Intensity'
					Description: 'Controls how much light is emitted from the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'specularLevel' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Specular Level'
					Description: 'Specular Level channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'opacity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Opacity'
					Description: 'Opacity channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'refraction' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Refraction'
					Description: 'Refraction channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'refractionIOR' = SDValueFloat(float(1.5)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Index of Refraction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scattering' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scattering'
					Description: 'controls how much light is scattered through the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'absorption' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Absorption'
					Description: 'controls how much light is absorbed through the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'absorptionColor' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Absorption Color'
					Description: 'simulates shifts in color when light passes through the surface'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'coatWeight' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Weight'
					Description: 'How much of the coating is present'
					Types:
						'float' (SDTypeFloat) [Varying]
				'coatSpecularLevel' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Specular Level'
					Description: 'Specular control for F0 : 0 -> 0%, 1 -> 8%'
					Types:
						'float' (SDTypeFloat) [Varying]
				'coatColor' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Tint color'
					Description: 'Coating color which affects transmitted light going to below layers'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'coatRoughness' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'How irregular are surface micro detail : 0 -> regular (i.e. polished) 		, 1 -> irregular (i.e. rough)'
					Types:
						'float' (SDTypeFloat) [Varying]
				'coatNormal' = SDMDLValueCall(mdl::state::normal()__default_call___202) [CONNECTABLE]
					Label: 'Normal'
					Description: 'Desribes surface relief details'
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'coatInheritNormal' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Inherit normal'
					Description: 'Whether the coat surface inherit the same relief as below layer or if it has its own'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'scalarZeroValue' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Scalar Zero Value'
					Description: 'Determine the neutral height value'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'tiling' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Tiling value to keep displacement tiling independent'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[3/3] 'mdl::alg::materials::designer::pbr::physically_specular_glossiness'
			Label: 'Physically Specular Glossiness'
			SDPropertyCategory = 'Input'
				'baseColor' = SDValueColorRGB(ColorRGB(0.214040995,0.214040995,0.214040995)) [CONNECTABLE]
					Label: 'Diffuse'
					Description: 'Diffuse channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___204) [CONNECTABLE]
					Label: 'Normal'
					Description: 'Normal channel'
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'specular' = SDValueColorRGB(ColorRGB(0.214040995,0.214040995,0.214040995)) [CONNECTABLE]
					Label: 'Specular'
					Description: 'Specular channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'glossiness' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Glossiness'
					Description: 'Glossiness channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'height' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Height'
					Description: 'Height channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'heightScale' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scale'
					Description: 'provides significant physical detail to the surface by manipulating the vertices of the mesh'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'ambientOcclusion' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Ambient Occlusion'
					Description: 'Ambient Occlusion channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropyLevel' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy Level'
					Description: 'Anisotropy Level channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropyAngle' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy Angle'
					Description: 'Anisotropy Angle channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'emissiveColor' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Emissive'
					Description: 'Emissive channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'emissiveIntensity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Emissive Intensity'
					Description: 'Controls how much light is emitted from the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'opacity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Opacity'
					Description: 'Opacity channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'refraction' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Refraction'
					Description: 'Refraction'
					Types:
						'float' (SDTypeFloat) [Varying]
				'refractionColor' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Refraction Color'
					Description: 'Refraction channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'refractionIOR' = SDValueFloat(float(1.5)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Index of Refraction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scattering' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scattering'
					Description: 'controls how much light is scattered through the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'absorption' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Absorption'
					Description: 'controls how much light is absorbed through the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'absorptionColor' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Absorption Color'
					Description: 'simulates shifts in color when light passes through the surface'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'scalarZeroValue' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Scalar Zero Value'
					Description: 'Determine the neutral height value'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'tiling' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Tiling value to keep displacement tiling independent'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
[10/37] 'mdl::alg::materials::designer::lambert' (SDMDLModule)
	Definitions:
		[1/1] 'mdl::alg::materials::designer::lambert::lambert'
			Label: 'Lambert'
			SDPropertyCategory = 'Input'
				'baseColor' = SDValueColorRGB(ColorRGB(0.214040995,0.214040995,0.214040995)) [CONNECTABLE]
					Label: 'Diffuse'
					Description: 'Diffuse channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
[11/37] 'mdl::alg::materials::designer::lights' (SDMDLModule)
	Definitions:
		[1/1] 'mdl::alg::materials::designer::lights::diffuse_light'
			Label: 'Diffuse Light'
			SDPropertyCategory = 'Input'
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'intensity' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
[12/37] 'mdl::adobe::util' (SDMDLModule)
	Definitions:
		[1/7] 'mdl::adobe::util::bool_texture(texture_2d)'
			SDPropertyCategory = 'Input'
				'texture' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool) [Varying]
				
		[2/7] 'mdl::adobe::util::int_texture(texture_2d)'
			SDPropertyCategory = 'Input'
				'texture' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt) [Varying]
				
		[3/7] 'mdl::adobe::util::float_texture(texture_2d)'
			SDPropertyCategory = 'Input'
				'texture' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat) [Varying]
				
		[4/7] 'mdl::adobe::util::double_texture(texture_2d)'
			SDPropertyCategory = 'Input'
				'texture' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble) [Varying]
				
		[5/7] 'mdl::adobe::util::color_texture(texture_2d)'
			SDPropertyCategory = 'Input'
				'texture' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				
		[6/7] 'mdl::adobe::util::normal_texture(texture_2d)'
			SDPropertyCategory = 'Input'
				'texture' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[7/7] 'mdl::adobe::util::vector_texture(texture_2d)'
			SDPropertyCategory = 'Input'
				'texture' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
[13/37] 'mdl::nvidia::axf_importer::axf_importer' (SDMDLModule)
	Definitions:
		[1/7] 'mdl::nvidia::axf_importer::axf_importer::brdf_type(::nvidia::axf_importer::axf_importer::brdf_type)'
			Description: 'BRDF types supported for AxF SVBRDFs'
			SDPropertyCategory = 'Input'
				'v' = SDValueEnum("mdl::nvidia::axf_importer::axf_importer::brdf_type",0) [CONNECTABLE]
					Types:
						'mdl::nvidia::axf_importer::axf_importer::brdf_type' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::nvidia::axf_importer::axf_importer::brdf_type' (SDTypeEnum)
				
		[2/7] 'mdl::nvidia::axf_importer::axf_importer::int(::nvidia::axf_importer::axf_importer::brdf_type)'
			Description: 'BRDF types supported for AxF SVBRDFs'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::nvidia::axf_importer::axf_importer::brdf_type' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[3/7] 'mdl::nvidia::axf_importer::axf_importer::fresnel_type(::nvidia::axf_importer::axf_importer::fresnel_type)'
			Description: 'Fresnel types supported for AxF SVBRDFs'
			SDPropertyCategory = 'Input'
				'v' = SDValueEnum("mdl::nvidia::axf_importer::axf_importer::fresnel_type",0) [CONNECTABLE]
					Types:
						'mdl::nvidia::axf_importer::axf_importer::fresnel_type' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::nvidia::axf_importer::axf_importer::fresnel_type' (SDTypeEnum)
				
		[4/7] 'mdl::nvidia::axf_importer::axf_importer::int(::nvidia::axf_importer::axf_importer::fresnel_type)'
			Description: 'Fresnel types supported for AxF SVBRDFs'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::nvidia::axf_importer::axf_importer::fresnel_type' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[5/7] 'mdl::nvidia::axf_importer::axf_importer::svbrdf'
			Label: 'AxF SVBRDF material'
			Description: 'MDL implementation of the SVBRDF model used in AxF files'
			SDPropertyCategory = 'Input'
				'diffuse_texture' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'specular_texture' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'normal_texture' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'specular_brdf_texture_u' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'specular_brdf_texture_v' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'specular_brdf_texture_rotation' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'specular_brdf_texture_f0' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'brdf_type' = SDValueEnum("mdl::nvidia::axf_importer::axf_importer::brdf_type",0) [CONNECTABLE]
					Types:
						'mdl::nvidia::axf_importer::axf_importer::brdf_type' (SDTypeEnum) [Uniform]
				'isotropic' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'fresnel_type' = SDValueEnum("mdl::nvidia::axf_importer::axf_importer::fresnel_type",0) [CONNECTABLE]
					Types:
						'mdl::nvidia::axf_importer::axf_importer::fresnel_type' (SDTypeEnum) [Uniform]
				'specular_brdf_texture_fresnel' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'has_clearcoat' = SDValueBool(bool(false)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'clearcoat_normal_texture' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'clearcoat_ior_texture' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'clearcoat_color_texture' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coordinate_override' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___276) [CONNECTABLE]
					Description: 'By default, texturing is using object uv coordinates. Procedural coordinate generators like base::coordinate_projection can be attached here to override the default behavior'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'use_sample_size' = SDValueBool(bool(true)) [CONNECTABLE]
					Label: 'Use sample size'
					Description: 'Set to true if the real world measurements of the measured sample are known'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'sample_size_u' = SDValueFloat(float(0.100000001)) [CONNECTABLE]
					Label: 'Sample size U'
					Description: 'The size of the measured sample in m, measured in the U direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'sample_size_v' = SDValueFloat(float(0.100000001)) [CONNECTABLE]
					Label: 'Sample size V'
					Description: 'The size of the measured sample in m, measured in the V direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scene_to_meter' = SDMDLValueCall(mdl::state::meters_per_scene_unit()__default_call___277) [CONNECTABLE]
					Label: 'Scene to m conversion factor'
					Description: 'Conversion factor from modeling scale used in the scene and m. Only used if "Use real world size" is true and for displacement'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scale_u' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Scale V'
					Description: 'Scale factor in V direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scale_v' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Scale U'
					Description: 'Scale factor in U direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'rotate_uv' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Rotation angle'
					Description: 'Changes the orientation of the textures on the object'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'wrap' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Label: 'Texture wrapping behavior'
					Description: 'Controls the wrapping behavior of the texture if it fits multiple times on an object'
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'normal_texture_strength' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Normal texture strength'
					Description: 'Can be used to tweak the bumpiness of the material. At 1.0 it will match the measured bumpiness'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'geometry_normal' = SDMDLValueCall(mdl::state::normal()__default_call___278) [CONNECTABLE]
					Label: 'Geometry normal'
					Description: 'Allows the use of an additional bump mapping effect'
					Types:
						'float3' (SDTypeFloat3)
				'scale_height' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Scale height texture'
					Description: 'Scale factor for the displacement mapping effect'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'height_texture' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'alpha_texture' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'transmission_color_texture' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'specular_amount_texture' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[6/7] 'mdl::nvidia::axf_importer::axf_importer::carpaint'
			Label: 'AxF carpaint material'
			Description: 'MDL approximation of the AxF carpaint material'
			SDPropertyCategory = 'Input'
				'brdf_colors' = SDValueArray(SDValueColorRGB(ColorRGB(1,1,1))) [CONNECTABLE]
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				'clearcoat_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'brdf_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'ior' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'ct_diffuse' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'ct_coeffs' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'ct_f0s' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'ct_spreads' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'clearcoat_normal_texture' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coordinate_override' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___282) [CONNECTABLE]
					Description: 'By default, texturing is using object uv coordinates. Procedural coordinate generators like base::coordinate_projection can be attached here to override the default behavior'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'use_sample_size' = SDValueBool(bool(true)) [CONNECTABLE]
					Label: 'Use sample size'
					Description: 'Set to true if the real world measurements of the measured sample are known'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'sample_size_u' = SDValueFloat(float(0.100000001)) [CONNECTABLE]
					Label: 'Sample size U'
					Description: 'The size of the measured sample in m, measured in the U direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'sample_size_v' = SDValueFloat(float(0.100000001)) [CONNECTABLE]
					Label: 'Sample size V'
					Description: 'The size of the measured sample in m, measured in the V direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scene_to_meter' = SDMDLValueCall(mdl::state::meters_per_scene_unit()__default_call___283) [CONNECTABLE]
					Label: 'Scene to m conversion factor'
					Description: 'Conversion factor from modeling scale used in the scene and m. Only used if "Use real world size" is true'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scale_u' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Scale V'
					Description: 'Scale factor in V direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scale_v' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Scale U'
					Description: 'Scale factor in U direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'rotate_uv' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Rotation angle'
					Description: 'Changes the orientation of the textures on the object'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'wrap' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Label: 'Texture wrapping behavior'
					Description: 'Controls the wrapping behavior of the texture if it fits multiple times on an object'
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'geometry_normal' = SDMDLValueCall(mdl::state::normal()__default_call___284) [CONNECTABLE]
					Label: 'Geometry normal'
					Description: 'Allows the use of an additional bump mapping effect'
					Types:
						'float3' (SDTypeFloat3)
				'enable_flakes' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Enable flakes'
					Description: 'Enables the additional flake component'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'flake_uvw_scale' = SDValueFloat3(float3(1,1,1)) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'flake_importance_data' = SDValueArray() [CONNECTABLE]
					Types:
						'SDTypeArray<int>' (SDTypeArray)
				'flake_peak_intensity_scale' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'flake_size' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Flake size'
					Description: 'Artistic control to modifiy flake size'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'flake_bsdf_roughness' = SDValueFloat(float(0.00999999978)) [CONNECTABLE]
					Label: 'Flake roughness'
					Description: 'Artistic flake reflection roughness control'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'flake_intensity_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Flake brightness'
					Description: 'Artistic flake brightness control'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'precise_sub_clearcoat_component' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Measured sub-clearcoat BRDF'
					Description: 'Use a measured BRDF for sub-clearcoat layer. Enables correct rendering for refracting clearcoats and color shifting paints.'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'sub_clearcoat_measurement' = SDMDLValueBSDFMeasurementReference() [CONNECTABLE]
					Types:
						'mdl::bsdf_measurement' (SDMDLTypeBSDFMeasurementReference) [Uniform]
				'flake_orientation_falloff' = SDValueArray() [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				'brdf_colors_2d' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'brdf_colors_2d_included_in_measurement' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[7/7] 'mdl::nvidia::axf_importer::axf_importer::volumetric'
			Label: 'AxF volumetric material'
			Description: 'MDL version of the AxF volumetric material'
			SDPropertyCategory = 'Input'
				'sigma_a' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'sigma_s' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'phasefunc_g' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'ior' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
	Types:
		[1/4] 'mdl::nvidia::axf_importer::axf_importer::brdf_type'
			'mdl::nvidia::axf_importer::axf_importer::brdf_type' (SDTypeEnum)
				int brdf_ward_geislermoroder = SDValueInt(int(0))
				int brdf_cooktorrance = SDValueInt(int(1))
				int brdf_ggx = SDValueInt(int(2))
				int brdf_count = SDValueInt(int(3))
		[2/4] 'mdl::nvidia::axf_importer::axf_importer::fresnel_type'
			'mdl::nvidia::axf_importer::axf_importer::fresnel_type' (SDTypeEnum)
				int fresnel_none = SDValueInt(int(0))
				int fresnel_schlick = SDValueInt(int(1))
				int fresnel_fresnel = SDValueInt(int(2))
				int fresnel_count = SDValueInt(int(3))
		[3/4] 'mdl::nvidia::axf_importer::axf_importer::flake_value'
			'mdl::nvidia::axf_importer::axf_importer::flake_value' (SDTypeStruct)
				float weight
				float3 col
				float3 normal
				float f0
		[4/4] 'mdl::nvidia::axf_importer::axf_importer::flake_noise_value'
			'mdl::nvidia::axf_importer::axf_importer::flake_noise_value' (SDTypeStruct)
				float priority
				int rnd_seed
[14/37] 'mdl::tex' (SDMDLModule)
	Definitions:
		[1/85] 'mdl::tex::gamma_mode(::tex::gamma_mode)'
			SDPropertyCategory = 'Input'
				'v' = SDValueEnum("mdl::tex::gamma_mode",0) [CONNECTABLE]
					Types:
						'mdl::tex::gamma_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::tex::gamma_mode' (SDTypeEnum)
				
		[2/85] 'mdl::tex::int(::tex::gamma_mode)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::tex::gamma_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[3/85] 'mdl::tex::wrap_mode(::tex::wrap_mode)'
			SDPropertyCategory = 'Input'
				'v' = SDValueEnum("mdl::tex::wrap_mode",0) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum)
				
		[4/85] 'mdl::tex::int(::tex::wrap_mode)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[5/85] 'mdl::tex::width$1.3(texture_2d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[6/85] 'mdl::tex::width$1.6(texture_2d,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[7/85] 'mdl::tex::width(texture_2d,int2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[8/85] 'mdl::tex::height$1.3(texture_2d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[9/85] 'mdl::tex::height$1.6(texture_2d,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[10/85] 'mdl::tex::height(texture_2d,int2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[11/85] 'mdl::tex::width$1.6(texture_3d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[12/85] 'mdl::tex::width(texture_3d,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[13/85] 'mdl::tex::height$1.6(texture_3d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[14/85] 'mdl::tex::height(texture_3d,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[15/85] 'mdl::tex::depth$1.6(texture_3d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[16/85] 'mdl::tex::depth(texture_3d,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[17/85] 'mdl::tex::width(texture_cube)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[18/85] 'mdl::tex::height(texture_cube)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[19/85] 'mdl::tex::lookup_float$1.6(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[20/85] 'mdl::tex::lookup_float(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[21/85] 'mdl::tex::lookup_float$1.6(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[22/85] 'mdl::tex::lookup_float(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[23/85] 'mdl::tex::lookup_float(texture_cube,float3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[24/85] 'mdl::tex::lookup_float(texture_ptex,int)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				'channel' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat) [Varying]
				
		[25/85] 'mdl::tex::lookup_float2$1.6(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[26/85] 'mdl::tex::lookup_float2(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[27/85] 'mdl::tex::lookup_float2$1.6(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[28/85] 'mdl::tex::lookup_float2(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[29/85] 'mdl::tex::lookup_float2(texture_cube,float3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[30/85] 'mdl::tex::lookup_float2(texture_ptex,int)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				'channel' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2) [Varying]
				
		[31/85] 'mdl::tex::lookup_float3$1.6(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[32/85] 'mdl::tex::lookup_float3(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[33/85] 'mdl::tex::lookup_float3$1.6(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[34/85] 'mdl::tex::lookup_float3(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[35/85] 'mdl::tex::lookup_float3(texture_cube,float3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[36/85] 'mdl::tex::lookup_float3(texture_ptex,int)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				'channel' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[37/85] 'mdl::tex::lookup_float4$1.6(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[38/85] 'mdl::tex::lookup_float4(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[39/85] 'mdl::tex::lookup_float4$1.6(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[40/85] 'mdl::tex::lookup_float4(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[41/85] 'mdl::tex::lookup_float4(texture_cube,float3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[42/85] 'mdl::tex::lookup_float4(texture_ptex,int)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				'channel' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4) [Varying]
				
		[43/85] 'mdl::tex::lookup_color$1.6(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[44/85] 'mdl::tex::lookup_color(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[45/85] 'mdl::tex::lookup_color$1.6(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[46/85] 'mdl::tex::lookup_color(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[47/85] 'mdl::tex::lookup_color(texture_cube,float3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[48/85] 'mdl::tex::lookup_color(texture_ptex,int)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				'channel' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				
		[49/85] 'mdl::tex::texel_float$1.3(texture_2d,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[50/85] 'mdl::tex::texel_float$1.6(texture_2d,int2,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[51/85] 'mdl::tex::texel_float(texture_2d,int2,int2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[52/85] 'mdl::tex::texel_float2$1.3(texture_2d,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[53/85] 'mdl::tex::texel_float2$1.6(texture_2d,int2,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[54/85] 'mdl::tex::texel_float2(texture_2d,int2,int2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[55/85] 'mdl::tex::texel_float3$1.3(texture_2d,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[56/85] 'mdl::tex::texel_float3$1.6(texture_2d,int2,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[57/85] 'mdl::tex::texel_float3(texture_2d,int2,int2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[58/85] 'mdl::tex::texel_float4$1.3(texture_2d,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[59/85] 'mdl::tex::texel_float4$1.6(texture_2d,int2,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[60/85] 'mdl::tex::texel_float4(texture_2d,int2,int2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[61/85] 'mdl::tex::texel_color$1.3(texture_2d,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[62/85] 'mdl::tex::texel_color$1.6(texture_2d,int2,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[63/85] 'mdl::tex::texel_color(texture_2d,int2,int2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[64/85] 'mdl::tex::texel_float$1.6(texture_3d,int3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[65/85] 'mdl::tex::texel_float(texture_3d,int3,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[66/85] 'mdl::tex::texel_float2$1.6(texture_3d,int3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[67/85] 'mdl::tex::texel_float2(texture_3d,int3,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[68/85] 'mdl::tex::texel_float3$1.6(texture_3d,int3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[69/85] 'mdl::tex::texel_float3(texture_3d,int3,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[70/85] 'mdl::tex::texel_float4$1.6(texture_3d,int3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[71/85] 'mdl::tex::texel_float4(texture_3d,int3,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[72/85] 'mdl::tex::texel_color$1.6(texture_3d,int3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[73/85] 'mdl::tex::texel_color(texture_3d,int3,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[74/85] 'mdl::tex::texture_isvalid(texture_2d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[75/85] 'mdl::tex::texture_isvalid(texture_3d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[76/85] 'mdl::tex::texture_isvalid(texture_cube)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[77/85] 'mdl::tex::texture_isvalid(texture_ptex)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[78/85] 'mdl::tex::width_offset(texture_3d,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[79/85] 'mdl::tex::height_offset(texture_3d,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[80/85] 'mdl::tex::depth_offset(texture_3d,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[81/85] 'mdl::tex::first_frame(texture_2d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[82/85] 'mdl::tex::last_frame(texture_2d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[83/85] 'mdl::tex::first_frame(texture_3d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[84/85] 'mdl::tex::last_frame(texture_3d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[85/85] 'mdl::tex::grid_to_object_space(texture_3d,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
	Types:
		[1/2] 'mdl::tex::gamma_mode'
			'mdl::tex::gamma_mode' (SDTypeEnum)
				int gamma_default = SDValueInt(int(0))
				int gamma_linear = SDValueInt(int(1))
				int gamma_srgb = SDValueInt(int(2))
		[2/2] 'mdl::tex::wrap_mode'
			'mdl::tex::wrap_mode' (SDTypeEnum)
				int wrap_clamp = SDValueInt(int(0))
				int wrap_repeat = SDValueInt(int(1))
				int wrap_mirrored_repeat = SDValueInt(int(2))
				int wrap_clip = SDValueInt(int(3))
[15/37] 'mdl::alg::materials::designer' (SDMDLModule)
	Definitions:
		[1/1] 'mdl::alg::materials::designer::adobe_standard_material'
			Label: 'Adobe Standard Material Definition'
			Description: 'Material definition for Adobe interchange.'
			SDPropertyCategory = 'Input'
				'base_color' = SDValueColorRGB(ColorRGB(0.5,0.5,0.5)) [CONNECTABLE]
					Label: 'Base color'
					Description: 'The color of the surface.'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'roughness' = SDValueFloat(float(0.300000012)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'How smooth or matte the surface is.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'metallic' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Metallic'
					Description: 'The degree of metallic luster the surface has.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'opacity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Opacity'
					Description: 'The visibility of the surface.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'ambient_occlusion' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Ambient occlusion'
					Description: 'Shadows from cavities and creases preventing light from hitting the surface.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'specular_level' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Specular level'
					Description: 'The strength of light reflections on the surface.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'specular_edge_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Specular edge color'
					Description: 'The color of light reflections. Affects glancing angles for metallic materials.'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___186) [CONNECTABLE]
					Label: 'Normal'
					Description: 'Simulate surface details like bumps and cracks.'
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'normal_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Normal scale'
					Description: 'The strength of the normal effect.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'combine_normal_and_height' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Combine normal and height'
					Description: 'Applies the normal texture on top of the height texture.'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'height' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Height'
					Description: 'Creates surface details using bump or geometry displacement.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'height_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Height scale'
					Description: 'The scale of height in scene units. Applies to both bump and displacement.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'height_level' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Height level'
					Description: 'The value of the height texture representing zero displacement.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'anisotropy' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy level'
					Description: 'The amount that reflections stretch in one direction along the surface.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropy_rotation' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy angle'
					Description: 'The counterclockwise rotation of the anisotropic effect.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'emission' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Emission intensity'
					Description: 'The intensity of light emitted from the surface.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'emission_color' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Emission color'
					Description: 'The color of emitted light.'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'sheen' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Sheen opacity'
					Description: 'Simulates the effect microscopic fibers or fuzz on the surface.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'sheen_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Sheen color'
					Description: 'The color of the sheen effect.'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'sheen_roughness' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Sheen roughness'
					Description: 'Softness of the sheen effect.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'translucency' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Translucency'
					Description: 'The amount of light able to transmit through the surface.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'thin_walled' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Thin-walled'
					Description: 'Treats all surfaces as a thin shell. Disables refraction, absorption, and scattering.'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'absorption_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Absorption color'
					Description: 'The color light will converge to as it is absorbed.'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'absorption_distance' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Absorption distance'
					Description: 'Approximate distance in scene units that light will travel before reaching absorption color. If set to zero, thickness will not affect absorption color.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'specular_ior' = SDValueFloat(float(1.5)) [CONNECTABLE]
					Label: 'Index of refraction'
					Description: 'The amount light bends as it passes through the object.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'dispersion' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Dispersion'
					Description: 'The amount the color spectrum spreads out when refracted.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scatter' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Subsurface scattering'
					Description: 'Scatters light below the surface, rather than passing straight through.'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'scatter_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Scattering color'
					Description: 'The color below the surface that scattered light will become.'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'scatter_distance' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Scattering distance'
					Description: 'Approximate distance light must travel before reaching full scattering.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scatter_distance_scale' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Scattering distance scale'
					Description: 'A multiplier of the scatter distance. May be different for each color channel.'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'scatter_red_shift' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Red shift'
					Description: 'Sets red light to travel further than other light colors. Useful for skin.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scatter_rayleigh' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Rayleigh scattering'
					Description: 'Sets orange light to travel further beneath the surface and blue light to travel less.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'volume_thickness' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Volume thickness'
					Description: '	The thickness of the surface relative to the bounding box of the object. Used for interior effects when the real thickness is not known.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'volume_thickness_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Volume thickness scale'
					Description: 'Multiplier of the volume thickness.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'coat' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Coat opacity'
					Description: 'Simulates a layer on top of the material. Used to create clear coats, lacquers, and varnishes.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'coat_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Coat color'
					Description: 'The color of the coat.'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'coat_roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Coat roughness'
					Description: 'How smooth or matte the coat surface is.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'coat_ior' = SDValueFloat(float(1.60000002)) [CONNECTABLE]
					Label: 'Coat index of refraction'
					Description: 'The amount light bends as it passes through the coating.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'coat_specular_level' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Coat specular level'
					Description: 'The strength of light reflections on the coat at glancing angles.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'coat_normal' = SDMDLValueCall(mdl::state::normal()__default_call___193) [CONNECTABLE]
					Label: 'Coat normal'
					Description: 'Simulate surface details like bumps and cracks on the coat surface.'
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'coat_normal_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Coat normal scale'
					Description: 'The strength of the coat normal effect.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
[16/37] 'mdl::adobe::mtl' (SDMDLModule)
	Definitions:
		[1/1] 'mdl::adobe::mtl::standard'
			Label: 'Adobe Standard Material'
			Description: 'Adobe Standard Material with consolidated base color.'
			SDPropertyCategory = 'Input'
				'baseColor' = SDValueColorRGB(ColorRGB(0.630756974,0.630756974,0.630756974)) [CONNECTABLE]
					Label: 'Base Color'
					Description: 'The color of the surface.'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'opacity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Opacity'
					Description: 'The visibility of the surface.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'roughness' = SDValueFloat(float(0.400000006)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'How shiny the surface is.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'metallic' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Metallic'
					Description: 'The degree of metallic luster the surface has.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'glow' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Glow'
					Description: 'The intensity of light emitted from the surface.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'height' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Height'
					Description: 'Use an image to offset the surface shape.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'heightScale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Height Scale'
					Description: 'Adjust the strength of the offset created by the height image.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___183) [CONNECTABLE]
					Label: 'Normal'
					Description: 'Adds details to the surface without displacement.'
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'translucence' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Translucence'
					Description: 'The amount of light able to refract through the object.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'indexOfRefraction' = SDValueFloat(float(1.60000002)) [CONNECTABLE]
					Label: 'Index of Refraction'
					Description: 'The amount light bends as it passes through the object.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'density' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Density'
					Description: 'Adjusts the clarity of the interior volume to be clear or foggy.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'interiorColor' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Interior Color'
					Description: 'Adjusts the color of interior volume fog.'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'ambientOcclusion' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Ambient Occlusion'
					Description: 'Ambient occlusion coefficient for the surface.'
					Types:
						'float' (SDTypeFloat) [Varying]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
[17/37] 'mdl::alg::base::annotations' (SDMDLModule)
[18/37] 'mdl::adobe::volume' (SDMDLModule)
	Definitions:
		[1/5] 'mdl::adobe::volume::volume_return(::adobe::volume::volume_return)'
			SDPropertyCategory = 'Input'
				'other' [CONNECTABLE]
					Types:
						'mdl::adobe::volume::volume_return' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::adobe::volume::volume_return' (SDTypeStruct)
				
		[2/5] 'mdl::adobe::volume::volume_return(color,color)'
			SDPropertyCategory = 'Input'
				'absorption_coefficient' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'scattering_coefficient' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::adobe::volume::volume_return' (SDTypeStruct)
				
		[3/5] 'mdl::adobe::volume::volume_return.absorption_coefficient(::adobe::volume::volume_return)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::adobe::volume::volume_return' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[4/5] 'mdl::adobe::volume::volume_return.scattering_coefficient(::adobe::volume::volume_return)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::adobe::volume::volume_return' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[5/5] 'mdl::adobe::volume::volume_conversion(color,float,bool,color,color,float,float)'
			Description: 'Calculate volume properties from parameters'
			SDPropertyCategory = 'Input'
				'absorption_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Absorption Color'
					Description: 'Color of light after absorption in volume. (Value-normalized, white = no absorption)'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'absorption_distance' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Absorption Distance'
					Description: 'Approximate distance to full absorption in volume, in scene units.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scattering' = SDValueBool(bool(true)) [CONNECTABLE]
					Label: 'Scattering'
					Description: 'Enables scattering of light within a volume.'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'scatter_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Scatter Color'
					Description: 'Color of scattered media in volume.'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'scatter_distance' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Scatter Distance'
					Description: 'Approximate distance to full scattering in volume per wavelength, in scene units.'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'scatter_red_shift' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Red Shift'
					Description: 'Degree to which red light travels farther through a volume than other colors. Useful for skin.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scatter_rayleigh' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Rayleigh Scattering'
					Description: 'Degree to which the blue end of the light spectrum scatters more than orange and red light.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::adobe::volume::volume_return' (SDTypeStruct) [Varying]
				
	Types:
		[1/1] 'mdl::adobe::volume::volume_return'
			'mdl::adobe::volume::volume_return' (SDTypeStruct)
				ColorRGB absorption_coefficient
				ColorRGB scattering_coefficient
[19/37] 'mdl::limits' (SDMDLModule)
[20/37] 'mdl::adobe::convert' (SDMDLModule)
	Definitions:
		[1/6] 'mdl::adobe::convert::linear_to_srgb(float)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[2/6] 'mdl::adobe::convert::linear_to_srgb(float,float,float)'
			SDPropertyCategory = 'Input'
				'r' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'g' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[3/6] 'mdl::adobe::convert::srgb_to_linear(float)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[4/6] 'mdl::adobe::convert::srgb_to_linear(float,float,float)'
			SDPropertyCategory = 'Input'
				'r' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'g' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[5/6] 'mdl::adobe::convert::adjust_ior_with_specular_level(float,float,float)'
			Description: 'Scales reflectance linearly between IOR 1.0 and max_ior according to specular_level (works above and below 1.0 max)'
			SDPropertyCategory = 'Input'
				'max_ior' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'specular_level' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Varying]
				'level_offset' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat) [Varying]
				
		[6/6] 'mdl::adobe::convert::scale_normal(float3,float)'
			Description: 'Scales normal while preserving detail'
			SDPropertyCategory = 'Input'
				'base_normal' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'scale' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
[21/37] 'mdl::adobe::materials' (SDMDLModule)
	Definitions:
		[1/1] 'mdl::adobe::materials::standard'
			Label: 'Adobe Standard Material Definition'
			Description: 'Material definition for Adobe interchange.'
			SDPropertyCategory = 'Input'
				'base_color' = SDValueColorRGB(ColorRGB(0.5,0.5,0.5)) [CONNECTABLE]
					Label: 'Base color'
					Description: 'The color of the surface.'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'roughness' = SDValueFloat(float(0.300000012)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'How smooth or matte the surface is.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'metallic' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Metallic'
					Description: 'The degree of metallic luster the surface has.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'opacity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Opacity'
					Description: 'The visibility of the surface.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'ambient_occlusion' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Ambient occlusion'
					Description: 'Shadows from cavities and creases preventing light from hitting the surface.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'specular_level' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Specular level'
					Description: 'The strength of light reflections on the surface.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'specular_edge_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Specular edge color'
					Description: 'The color of light reflections. Affects glancing angles for metallic materials.'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___174) [CONNECTABLE]
					Label: 'Normal'
					Description: 'Simulate surface details like bumps and cracks.'
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'normal_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Normal scale'
					Description: 'The strength of the normal effect.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'combine_normal_and_height' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Combine normal and height'
					Description: 'Applies the normal texture on top of the height texture.'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'height' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Height'
					Description: 'Creates surface details using bump or geometry displacement.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'height_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Height scale'
					Description: 'The scale of height in scene units. Applies to both bump and displacement.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'height_level' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Height level'
					Description: 'The value of the height texture representing zero displacement.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'anisotropy' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy level'
					Description: 'The amount that reflections stretch in one direction along the surface.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropy_rotation' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy angle'
					Description: 'The counterclockwise rotation of the anisotropic effect.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'emission' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Emission intensity'
					Description: 'The intensity of light emitted from the surface.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'emission_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Emission color'
					Description: 'The color of emitted light.'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'sheen' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Sheen opacity'
					Description: 'Simulates the effect microscopic fibers or fuzz on the surface.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'sheen_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Sheen color'
					Description: 'The color of the sheen effect.'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'sheen_roughness' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Sheen roughness'
					Description: 'Softness of the sheen effect.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'translucency' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Translucency'
					Description: 'The amount of light able to transmit through the surface.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'thin_walled' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Thin-walled'
					Description: 'Treats all surfaces as a thin shell. Disables refraction, absorption, and scattering.'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'absorption_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Absorption color'
					Description: 'The color light will converge to as it is absorbed.'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'absorption_distance' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Absorption distance'
					Description: 'Approximate distance in scene units that light will travel before reaching absorption color. If set to zero, thickness will not affect absorption color.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'specular_ior' = SDValueFloat(float(1.5)) [CONNECTABLE]
					Label: 'Index of refraction'
					Description: 'The amount light bends as it passes through the object.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'dispersion' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Dispersion'
					Description: 'The amount the color spectrum spreads out when refracted.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scatter' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Subsurface scattering'
					Description: 'Scatters light below the surface, rather than passing straight through.'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'scatter_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Scattering color'
					Description: 'The color below the surface that scattered light will become.'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'scatter_distance' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Scattering distance'
					Description: 'Approximate distance light must travel before reaching full scattering.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scatter_distance_scale' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Scattering distance scale'
					Description: 'A multiplier of the scatter distance. May be different for each color channel.'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'scatter_red_shift' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Red shift'
					Description: 'Sets red light to travel further than other light colors. Useful for skin.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scatter_rayleigh' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Rayleigh scattering'
					Description: 'Sets orange light to travel further beneath the surface and blue light to travel less.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scatter_anisotropy' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scattering anisotropy'
					Description: 'Directional bias of the scattering media.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'volume_thickness' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Volume thickness'
					Description: '	The thickness of the surface relative to the bounding box of the object. Used for interior effects when the real thickness is not known.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'volume_thickness_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Volume thickness scale'
					Description: 'Multiplier of the volume thickness.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'coat' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Coat opacity'
					Description: 'Simulates a layer on top of the material. Used to create clear coats, lacquers, and varnishes.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'coat_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Coat color'
					Description: 'The color of the coat.'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'coat_roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Coat roughness'
					Description: 'How smooth or matte the coat surface is.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'coat_ior' = SDValueFloat(float(1.60000002)) [CONNECTABLE]
					Label: 'Coat index of refraction'
					Description: 'The amount light bends as it passes through the coating.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'coat_specular_level' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Coat specular level'
					Description: 'The strength of light reflections on the coat at glancing angles.'
					Types:
						'float' (SDTypeFloat) [Varying]
				'coat_normal' = SDMDLValueCall(mdl::state::normal()__default_call___182) [CONNECTABLE]
					Label: 'Coat normal'
					Description: 'Simulate surface details like bumps and cracks on the coat surface.'
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'coat_normal_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Coat normal scale'
					Description: 'The strength of the coat normal effect.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'thin_film_thickness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Thin-film thickness'
					Description: 'The simulated thickness of the thin film, as interpolated between thin_film_thickness_min and thin_film_thickness_max. (0 = no thin film)'
					Types:
						'float' (SDTypeFloat) [Varying]
				'thin_film_thickness_min' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Thin-film thickness min'
					Description: 'The simulated thickness of the thin film in nanometers when thin_film_thickness = 0.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'thin_film_thickness_max' = SDValueFloat(float(1200)) [CONNECTABLE]
					Label: 'Thin-film thickness max'
					Description: 'The simulated thickness of the thin film in nanometers when thin_film_thickness = 1.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'thin_film_ior' = SDValueFloat(float(1.29999995)) [CONNECTABLE]
					Label: 'Thin-film index of refraction'
					Description: 'Index of refraction of the thin film.'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
[22/37] 'mdl::debug' (SDMDLModule)
	Definitions:
		[1/20] 'mdl::debug::breakpoint()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[2/20] 'mdl::debug::assert(bool,string,string,string,int)'
			SDPropertyCategory = 'Input'
				'condition' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'reason' [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				'funcname' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				'filename' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				'line' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[3/20] 'mdl::debug::print(bool)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[4/20] 'mdl::debug::print(bool2)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[5/20] 'mdl::debug::print(bool3)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[6/20] 'mdl::debug::print(bool4)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[7/20] 'mdl::debug::print(int)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[8/20] 'mdl::debug::print(int2)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[9/20] 'mdl::debug::print(int3)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[10/20] 'mdl::debug::print(int4)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[11/20] 'mdl::debug::print(float)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[12/20] 'mdl::debug::print(float2)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[13/20] 'mdl::debug::print(float3)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[14/20] 'mdl::debug::print(float4)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[15/20] 'mdl::debug::print(double)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[16/20] 'mdl::debug::print(double2)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[17/20] 'mdl::debug::print(double3)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[18/20] 'mdl::debug::print(double4)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[19/20] 'mdl::debug::print(color)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[20/20] 'mdl::debug::print(string)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
[23/37] 'mdl::adobe::anisotropy' (SDMDLModule)
	Definitions:
		[1/1] 'mdl::adobe::anisotropy::anisotropy_conversion(float,float,float,float3)'
			Description: 'Convert scalar anisotropy controls into vectorized ones'
			SDPropertyCategory = 'Input'
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Roughness of the surface reflections.'
					Types:
						'float' (SDTypeFloat)
				'anisotropy' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Specular Anisotropy Level'
					Description: 'Anisotropy of surface specular layer reflections. (0 = isotropic)'
					Types:
						'float' (SDTypeFloat)
				'anisotropy_rotation' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Specular Anisotropy Angle'
					Description: 'Rotation of anisotropy of surface specular layer, normalized from [0,360°] counterclockwise to [0,1].'
					Types:
						'float' (SDTypeFloat)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___160) [CONNECTABLE]
					Description: 'Tangent to align the anisotropy with. "coordinate_source" or "coordinate_projection" are possible sources'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::anisotropy_return' (SDTypeStruct) [Varying]
				
[24/37] 'mdl::scene' (SDMDLModule)
	Definitions:
		[1/19] 'mdl::scene::data_isvalid(string)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[2/19] 'mdl::scene::data_lookup_int(string,int)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt) [Varying]
				
		[3/19] 'mdl::scene::data_lookup_uniform_int(string,int)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt) [Uniform]
				
		[4/19] 'mdl::scene::data_lookup_int2(string,int2)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2) [Varying]
				
		[5/19] 'mdl::scene::data_lookup_uniform_int2(string,int2)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2) [Uniform]
				
		[6/19] 'mdl::scene::data_lookup_int3(string,int3)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueInt3(int3(0,0,0)) [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3) [Varying]
				
		[7/19] 'mdl::scene::data_lookup_uniform_int3(string,int3)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueInt3(int3(0,0,0)) [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3) [Uniform]
				
		[8/19] 'mdl::scene::data_lookup_int4(string,int4)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueInt4(int4(0,0,0,0)) [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4) [Varying]
				
		[9/19] 'mdl::scene::data_lookup_uniform_int4(string,int4)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueInt4(int4(0,0,0,0)) [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4) [Uniform]
				
		[10/19] 'mdl::scene::data_lookup_float(string,float)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat) [Varying]
				
		[11/19] 'mdl::scene::data_lookup_uniform_float(string,float)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat) [Uniform]
				
		[12/19] 'mdl::scene::data_lookup_float2(string,float2)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueFloat2(float2(0,0)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2) [Varying]
				
		[13/19] 'mdl::scene::data_lookup_uniform_float2(string,float2)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueFloat2(float2(0,0)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
		[14/19] 'mdl::scene::data_lookup_float3(string,float3)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[15/19] 'mdl::scene::data_lookup_uniform_float3(string,float3)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				
		[16/19] 'mdl::scene::data_lookup_float4(string,float4)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueFloat4(float4(0,0,0,0)) [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4) [Varying]
				
		[17/19] 'mdl::scene::data_lookup_uniform_float4(string,float4)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueFloat4(float4(0,0,0,0)) [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4) [Uniform]
				
		[18/19] 'mdl::scene::data_lookup_color(string,color)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				
		[19/19] 'mdl::scene::data_lookup_uniform_color(string,color)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				
[25/37] 'mdl::adobe::annotations' (SDMDLModule)
	Definitions:
		[1/2] 'mdl::adobe::annotations::height_implementation(::adobe::annotations::height_implementation)'
			Label: 'Preferred Height Implementation'
			Description: 'Describes which implementation should be preferred when consuming height information'
			SDPropertyCategory = 'Input'
				'v' = SDValueEnum("mdl::adobe::annotations::height_implementation",0) [CONNECTABLE]
					Types:
						'mdl::adobe::annotations::height_implementation' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::adobe::annotations::height_implementation' (SDTypeEnum)
				
		[2/2] 'mdl::adobe::annotations::int(::adobe::annotations::height_implementation)'
			Label: 'Preferred Height Implementation'
			Description: 'Describes which implementation should be preferred when consuming height information'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::adobe::annotations::height_implementation' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
	Types:
		[1/1] 'mdl::adobe::annotations::height_implementation'
			'mdl::adobe::annotations::height_implementation' (SDTypeEnum)
				int height_auto = SDValueInt(int(0))
				int height_bump = SDValueInt(int(1))
				int height_displacement = SDValueInt(int(2))
[26/37] 'mdl::df' (SDMDLModule)
	Definitions:
		[1/97] 'mdl::df::scatter_mode(::df::scatter_mode)'
			SDPropertyCategory = 'Input'
				'v' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum)
				
		[2/97] 'mdl::df::int(::df::scatter_mode)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[3/97] 'mdl::df::diffuse_reflection_bsdf(color,float,string)'
			SDPropertyCategory = 'Input'
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[4/97] 'mdl::df::diffuse_transmission_bsdf(color,string)'
			SDPropertyCategory = 'Input'
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[5/97] 'mdl::df::specular_bsdf(color,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[6/97] 'mdl::df::simple_glossy_bsdf$1.5(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___0) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[7/97] 'mdl::df::simple_glossy_bsdf(float,float,color,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'multiscatter_tint' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___1) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[8/97] 'mdl::df::backscattering_glossy_reflection_bsdf$1.5(float,float,color,float3,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___2) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[9/97] 'mdl::df::backscattering_glossy_reflection_bsdf(float,float,color,color,float3,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'multiscatter_tint' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___3) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[10/97] 'mdl::df::measured_bsdf(bsdf_measurement,float,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'measurement' [CONNECTABLE]
					Types:
						'mdl::bsdf_measurement' (SDMDLTypeBSDFMeasurementReference) [Uniform]
				'multiplier' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[11/97] 'mdl::df::microfacet_beckmann_smith_bsdf$1.5(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___4) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[12/97] 'mdl::df::microfacet_beckmann_smith_bsdf(float,float,color,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'multiscatter_tint' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___5) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[13/97] 'mdl::df::microfacet_ggx_smith_bsdf$1.5(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___6) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[14/97] 'mdl::df::microfacet_ggx_smith_bsdf(float,float,color,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'multiscatter_tint' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___7) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[15/97] 'mdl::df::microfacet_beckmann_vcavities_bsdf$1.5(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___8) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[16/97] 'mdl::df::microfacet_beckmann_vcavities_bsdf(float,float,color,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'multiscatter_tint' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___9) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[17/97] 'mdl::df::microfacet_ggx_vcavities_bsdf$1.5(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___10) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[18/97] 'mdl::df::microfacet_ggx_vcavities_bsdf(float,float,color,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'multiscatter_tint' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___11) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[19/97] 'mdl::df::ward_geisler_moroder_bsdf$1.5(float,float,color,float3,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___12) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[20/97] 'mdl::df::ward_geisler_moroder_bsdf(float,float,color,color,float3,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'multiscatter_tint' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___13) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[21/97] 'mdl::df::sheen_bsdf$1.6(float,color,color,string)'
			SDPropertyCategory = 'Input'
				'roughness' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'multiscatter_tint' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[22/97] 'mdl::df::sheen_bsdf(float,color,color,bsdf,string)'
			SDPropertyCategory = 'Input'
				'roughness' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'multiscatter_tint' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'multiscatter' = SDMDLValueCall(mdl::df::diffuse_reflection_bsdf(color,float,string)__default_call___14) [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[23/97] 'mdl::df::diffuse_edf(string)'
			SDPropertyCategory = 'Input'
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[24/97] 'mdl::df::spot_edf$1.0(float,bool,float3x3,string)'
			SDPropertyCategory = 'Input'
				'exponent' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'global_distribution' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'global_frame' = SDValueMatrix(matrix<float>[3][3](float(1),float(0),float(0),float(0),float(1),float(0),float(0),float(0),float(1))) [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[25/97] 'mdl::df::spot_edf(float,float,bool,float3x3,string)'
			SDPropertyCategory = 'Input'
				'exponent' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'spread' = SDValueFloat(float(3.14159274)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'global_distribution' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'global_frame' = SDValueMatrix(matrix<float>[3][3](float(1),float(0),float(0),float(0),float(1),float(0),float(0),float(0),float(1))) [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[26/97] 'mdl::df::measured_edf$1.0(light_profile,bool,float3x3,string)'
			SDPropertyCategory = 'Input'
				'profile' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference) [Uniform]
				'global_distribution' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'global_frame' = SDValueMatrix(matrix<float>[3][3](float(1),float(0),float(0),float(0),float(1),float(0),float(0),float(0),float(1))) [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[27/97] 'mdl::df::measured_edf$1.1(light_profile,float,bool,float3x3,string)'
			SDPropertyCategory = 'Input'
				'profile' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference) [Uniform]
				'multiplier' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'global_distribution' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'global_frame' = SDValueMatrix(matrix<float>[3][3](float(1),float(0),float(0),float(0),float(1),float(0),float(0),float(0),float(1))) [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[28/97] 'mdl::df::measured_edf(light_profile,float,bool,float3x3,float3,string)'
			SDPropertyCategory = 'Input'
				'profile' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference) [Uniform]
				'multiplier' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'global_distribution' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'global_frame' = SDValueMatrix(matrix<float>[3][3](float(1),float(0),float(0),float(0),float(1),float(0),float(0),float(0),float(1))) [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix) [Uniform]
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___15) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[29/97] 'mdl::df::anisotropic_vdf(float,string)'
			SDPropertyCategory = 'Input'
				'directional_bias' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[30/97] 'mdl::df::tint(color,bsdf)'
			SDPropertyCategory = 'Input'
				'tint' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'base' [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[31/97] 'mdl::df::tint(color,color,bsdf)'
			SDPropertyCategory = 'Input'
				'reflection_tint' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'transmission_tint' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'base' [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[32/97] 'mdl::df::tint$1.6(color,edf)'
			SDPropertyCategory = 'Input'
				'tint' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'base' [CONNECTABLE]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[33/97] 'mdl::df::tint(color,edf)'
			SDPropertyCategory = 'Input'
				'tint' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'base' [CONNECTABLE]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[34/97] 'mdl::df::tint(color,vdf)'
			SDPropertyCategory = 'Input'
				'tint' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'base' [CONNECTABLE]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[35/97] 'mdl::df::tint(color,hair_bsdf)'
			SDPropertyCategory = 'Input'
				'tint' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'base' [CONNECTABLE]
					Types:
						'mdl::hair_bsdf' (SDMDLTypeHairBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::hair_bsdf' (SDMDLTypeHairBSDF)
				
		[36/97] 'mdl::df::thin_film(float,color,bsdf)'
			SDPropertyCategory = 'Input'
				'thickness' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'ior' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'base' [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[37/97] 'mdl::df::directional_factor(color,color,float,bsdf)'
			SDPropertyCategory = 'Input'
				'normal_tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'grazing_tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'exponent' = SDValueFloat(float(5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[38/97] 'mdl::df::directional_factor(color,color,float,edf)'
			SDPropertyCategory = 'Input'
				'normal_tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'grazing_tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'exponent' = SDValueFloat(float(5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'base' = SDMDLValueEDF() [CONNECTABLE]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[39/97] 'mdl::df::bsdf_component(::df::bsdf_component)'
			SDPropertyCategory = 'Input'
				'other' [CONNECTABLE]
					Types:
						'mdl::df::bsdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::bsdf_component' (SDTypeStruct)
				
		[40/97] 'mdl::df::bsdf_component(float,bsdf)'
			SDPropertyCategory = 'Input'
				'weight' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'component' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::bsdf_component' (SDTypeStruct)
				
		[41/97] 'mdl::df::bsdf_component.weight(::df::bsdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::bsdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[42/97] 'mdl::df::bsdf_component.component(::df::bsdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::bsdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[43/97] 'mdl::df::edf_component(::df::edf_component)'
			SDPropertyCategory = 'Input'
				'other' [CONNECTABLE]
					Types:
						'mdl::df::edf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::edf_component' (SDTypeStruct)
				
		[44/97] 'mdl::df::edf_component(float,edf)'
			SDPropertyCategory = 'Input'
				'weight' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'component' = SDMDLValueEDF() [CONNECTABLE]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::edf_component' (SDTypeStruct)
				
		[45/97] 'mdl::df::edf_component.weight(::df::edf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::edf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[46/97] 'mdl::df::edf_component.component(::df::edf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::edf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[47/97] 'mdl::df::vdf_component(::df::vdf_component)'
			SDPropertyCategory = 'Input'
				'other' [CONNECTABLE]
					Types:
						'mdl::df::vdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::vdf_component' (SDTypeStruct)
				
		[48/97] 'mdl::df::vdf_component(float,vdf)'
			SDPropertyCategory = 'Input'
				'weight' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'component' = SDMDLValueVDF() [CONNECTABLE]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::vdf_component' (SDTypeStruct)
				
		[49/97] 'mdl::df::vdf_component.weight(::df::vdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::vdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[50/97] 'mdl::df::vdf_component.component(::df::vdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::vdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[51/97] 'mdl::df::normalized_mix(::df::bsdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::bsdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[52/97] 'mdl::df::normalized_mix(::df::edf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::edf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[53/97] 'mdl::df::normalized_mix(::df::vdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::vdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[54/97] 'mdl::df::clamped_mix(::df::bsdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::bsdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[55/97] 'mdl::df::clamped_mix(::df::edf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::edf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[56/97] 'mdl::df::clamped_mix(::df::vdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::vdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[57/97] 'mdl::df::weighted_layer(float,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'weight' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'layer' [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___16) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[58/97] 'mdl::df::fresnel_layer$1.3(color,float,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'ior' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'weight' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___17) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[59/97] 'mdl::df::custom_curve_layer(float,float,float,float,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'normal_reflectivity' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'grazing_reflectivity' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'exponent' = SDValueFloat(float(5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'weight' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___18) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[60/97] 'mdl::df::measured_curve_layer(color[N],float,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'curve_values' [CONNECTABLE]
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				'weight' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___19) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[61/97] 'mdl::df::measured_curve_factor(color[N],bsdf)'
			SDPropertyCategory = 'Input'
				'curve_values' [CONNECTABLE]
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[62/97] 'mdl::df::light_profile_power(light_profile)'
			SDPropertyCategory = 'Input'
				'profile' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[63/97] 'mdl::df::light_profile_maximum(light_profile)'
			SDPropertyCategory = 'Input'
				'profile' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[64/97] 'mdl::df::light_profile_isvalid(light_profile)'
			SDPropertyCategory = 'Input'
				'profile' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[65/97] 'mdl::df::bsdf_measurement_isvalid(bsdf_measurement)'
			SDPropertyCategory = 'Input'
				'measurement' [CONNECTABLE]
					Types:
						'mdl::bsdf_measurement' (SDMDLTypeBSDFMeasurementReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[66/97] 'mdl::df::color_bsdf_component(::df::color_bsdf_component)'
			SDPropertyCategory = 'Input'
				'other' [CONNECTABLE]
					Types:
						'mdl::df::color_bsdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::color_bsdf_component' (SDTypeStruct)
				
		[67/97] 'mdl::df::color_bsdf_component(color,bsdf)'
			SDPropertyCategory = 'Input'
				'weight' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'component' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::color_bsdf_component' (SDTypeStruct)
				
		[68/97] 'mdl::df::color_bsdf_component.weight(::df::color_bsdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::color_bsdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[69/97] 'mdl::df::color_bsdf_component.component(::df::color_bsdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::color_bsdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[70/97] 'mdl::df::color_edf_component(::df::color_edf_component)'
			SDPropertyCategory = 'Input'
				'other' [CONNECTABLE]
					Types:
						'mdl::df::color_edf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::color_edf_component' (SDTypeStruct)
				
		[71/97] 'mdl::df::color_edf_component(color,edf)'
			SDPropertyCategory = 'Input'
				'weight' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'component' = SDMDLValueEDF() [CONNECTABLE]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::color_edf_component' (SDTypeStruct)
				
		[72/97] 'mdl::df::color_edf_component.weight(::df::color_edf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::color_edf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[73/97] 'mdl::df::color_edf_component.component(::df::color_edf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::color_edf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[74/97] 'mdl::df::color_vdf_component(::df::color_vdf_component)'
			SDPropertyCategory = 'Input'
				'other' [CONNECTABLE]
					Types:
						'mdl::df::color_vdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::color_vdf_component' (SDTypeStruct)
				
		[75/97] 'mdl::df::color_vdf_component(color,vdf)'
			SDPropertyCategory = 'Input'
				'weight' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'component' = SDMDLValueVDF() [CONNECTABLE]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::color_vdf_component' (SDTypeStruct)
				
		[76/97] 'mdl::df::color_vdf_component.weight(::df::color_vdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::color_vdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				
		[77/97] 'mdl::df::color_vdf_component.component(::df::color_vdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::color_vdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[78/97] 'mdl::df::color_normalized_mix(::df::color_bsdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_bsdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[79/97] 'mdl::df::color_normalized_mix(::df::color_edf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_edf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[80/97] 'mdl::df::color_normalized_mix(::df::color_vdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_vdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[81/97] 'mdl::df::color_clamped_mix(::df::color_bsdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_bsdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[82/97] 'mdl::df::color_clamped_mix(::df::color_edf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_edf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[83/97] 'mdl::df::color_clamped_mix(::df::color_vdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_vdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[84/97] 'mdl::df::color_weighted_layer(color,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'weight' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'layer' [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___20) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[85/97] 'mdl::df::fresnel_layer(float,float,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'ior' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'weight' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___21) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[86/97] 'mdl::df::color_fresnel_layer(color,color,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'ior' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'weight' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___22) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[87/97] 'mdl::df::color_custom_curve_layer(color,color,float,color,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'normal_reflectivity' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'grazing_reflectivity' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'exponent' = SDValueFloat(float(5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'weight' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___23) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[88/97] 'mdl::df::color_measured_curve_layer(color[N],color,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'curve_values' [CONNECTABLE]
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				'weight' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___24) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[89/97] 'mdl::df::fresnel_factor(color,color,bsdf)'
			SDPropertyCategory = 'Input'
				'ior' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'extinction_coefficient' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[90/97] 'mdl::df::measured_factor(texture_2d,bsdf)'
			SDPropertyCategory = 'Input'
				'values' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[91/97] 'mdl::df::chiang_hair_bsdf(float,color,float2,float2,float2,float,color,float,string)'
			SDPropertyCategory = 'Input'
				'diffuse_reflection_weight' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'diffuse_reflection_tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness_R' = SDValueFloat2(float2(0,0)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'roughness_TT' = SDMDLValueParameterReference(2) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'roughness_TRT' = SDMDLValueParameterReference(3) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'cuticle_angle' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'absorption_coefficient' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'ior' = SDValueFloat(float(1.54999995)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::hair_bsdf' (SDMDLTypeHairBSDF)
				
		[92/97] 'mdl::df::unbounded_mix(::df::bsdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::bsdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[93/97] 'mdl::df::unbounded_mix(::df::edf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::edf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[94/97] 'mdl::df::unbounded_mix(::df::vdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::vdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[95/97] 'mdl::df::color_unbounded_mix(::df::color_bsdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_bsdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[96/97] 'mdl::df::color_unbounded_mix(::df::color_edf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_edf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[97/97] 'mdl::df::color_unbounded_mix(::df::color_vdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_vdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
	Types:
		[1/25] 'mdl::df::scatter_mode'
			'mdl::df::scatter_mode' (SDTypeEnum)
				int scatter_reflect = SDValueInt(int(0))
				int scatter_transmit = SDValueInt(int(1))
				int scatter_reflect_transmit = SDValueInt(int(2))
		[2/25] 'mdl::df::bsdf_component'
			'mdl::df::bsdf_component' (SDTypeStruct)
				float weight
				mdl::bsdf component
		[3/25] 'mdl::df::edf_component'
			'mdl::df::edf_component' (SDTypeStruct)
				float weight
				mdl::edf component
		[4/25] 'mdl::df::vdf_component'
			'mdl::df::vdf_component' (SDTypeStruct)
				float weight
				mdl::vdf component
		[5/25] 'SDTypeArray<mdl::df::bsdf_component>'
			'SDTypeArray<mdl::df::bsdf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::bsdf_component' (SDTypeStruct)
						float weight
						mdl::bsdf component
		[6/25] 'SDTypeArray<mdl::df::edf_component>'
			'SDTypeArray<mdl::df::edf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::edf_component' (SDTypeStruct)
						float weight
						mdl::edf component
		[7/25] 'SDTypeArray<mdl::df::vdf_component>'
			'SDTypeArray<mdl::df::vdf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::vdf_component' (SDTypeStruct)
						float weight
						mdl::vdf component
		[8/25] 'SDTypeArray<mdl::df::bsdf_component>'
			'SDTypeArray<mdl::df::bsdf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::bsdf_component' (SDTypeStruct)
						float weight
						mdl::bsdf component
		[9/25] 'SDTypeArray<mdl::df::edf_component>'
			'SDTypeArray<mdl::df::edf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::edf_component' (SDTypeStruct)
						float weight
						mdl::edf component
		[10/25] 'SDTypeArray<mdl::df::vdf_component>'
			'SDTypeArray<mdl::df::vdf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::vdf_component' (SDTypeStruct)
						float weight
						mdl::vdf component
		[11/25] 'mdl::df::color_bsdf_component'
			'mdl::df::color_bsdf_component' (SDTypeStruct)
				ColorRGB weight
				mdl::bsdf component
		[12/25] 'mdl::df::color_edf_component'
			'mdl::df::color_edf_component' (SDTypeStruct)
				ColorRGB weight
				mdl::edf component
		[13/25] 'mdl::df::color_vdf_component'
			'mdl::df::color_vdf_component' (SDTypeStruct)
				ColorRGB weight
				mdl::vdf component
		[14/25] 'SDTypeArray<mdl::df::color_bsdf_component>'
			'SDTypeArray<mdl::df::color_bsdf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::color_bsdf_component' (SDTypeStruct)
						ColorRGB weight
						mdl::bsdf component
		[15/25] 'SDTypeArray<mdl::df::color_edf_component>'
			'SDTypeArray<mdl::df::color_edf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::color_edf_component' (SDTypeStruct)
						ColorRGB weight
						mdl::edf component
		[16/25] 'SDTypeArray<mdl::df::color_vdf_component>'
			'SDTypeArray<mdl::df::color_vdf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::color_vdf_component' (SDTypeStruct)
						ColorRGB weight
						mdl::vdf component
		[17/25] 'SDTypeArray<mdl::df::color_bsdf_component>'
			'SDTypeArray<mdl::df::color_bsdf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::color_bsdf_component' (SDTypeStruct)
						ColorRGB weight
						mdl::bsdf component
		[18/25] 'SDTypeArray<mdl::df::color_edf_component>'
			'SDTypeArray<mdl::df::color_edf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::color_edf_component' (SDTypeStruct)
						ColorRGB weight
						mdl::edf component
		[19/25] 'SDTypeArray<mdl::df::color_vdf_component>'
			'SDTypeArray<mdl::df::color_vdf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::color_vdf_component' (SDTypeStruct)
						ColorRGB weight
						mdl::vdf component
		[20/25] 'SDTypeArray<mdl::df::bsdf_component>'
			'SDTypeArray<mdl::df::bsdf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::bsdf_component' (SDTypeStruct)
						float weight
						mdl::bsdf component
		[21/25] 'SDTypeArray<mdl::df::edf_component>'
			'SDTypeArray<mdl::df::edf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::edf_component' (SDTypeStruct)
						float weight
						mdl::edf component
		[22/25] 'SDTypeArray<mdl::df::vdf_component>'
			'SDTypeArray<mdl::df::vdf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::vdf_component' (SDTypeStruct)
						float weight
						mdl::vdf component
		[23/25] 'SDTypeArray<mdl::df::color_bsdf_component>'
			'SDTypeArray<mdl::df::color_bsdf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::color_bsdf_component' (SDTypeStruct)
						ColorRGB weight
						mdl::bsdf component
		[24/25] 'SDTypeArray<mdl::df::color_edf_component>'
			'SDTypeArray<mdl::df::color_edf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::color_edf_component' (SDTypeStruct)
						ColorRGB weight
						mdl::edf component
		[25/25] 'SDTypeArray<mdl::df::color_vdf_component>'
			'SDTypeArray<mdl::df::color_vdf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::color_vdf_component' (SDTypeStruct)
						ColorRGB weight
						mdl::vdf component
[27/37] 'mdl::alg::materials::asm::standard_scatter' (SDMDLModule)
	Definitions:
		[1/1] 'mdl::alg::materials::asm::standard_scatter::standard'
			Description: 'Material definition for Adobe interchange. Modified to match Substance Pt/Ds SSS.'
			SDPropertyCategory = 'Input'
				'base_color' = SDValueColorRGB(ColorRGB(0.5,0.5,0.5)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'roughness' = SDValueFloat(float(0.300000012)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Varying]
				'metallic' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Varying]
				'opacity' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Varying]
				'specular_level' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Varying]
				'specular_edge_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___184) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'normal_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'height' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Varying]
				'height_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'height_level' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'anisotropy' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropy_rotation' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Varying]
				'emission' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'emission_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'sheen' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Varying]
				'sheen_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'sheen_roughness' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Varying]
				'translucency' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Varying]
				'thin_walled' = SDValueBool(bool(false)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'absorption_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'absorption_distance' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'specular_ior' = SDValueFloat(float(1.5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'dispersion' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scatter' = SDValueBool(bool(false)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'sssRefractionRoughness' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scatter_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'scatter_distance' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scatter_distance_scale' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'sssColor' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'scatter_red_shift' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scatter_rayleigh' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scatter_anisotropy' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'coat' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Varying]
				'coat_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'coat_roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Varying]
				'coat_ior' = SDValueFloat(float(1.60000002)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'coat_specular_level' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Varying]
				'coat_normal' = SDMDLValueCall(mdl::state::normal()__default_call___185) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'coat_normal_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'thin_film_thickness' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Varying]
				'thin_film_thickness_min' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'thin_film_thickness_max' = SDValueFloat(float(1200)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'thin_film_ior' = SDValueFloat(float(1.29999995)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
[28/37] 'mdl::alg::materials::designer::legacy::physically_specular_glossiness' (SDMDLModule)
	Definitions:
		[1/1] 'mdl::alg::materials::designer::legacy::physically_specular_glossiness::physically_specular_glossiness'
			Label: 'Physically Specular Glossiness'
			SDPropertyCategory = 'Input'
				'baseColor' = SDValueColorRGB(ColorRGB(0.214040995,0.214040995,0.214040995)) [CONNECTABLE]
					Label: 'Diffuse'
					Description: 'Diffuse channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___199) [CONNECTABLE]
					Label: 'Normal'
					Description: 'Normal channel'
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'specular' = SDValueColorRGB(ColorRGB(0.214040995,0.214040995,0.214040995)) [CONNECTABLE]
					Label: 'Specular'
					Description: 'Specular channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'glossiness' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Glossiness'
					Description: 'Glossiness channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'height' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Height'
					Description: 'Height channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'heightScale' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scale'
					Description: 'provides significant physical detail to the surface by manipulating the vertices of the mesh'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'ambientOcclusion' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Ambient Occlusion'
					Description: 'Ambient Occlusion channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropyLevel' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy Level'
					Description: 'Anisotropy Level channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropyAngle' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy Angle'
					Description: 'Anisotropy Angle channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'emissiveColor' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Emissive'
					Description: 'Emissive channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'emissiveIntensity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Emissive Intensity'
					Description: 'Controls how much light is emitted from the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'opacity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Opacity'
					Description: 'Opacity channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'refraction' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Refraction'
					Description: 'Refraction'
					Types:
						'float' (SDTypeFloat) [Varying]
				'refractionColor' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Refraction Color'
					Description: 'Refraction channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'refractionIOR' = SDValueFloat(float(1.5)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Index of Refraction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scattering' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scattering'
					Description: 'controls how much light is scattered through the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'absorption' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Absorption'
					Description: 'controls how much light is absorbed through the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'absorptionColor' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Absorption Color'
					Description: 'simulates shifts in color when light passes through the surface'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'scalarZeroValue' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Scalar Zero Value'
					Description: 'Determine the neutral height value'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'tiling' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Tiling value to keep displacement tiling independent'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
[29/37] 'mdl::alg::base::core' (SDMDLModule)
	Definitions:
		[1/22] 'mdl::alg::base::core::volume_absorption(float,color)'
			Label: 'Absorption'
			Description: 'Provides an absorption coefficient for the volume'
			SDPropertyCategory = 'Input'
				'absorption' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Volume Absorption'
					Description: 'Controls how much light is absorbed through the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'absorptionColor' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Absorption Color'
					Description: 'Simulates shifts in color when light passes through the surface'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[2/22] 'mdl::alg::base::core::volume_scattering(float)'
			Label: 'Scattering'
			Description: 'Provides a scattering coefficient for the volume'
			SDPropertyCategory = 'Input'
				'scattering' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Volume Scattering'
					Description: 'Controls how much light is scattered through the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[3/22] 'mdl::alg::base::core::scattering_coeffs_from_rayleigh_redshift(float,float)'
			Description: 'Provides a scattering coefficient from rayleigh / red-shift coefficients'
			SDPropertyCategory = 'Input'
				'rayleigh' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'red_shift' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[4/22] 'mdl::alg::base::core::displacement(float,float,float,float)'
			Label: 'Displacement'
			Description: 'Provides significant physical detail to the surface by manipulating the vertices of the mesh'
			SDPropertyCategory = 'Input'
				'height' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Height'
					Description: 'Height channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'heightScale' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scale'
					Description: 'scales the range of displacement'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scalarZeroValue' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Scalar Zero Value'
					Description: 'Determine the neutral height value'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'tiling' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Tiling value to keep displacement tiling independent'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[5/22] 'mdl::alg::base::core::tangent_space_plugin_mode(::alg::base::core::tangent_space_plugin_mode)'
			Label: 'Tangent Space Plugin Mode'
			Description: 'Describes Tangent Space Plugin behavior to adopt when computing'
			SDPropertyCategory = 'Input'
				'v' = SDValueEnum("mdl::alg::base::core::tangent_space_plugin_mode",0) [CONNECTABLE]
					Types:
						'mdl::alg::base::core::tangent_space_plugin_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::alg::base::core::tangent_space_plugin_mode' (SDTypeEnum)
				
		[6/22] 'mdl::alg::base::core::int(::alg::base::core::tangent_space_plugin_mode)'
			Label: 'Tangent Space Plugin Mode'
			Description: 'Describes Tangent Space Plugin behavior to adopt when computing'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::alg::base::core::tangent_space_plugin_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[7/22] 'mdl::alg::base::core::tangent_space_plugin_normal_texture(texture_2d,float,bool,bool,::base::texture_coordinate_info,float2,float2,::tex::wrap_mode,::tex::wrap_mode,float,float,::alg::base::core::tangent_space_plugin_mode,bool)'
			Label: 'Tangent Space Plugin Normal Texture'
			Description: 'Reinterpretation of tangent_space_normal_texture to interpret correctly tangent/bitangent computed by popular tangent space computation plugin'
			SDPropertyCategory = 'Input'
				'texture' [CONNECTABLE]
					Description: 'The input texture'
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Determines the degree of bumpiness'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'flip_tangent_u' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Can be used to fix mismatches between the object's tangent space and the normal map's tangent space'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'flip_tangent_v' = SDValueBool(bool(true)) [CONNECTABLE]
					Description: 'Can be used to fix mismatches between the object's tangent space and the normal map's tangent space'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___166) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct) [Varying]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Description: 'Restricts the texture access to sub-domain of the texture in the u direction'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Description: 'Restricts the texture access to sub-domain of the texture in the v direction'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Description: 'Wrapping mode in the u direction'
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Description: 'Wrapping mode in the v direction'
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Scales the value red from the texture file. can be used to adapt to different normal map formats'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'offset' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Offset applied to the value red from the texture file. can be used to adapt to different normal map formats'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'mode' = SDValueEnum("mdl::alg::base::core::tangent_space_plugin_mode",0) [CONNECTABLE]
					Description: 'Tangent Space computation behavior'
					Types:
						'mdl::alg::base::core::tangent_space_plugin_mode' (SDTypeEnum) [Uniform]
				'force_compute_tangent_space' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Force re-computation of tangent space based on normal & tangent'
					Types:
						'bool' (SDTypeBool) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[8/22] 'mdl::alg::base::core::displacement_source_channel(::alg::base::core::displacement_source_channel)'
			Label: 'Displacement Source Channel'
			Description: 'Choose which channel will drives displacement'
			SDPropertyCategory = 'Input'
				'v' = SDValueEnum("mdl::alg::base::core::displacement_source_channel",0) [CONNECTABLE]
					Types:
						'mdl::alg::base::core::displacement_source_channel' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::alg::base::core::displacement_source_channel' (SDTypeEnum)
				
		[9/22] 'mdl::alg::base::core::int(::alg::base::core::displacement_source_channel)'
			Label: 'Displacement Source Channel'
			Description: 'Choose which channel will drives displacement'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::alg::base::core::displacement_source_channel' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[10/22] 'mdl::alg::base::core::subsurface_scattering_type(::alg::base::core::subsurface_scattering_type)'
			Label: 'Subsurface Scattering Type'
			Description: 'Skin, Translucent/Generic or Red Shift & Rayleigh controls. It needs to be activated in the Display Settings and a Scattering channel needs to be present for these parameters to have an effect.'
			SDPropertyCategory = 'Input'
				'v' = SDValueEnum("mdl::alg::base::core::subsurface_scattering_type",0) [CONNECTABLE]
					Types:
						'mdl::alg::base::core::subsurface_scattering_type' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::alg::base::core::subsurface_scattering_type' (SDTypeEnum)
				
		[11/22] 'mdl::alg::base::core::int(::alg::base::core::subsurface_scattering_type)'
			Label: 'Subsurface Scattering Type'
			Description: 'Skin, Translucent/Generic or Red Shift & Rayleigh controls. It needs to be activated in the Display Settings and a Scattering channel needs to be present for these parameters to have an effect.'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::alg::base::core::subsurface_scattering_type' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[12/22] 'mdl::alg::base::core::volume_return(::alg::base::core::volume_return)'
			SDPropertyCategory = 'Input'
				'other' [CONNECTABLE]
					Types:
						'mdl::alg::base::core::volume_return' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::alg::base::core::volume_return' (SDTypeStruct)
				
		[13/22] 'mdl::alg::base::core::volume_return(color,color)'
			SDPropertyCategory = 'Input'
				'absorption_coefficient' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'scattering_coefficient' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::alg::base::core::volume_return' (SDTypeStruct)
				
		[14/22] 'mdl::alg::base::core::volume_return.absorption_coefficient(::alg::base::core::volume_return)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::alg::base::core::volume_return' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[15/22] 'mdl::alg::base::core::volume_return.scattering_coefficient(::alg::base::core::volume_return)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::alg::base::core::volume_return' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[16/22] 'mdl::alg::base::core::volume_conversion(float,color,float,bool,::alg::base::core::subsurface_scattering_type,color,float,float,float)'
			Description: 'Calculate volume properties from parameters'
			SDPropertyCategory = 'Input'
				'absorption' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'absorptionColor' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'scattering' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'sssEnabled' = SDValueBool(bool(false)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'sssType' = SDValueEnum("mdl::alg::base::core::subsurface_scattering_type",1) [CONNECTABLE]
					Types:
						'mdl::alg::base::core::subsurface_scattering_type' (SDTypeEnum) [Uniform]
				'sssColor' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'sssScale' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'sssRedShift' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'sssRayleigh' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::alg::base::core::volume_return' (SDTypeStruct)
				
		[17/22] 'mdl::alg::base::core::coat_behavior(::alg::base::core::coat_behavior)'
			Label: 'Coating Behavior'
			SDPropertyCategory = 'Input'
				'v' = SDValueEnum("mdl::alg::base::core::coat_behavior",0) [CONNECTABLE]
					Types:
						'mdl::alg::base::core::coat_behavior' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::alg::base::core::coat_behavior' (SDTypeEnum)
				
		[18/22] 'mdl::alg::base::core::int(::alg::base::core::coat_behavior)'
			Label: 'Coating Behavior'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::alg::base::core::coat_behavior' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[19/22] 'mdl::alg::base::core::subsurface_scattering_source_channel(::alg::base::core::subsurface_scattering_source_channel)'
			Label: 'Subsurface Scattering Source Channel'
			Description: 'Select which channel is used to define scattering color. It needs to be activated in the Display Settings and a Scattering channel needs to be present for these parameters to have an effect.'
			SDPropertyCategory = 'Input'
				'v' = SDValueEnum("mdl::alg::base::core::subsurface_scattering_source_channel",0) [CONNECTABLE]
					Types:
						'mdl::alg::base::core::subsurface_scattering_source_channel' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::alg::base::core::subsurface_scattering_source_channel' (SDTypeEnum)
				
		[20/22] 'mdl::alg::base::core::int(::alg::base::core::subsurface_scattering_source_channel)'
			Label: 'Subsurface Scattering Source Channel'
			Description: 'Select which channel is used to define scattering color. It needs to be activated in the Display Settings and a Scattering channel needs to be present for these parameters to have an effect.'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::alg::base::core::subsurface_scattering_source_channel' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[21/22] 'mdl::alg::base::core::default_emission_intensity(float,color)'
			Description: 'Compute Emission Intensity consistenly across Substance applications'
			SDPropertyCategory = 'Input'
				'emission' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'emission_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				
		[22/22] 'mdl::alg::base::core::material_root'
			Label: 'Material'
			SDPropertyCategory = 'Input'
				'materialRoot' = SDMDLValueCall(mdl::material(bool,material_surface,material_surface,color,material_volume,material_geometry,hair_bsdf)__default_call___173) [CONNECTABLE]
					Types:
						'mdl::material' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
	Types:
		[1/6] 'mdl::alg::base::core::tangent_space_plugin_mode'
			'mdl::alg::base::core::tangent_space_plugin_mode' (SDTypeEnum)
				int None = SDValueInt(int(0))
				int Mikk = SDValueInt(int(1))
				int Unreal = SDValueInt(int(2))
				int Unity = SDValueInt(int(3))
		[2/6] 'mdl::alg::base::core::displacement_source_channel'
			'mdl::alg::base::core::displacement_source_channel' (SDTypeEnum)
				int displacement_source_channel_height = SDValueInt(int(0))
				int displacement_source_channel_displacement = SDValueInt(int(1))
		[3/6] 'mdl::alg::base::core::subsurface_scattering_type'
			'mdl::alg::base::core::subsurface_scattering_type' (SDTypeEnum)
				int subsurface_scattering_type_translucent = SDValueInt(int(0))
				int subsurface_scattering_type_skin = SDValueInt(int(1))
				int subsurface_scattering_type_rayleigh = SDValueInt(int(2))
		[4/6] 'mdl::alg::base::core::volume_return'
			'mdl::alg::base::core::volume_return' (SDTypeStruct)
				ColorRGB absorption_coefficient
				ColorRGB scattering_coefficient
		[5/6] 'mdl::alg::base::core::coat_behavior'
			'mdl::alg::base::core::coat_behavior' (SDTypeEnum)
				int coat_behavior_smooth_surface = SDValueInt(int(0))
				int coat_behavior_keep_details = SDValueInt(int(1))
		[6/6] 'mdl::alg::base::core::subsurface_scattering_source_channel'
			'mdl::alg::base::core::subsurface_scattering_source_channel' (SDTypeEnum)
				int subsurface_scattering_source_channel_albedo = SDValueInt(int(0))
				int subsurface_scattering_source_channel_scatteringcolor = SDValueInt(int(1))
[30/37] 'mdl::anno' (SDMDLModule)
[31/37] 'mdl::alg::materials::designer::blinn' (SDMDLModule)
	Definitions:
		[1/1] 'mdl::alg::materials::designer::blinn::blinn'
			Label: 'Blinn'
			Description: 'A material with a blinn shading'
			SDPropertyCategory = 'Input'
				'baseColor' = SDValueColorRGB(ColorRGB(0.214040995,0.214040995,0.214040995)) [CONNECTABLE]
					Label: 'Diffuse'
					Description: 'Diffuse channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___194) [CONNECTABLE]
					Label: 'Normal'
					Description: 'Normal channel'
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'height' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Height'
					Description: 'Height channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'heightScale' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scale'
					Description: 'provides significant physical detail to the surface by manipulating the vertices of the mesh'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'emissiveColor' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Emissive'
					Description: 'Emissive channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'emissiveIntensity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Emissive Intensity'
					Description: 'Controls how much light is emitted from the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'specular' = SDValueColorRGB(ColorRGB(0.214040995,0.214040995,0.214040995)) [CONNECTABLE]
					Label: 'Specular'
					Description: 'Specular channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'opacity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Opacity'
					Description: 'Opacity channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'glossiness' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Glossiness'
					Description: 'Glossiness channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'glossiness_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Scale'
					Description: 'Glossiness adjustments'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
[32/37] 'mdl::math' (SDMDLModule)
	Definitions:
		[1/554] 'mdl::math::abs(int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[2/554] 'mdl::math::abs(int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[3/554] 'mdl::math::abs(int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[4/554] 'mdl::math::abs(int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[5/554] 'mdl::math::abs(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[6/554] 'mdl::math::abs(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[7/554] 'mdl::math::abs(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[8/554] 'mdl::math::abs(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[9/554] 'mdl::math::abs(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[10/554] 'mdl::math::abs(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[11/554] 'mdl::math::abs(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[12/554] 'mdl::math::abs(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[13/554] 'mdl::math::abs(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[14/554] 'mdl::math::acos(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[15/554] 'mdl::math::acos(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[16/554] 'mdl::math::acos(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[17/554] 'mdl::math::acos(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[18/554] 'mdl::math::acos(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[19/554] 'mdl::math::acos(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[20/554] 'mdl::math::acos(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[21/554] 'mdl::math::acos(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[22/554] 'mdl::math::all(bool)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[23/554] 'mdl::math::all(bool2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[24/554] 'mdl::math::all(bool3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[25/554] 'mdl::math::all(bool4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[26/554] 'mdl::math::any(bool)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[27/554] 'mdl::math::any(bool2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[28/554] 'mdl::math::any(bool3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[29/554] 'mdl::math::any(bool4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[30/554] 'mdl::math::asin(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[31/554] 'mdl::math::asin(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[32/554] 'mdl::math::asin(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[33/554] 'mdl::math::asin(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[34/554] 'mdl::math::asin(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[35/554] 'mdl::math::asin(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[36/554] 'mdl::math::asin(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[37/554] 'mdl::math::asin(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[38/554] 'mdl::math::atan(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[39/554] 'mdl::math::atan(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[40/554] 'mdl::math::atan(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[41/554] 'mdl::math::atan(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[42/554] 'mdl::math::atan(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[43/554] 'mdl::math::atan(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[44/554] 'mdl::math::atan(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[45/554] 'mdl::math::atan(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[46/554] 'mdl::math::atan2(float,float)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[47/554] 'mdl::math::atan2(float2,float2)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[48/554] 'mdl::math::atan2(float3,float3)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[49/554] 'mdl::math::atan2(float4,float4)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[50/554] 'mdl::math::atan2(double,double)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[51/554] 'mdl::math::atan2(double2,double2)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[52/554] 'mdl::math::atan2(double3,double3)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[53/554] 'mdl::math::atan2(double4,double4)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[54/554] 'mdl::math::average(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[55/554] 'mdl::math::average(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[56/554] 'mdl::math::average(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[57/554] 'mdl::math::average(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[58/554] 'mdl::math::average(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[59/554] 'mdl::math::average(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[60/554] 'mdl::math::average(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[61/554] 'mdl::math::average(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[62/554] 'mdl::math::average(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[63/554] 'mdl::math::ceil(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[64/554] 'mdl::math::ceil(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[65/554] 'mdl::math::ceil(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[66/554] 'mdl::math::ceil(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[67/554] 'mdl::math::ceil(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[68/554] 'mdl::math::ceil(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[69/554] 'mdl::math::ceil(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[70/554] 'mdl::math::ceil(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[71/554] 'mdl::math::clamp(int,int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[72/554] 'mdl::math::clamp(int2,int2,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'min' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'max' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[73/554] 'mdl::math::clamp(int3,int3,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'min' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'max' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[74/554] 'mdl::math::clamp(int4,int4,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'min' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'max' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[75/554] 'mdl::math::clamp(float,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[76/554] 'mdl::math::clamp(float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'min' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'max' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[77/554] 'mdl::math::clamp(float3,float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'min' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'max' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[78/554] 'mdl::math::clamp(float4,float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'min' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'max' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[79/554] 'mdl::math::clamp(double,double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[80/554] 'mdl::math::clamp(double2,double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'min' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'max' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[81/554] 'mdl::math::clamp(double3,double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'min' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'max' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[82/554] 'mdl::math::clamp(double4,double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'min' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'max' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[83/554] 'mdl::math::clamp(color,color,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'min' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'max' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[84/554] 'mdl::math::clamp(int2,int2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'min' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[85/554] 'mdl::math::clamp(int2,int,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[86/554] 'mdl::math::clamp(int2,int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[87/554] 'mdl::math::clamp(int3,int3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'min' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[88/554] 'mdl::math::clamp(int3,int,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[89/554] 'mdl::math::clamp(int3,int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[90/554] 'mdl::math::clamp(int4,int4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'min' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[91/554] 'mdl::math::clamp(int4,int,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[92/554] 'mdl::math::clamp(int4,int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[93/554] 'mdl::math::clamp(float2,float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'min' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[94/554] 'mdl::math::clamp(float2,float,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[95/554] 'mdl::math::clamp(float2,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[96/554] 'mdl::math::clamp(float3,float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'min' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[97/554] 'mdl::math::clamp(float3,float,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[98/554] 'mdl::math::clamp(float3,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[99/554] 'mdl::math::clamp(float4,float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'min' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[100/554] 'mdl::math::clamp(float4,float,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[101/554] 'mdl::math::clamp(float4,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[102/554] 'mdl::math::clamp(color,color,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'min' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[103/554] 'mdl::math::clamp(color,float,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[104/554] 'mdl::math::clamp(color,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[105/554] 'mdl::math::clamp(double2,double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'min' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[106/554] 'mdl::math::clamp(double2,double,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[107/554] 'mdl::math::clamp(double2,double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[108/554] 'mdl::math::clamp(double3,double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'min' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[109/554] 'mdl::math::clamp(double3,double,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[110/554] 'mdl::math::clamp(double3,double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[111/554] 'mdl::math::clamp(double4,double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'min' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[112/554] 'mdl::math::clamp(double4,double,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[113/554] 'mdl::math::clamp(double4,double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[114/554] 'mdl::math::cos(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[115/554] 'mdl::math::cos(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[116/554] 'mdl::math::cos(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[117/554] 'mdl::math::cos(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[118/554] 'mdl::math::cos(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[119/554] 'mdl::math::cos(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[120/554] 'mdl::math::cos(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[121/554] 'mdl::math::cos(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[122/554] 'mdl::math::cross(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[123/554] 'mdl::math::cross(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[124/554] 'mdl::math::degrees(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[125/554] 'mdl::math::degrees(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[126/554] 'mdl::math::degrees(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[127/554] 'mdl::math::degrees(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[128/554] 'mdl::math::degrees(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[129/554] 'mdl::math::degrees(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[130/554] 'mdl::math::degrees(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[131/554] 'mdl::math::degrees(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[132/554] 'mdl::math::distance(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[133/554] 'mdl::math::distance(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[134/554] 'mdl::math::distance(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[135/554] 'mdl::math::distance(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[136/554] 'mdl::math::distance(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[137/554] 'mdl::math::distance(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[138/554] 'mdl::math::distance(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[139/554] 'mdl::math::distance(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[140/554] 'mdl::math::dot(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[141/554] 'mdl::math::dot(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[142/554] 'mdl::math::dot(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[143/554] 'mdl::math::dot(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[144/554] 'mdl::math::dot(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[145/554] 'mdl::math::dot(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[146/554] 'mdl::math::dot(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[147/554] 'mdl::math::dot(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[148/554] 'mdl::math::eval_at_wavelength(color,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'wavelength' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[149/554] 'mdl::math::exp(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[150/554] 'mdl::math::exp(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[151/554] 'mdl::math::exp(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[152/554] 'mdl::math::exp(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[153/554] 'mdl::math::exp(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[154/554] 'mdl::math::exp(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[155/554] 'mdl::math::exp(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[156/554] 'mdl::math::exp(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[157/554] 'mdl::math::exp(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[158/554] 'mdl::math::exp2(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[159/554] 'mdl::math::exp2(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[160/554] 'mdl::math::exp2(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[161/554] 'mdl::math::exp2(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[162/554] 'mdl::math::exp2(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[163/554] 'mdl::math::exp2(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[164/554] 'mdl::math::exp2(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[165/554] 'mdl::math::exp2(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[166/554] 'mdl::math::exp2(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[167/554] 'mdl::math::floor(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[168/554] 'mdl::math::floor(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[169/554] 'mdl::math::floor(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[170/554] 'mdl::math::floor(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[171/554] 'mdl::math::floor(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[172/554] 'mdl::math::floor(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[173/554] 'mdl::math::floor(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[174/554] 'mdl::math::floor(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[175/554] 'mdl::math::fmod(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[176/554] 'mdl::math::fmod(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[177/554] 'mdl::math::fmod(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[178/554] 'mdl::math::fmod(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[179/554] 'mdl::math::fmod(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[180/554] 'mdl::math::fmod(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[181/554] 'mdl::math::fmod(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[182/554] 'mdl::math::fmod(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[183/554] 'mdl::math::fmod(float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[184/554] 'mdl::math::fmod(float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[185/554] 'mdl::math::fmod(float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[186/554] 'mdl::math::fmod(double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[187/554] 'mdl::math::fmod(double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[188/554] 'mdl::math::fmod(double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[189/554] 'mdl::math::frac(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[190/554] 'mdl::math::frac(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[191/554] 'mdl::math::frac(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[192/554] 'mdl::math::frac(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[193/554] 'mdl::math::frac(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[194/554] 'mdl::math::frac(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[195/554] 'mdl::math::frac(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[196/554] 'mdl::math::frac(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[197/554] 'mdl::math::isnan(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[198/554] 'mdl::math::isnan(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[199/554] 'mdl::math::isnan(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[200/554] 'mdl::math::isnan(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[201/554] 'mdl::math::isnan(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[202/554] 'mdl::math::isnan(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[203/554] 'mdl::math::isnan(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[204/554] 'mdl::math::isnan(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[205/554] 'mdl::math::isfinite(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[206/554] 'mdl::math::isfinite(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[207/554] 'mdl::math::isfinite(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[208/554] 'mdl::math::isfinite(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[209/554] 'mdl::math::isfinite(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[210/554] 'mdl::math::isfinite(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[211/554] 'mdl::math::isfinite(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[212/554] 'mdl::math::isfinite(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[213/554] 'mdl::math::length(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[214/554] 'mdl::math::length(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[215/554] 'mdl::math::length(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[216/554] 'mdl::math::length(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[217/554] 'mdl::math::length(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[218/554] 'mdl::math::length(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[219/554] 'mdl::math::length(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[220/554] 'mdl::math::length(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[221/554] 'mdl::math::lerp(float,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[222/554] 'mdl::math::lerp(float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'l' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[223/554] 'mdl::math::lerp(float3,float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'l' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[224/554] 'mdl::math::lerp(float4,float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'l' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[225/554] 'mdl::math::lerp(double,double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[226/554] 'mdl::math::lerp(double2,double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'l' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[227/554] 'mdl::math::lerp(double3,double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'l' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[228/554] 'mdl::math::lerp(double4,double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'l' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[229/554] 'mdl::math::lerp(float2,float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[230/554] 'mdl::math::lerp(float3,float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[231/554] 'mdl::math::lerp(float4,float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[232/554] 'mdl::math::lerp(double2,double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[233/554] 'mdl::math::lerp(double3,double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[234/554] 'mdl::math::lerp(double4,double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[235/554] 'mdl::math::lerp(color,color,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'l' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[236/554] 'mdl::math::lerp(color,color,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[237/554] 'mdl::math::log(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[238/554] 'mdl::math::log(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[239/554] 'mdl::math::log(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[240/554] 'mdl::math::log(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[241/554] 'mdl::math::log(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[242/554] 'mdl::math::log(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[243/554] 'mdl::math::log(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[244/554] 'mdl::math::log(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[245/554] 'mdl::math::log(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[246/554] 'mdl::math::log2(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[247/554] 'mdl::math::log2(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[248/554] 'mdl::math::log2(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[249/554] 'mdl::math::log2(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[250/554] 'mdl::math::log2(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[251/554] 'mdl::math::log2(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[252/554] 'mdl::math::log2(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[253/554] 'mdl::math::log2(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[254/554] 'mdl::math::log2(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[255/554] 'mdl::math::log10(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[256/554] 'mdl::math::log10(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[257/554] 'mdl::math::log10(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[258/554] 'mdl::math::log10(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[259/554] 'mdl::math::log10(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[260/554] 'mdl::math::log10(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[261/554] 'mdl::math::log10(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[262/554] 'mdl::math::log10(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[263/554] 'mdl::math::log10(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[264/554] 'mdl::math::luminance(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[265/554] 'mdl::math::luminance(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[266/554] 'mdl::math::max(int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[267/554] 'mdl::math::max(int2,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'b' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[268/554] 'mdl::math::max(int3,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'b' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[269/554] 'mdl::math::max(int4,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'b' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[270/554] 'mdl::math::max(int2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[271/554] 'mdl::math::max(int3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[272/554] 'mdl::math::max(int4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[273/554] 'mdl::math::max(int,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[274/554] 'mdl::math::max(int,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[275/554] 'mdl::math::max(int,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[276/554] 'mdl::math::max(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[277/554] 'mdl::math::max(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[278/554] 'mdl::math::max(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[279/554] 'mdl::math::max(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[280/554] 'mdl::math::max(float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[281/554] 'mdl::math::max(float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[282/554] 'mdl::math::max(float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[283/554] 'mdl::math::max(float,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[284/554] 'mdl::math::max(float,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[285/554] 'mdl::math::max(float,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[286/554] 'mdl::math::max(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[287/554] 'mdl::math::max(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[288/554] 'mdl::math::max(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[289/554] 'mdl::math::max(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[290/554] 'mdl::math::max(double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[291/554] 'mdl::math::max(double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[292/554] 'mdl::math::max(double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[293/554] 'mdl::math::max(double,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[294/554] 'mdl::math::max(double,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[295/554] 'mdl::math::max(double,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[296/554] 'mdl::math::max(color,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[297/554] 'mdl::math::max(float,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[298/554] 'mdl::math::max(color,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[299/554] 'mdl::math::max_value(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[300/554] 'mdl::math::max_value(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[301/554] 'mdl::math::max_value(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[302/554] 'mdl::math::max_value(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[303/554] 'mdl::math::max_value(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[304/554] 'mdl::math::max_value(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[305/554] 'mdl::math::max_value(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[306/554] 'mdl::math::max_value(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[307/554] 'mdl::math::max_value(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[308/554] 'mdl::math::max_value_wavelength(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[309/554] 'mdl::math::min(int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[310/554] 'mdl::math::min(int2,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'b' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[311/554] 'mdl::math::min(int3,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'b' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[312/554] 'mdl::math::min(int4,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'b' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[313/554] 'mdl::math::min(int2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[314/554] 'mdl::math::min(int3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[315/554] 'mdl::math::min(int4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[316/554] 'mdl::math::min(int,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[317/554] 'mdl::math::min(int,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[318/554] 'mdl::math::min(int,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[319/554] 'mdl::math::min(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[320/554] 'mdl::math::min(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[321/554] 'mdl::math::min(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[322/554] 'mdl::math::min(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[323/554] 'mdl::math::min(float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[324/554] 'mdl::math::min(float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[325/554] 'mdl::math::min(float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[326/554] 'mdl::math::min(float,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[327/554] 'mdl::math::min(float,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[328/554] 'mdl::math::min(float,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[329/554] 'mdl::math::min(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[330/554] 'mdl::math::min(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[331/554] 'mdl::math::min(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[332/554] 'mdl::math::min(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[333/554] 'mdl::math::min(double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[334/554] 'mdl::math::min(double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[335/554] 'mdl::math::min(double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[336/554] 'mdl::math::min(double,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[337/554] 'mdl::math::min(double,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[338/554] 'mdl::math::min(double,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[339/554] 'mdl::math::min(color,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[340/554] 'mdl::math::min(float,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[341/554] 'mdl::math::min(color,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[342/554] 'mdl::math::min_value(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[343/554] 'mdl::math::min_value(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[344/554] 'mdl::math::min_value(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[345/554] 'mdl::math::min_value(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[346/554] 'mdl::math::min_value(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[347/554] 'mdl::math::min_value(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[348/554] 'mdl::math::min_value(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[349/554] 'mdl::math::min_value(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[350/554] 'mdl::math::min_value(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[351/554] 'mdl::math::min_value_wavelength(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[352/554] 'mdl::math::modf(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
		[353/554] 'mdl::math::modf(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float2>' (SDTypeArray)
				
		[354/554] 'mdl::math::modf(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float3>' (SDTypeArray)
				
		[355/554] 'mdl::math::modf(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float4>' (SDTypeArray)
				
		[356/554] 'mdl::math::modf(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double>' (SDTypeArray)
				
		[357/554] 'mdl::math::modf(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double2>' (SDTypeArray)
				
		[358/554] 'mdl::math::modf(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double3>' (SDTypeArray)
				
		[359/554] 'mdl::math::modf(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double4>' (SDTypeArray)
				
		[360/554] 'mdl::math::normalize(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[361/554] 'mdl::math::normalize(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[362/554] 'mdl::math::normalize(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[363/554] 'mdl::math::normalize(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[364/554] 'mdl::math::normalize(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[365/554] 'mdl::math::normalize(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[366/554] 'mdl::math::normalize(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[367/554] 'mdl::math::normalize(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[368/554] 'mdl::math::pow(int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[369/554] 'mdl::math::pow(int2,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'b' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[370/554] 'mdl::math::pow(int3,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'b' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[371/554] 'mdl::math::pow(int4,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'b' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[372/554] 'mdl::math::pow(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[373/554] 'mdl::math::pow(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[374/554] 'mdl::math::pow(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[375/554] 'mdl::math::pow(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[376/554] 'mdl::math::pow(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[377/554] 'mdl::math::pow(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[378/554] 'mdl::math::pow(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[379/554] 'mdl::math::pow(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[380/554] 'mdl::math::pow(int2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[381/554] 'mdl::math::pow(int3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[382/554] 'mdl::math::pow(int4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[383/554] 'mdl::math::pow(float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[384/554] 'mdl::math::pow(float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[385/554] 'mdl::math::pow(float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[386/554] 'mdl::math::pow(double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[387/554] 'mdl::math::pow(double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[388/554] 'mdl::math::pow(double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[389/554] 'mdl::math::pow(color,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[390/554] 'mdl::math::pow(color,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[391/554] 'mdl::math::radians(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[392/554] 'mdl::math::radians(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[393/554] 'mdl::math::radians(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[394/554] 'mdl::math::radians(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[395/554] 'mdl::math::radians(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[396/554] 'mdl::math::radians(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[397/554] 'mdl::math::radians(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[398/554] 'mdl::math::radians(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[399/554] 'mdl::math::round(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[400/554] 'mdl::math::round(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[401/554] 'mdl::math::round(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[402/554] 'mdl::math::round(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[403/554] 'mdl::math::round(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[404/554] 'mdl::math::round(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[405/554] 'mdl::math::round(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[406/554] 'mdl::math::round(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[407/554] 'mdl::math::rsqrt(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[408/554] 'mdl::math::rsqrt(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[409/554] 'mdl::math::rsqrt(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[410/554] 'mdl::math::rsqrt(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[411/554] 'mdl::math::rsqrt(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[412/554] 'mdl::math::rsqrt(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[413/554] 'mdl::math::rsqrt(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[414/554] 'mdl::math::rsqrt(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[415/554] 'mdl::math::rsqrt(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[416/554] 'mdl::math::saturate(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[417/554] 'mdl::math::saturate(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[418/554] 'mdl::math::saturate(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[419/554] 'mdl::math::saturate(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[420/554] 'mdl::math::saturate(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[421/554] 'mdl::math::saturate(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[422/554] 'mdl::math::saturate(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[423/554] 'mdl::math::saturate(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[424/554] 'mdl::math::saturate(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[425/554] 'mdl::math::sign(int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[426/554] 'mdl::math::sign(int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[427/554] 'mdl::math::sign(int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[428/554] 'mdl::math::sign(int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[429/554] 'mdl::math::sign(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[430/554] 'mdl::math::sign(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[431/554] 'mdl::math::sign(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[432/554] 'mdl::math::sign(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[433/554] 'mdl::math::sign(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[434/554] 'mdl::math::sign(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[435/554] 'mdl::math::sign(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[436/554] 'mdl::math::sign(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[437/554] 'mdl::math::sin(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[438/554] 'mdl::math::sin(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[439/554] 'mdl::math::sin(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[440/554] 'mdl::math::sin(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[441/554] 'mdl::math::sin(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[442/554] 'mdl::math::sin(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[443/554] 'mdl::math::sin(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[444/554] 'mdl::math::sin(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[445/554] 'mdl::math::sincos(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
		[446/554] 'mdl::math::sincos(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float2>' (SDTypeArray)
				
		[447/554] 'mdl::math::sincos(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float3>' (SDTypeArray)
				
		[448/554] 'mdl::math::sincos(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float4>' (SDTypeArray)
				
		[449/554] 'mdl::math::sincos(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double>' (SDTypeArray)
				
		[450/554] 'mdl::math::sincos(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double2>' (SDTypeArray)
				
		[451/554] 'mdl::math::sincos(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double3>' (SDTypeArray)
				
		[452/554] 'mdl::math::sincos(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double4>' (SDTypeArray)
				
		[453/554] 'mdl::math::smoothstep(float,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[454/554] 'mdl::math::smoothstep(float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'l' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[455/554] 'mdl::math::smoothstep(float3,float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'l' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[456/554] 'mdl::math::smoothstep(float4,float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'l' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[457/554] 'mdl::math::smoothstep(double,double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[458/554] 'mdl::math::smoothstep(double2,double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'l' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[459/554] 'mdl::math::smoothstep(double3,double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'l' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[460/554] 'mdl::math::smoothstep(double4,double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'l' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[461/554] 'mdl::math::smoothstep(float2,float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[462/554] 'mdl::math::smoothstep(float3,float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[463/554] 'mdl::math::smoothstep(float4,float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[464/554] 'mdl::math::smoothstep(double2,double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[465/554] 'mdl::math::smoothstep(double3,double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[466/554] 'mdl::math::smoothstep(double4,double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[467/554] 'mdl::math::sqrt(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[468/554] 'mdl::math::sqrt(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[469/554] 'mdl::math::sqrt(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[470/554] 'mdl::math::sqrt(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[471/554] 'mdl::math::sqrt(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[472/554] 'mdl::math::sqrt(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[473/554] 'mdl::math::sqrt(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[474/554] 'mdl::math::sqrt(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[475/554] 'mdl::math::sqrt(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[476/554] 'mdl::math::step(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[477/554] 'mdl::math::step(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[478/554] 'mdl::math::step(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[479/554] 'mdl::math::step(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[480/554] 'mdl::math::step(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[481/554] 'mdl::math::step(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[482/554] 'mdl::math::step(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[483/554] 'mdl::math::step(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[484/554] 'mdl::math::tan(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[485/554] 'mdl::math::tan(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[486/554] 'mdl::math::tan(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[487/554] 'mdl::math::tan(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[488/554] 'mdl::math::tan(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[489/554] 'mdl::math::tan(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[490/554] 'mdl::math::tan(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[491/554] 'mdl::math::tan(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[492/554] 'mdl::math::transpose(float2x2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[493/554] 'mdl::math::transpose(float3x2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[494/554] 'mdl::math::transpose(float2x3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[495/554] 'mdl::math::transpose(float3x3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[496/554] 'mdl::math::transpose(float2x4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[497/554] 'mdl::math::transpose(float4x2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[498/554] 'mdl::math::transpose(float4x3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[499/554] 'mdl::math::transpose(float3x4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[500/554] 'mdl::math::transpose(float4x4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[501/554] 'mdl::math::transpose(double2x2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[502/554] 'mdl::math::transpose(double3x2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[503/554] 'mdl::math::transpose(double2x3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[504/554] 'mdl::math::transpose(double3x3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[505/554] 'mdl::math::transpose(double2x4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[506/554] 'mdl::math::transpose(double4x2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[507/554] 'mdl::math::transpose(double4x3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[508/554] 'mdl::math::transpose(double3x4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[509/554] 'mdl::math::transpose(double4x4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[510/554] 'mdl::math::blackbody(float)'
			SDPropertyCategory = 'Input'
				'temperature' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[511/554] 'mdl::math::emission_color(float[N],float[N])'
			SDPropertyCategory = 'Input'
				'wavelengths' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				'amplitudes' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[512/554] 'mdl::math::emission_color(color)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[513/554] 'mdl::math::cosh(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[514/554] 'mdl::math::cosh(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[515/554] 'mdl::math::cosh(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[516/554] 'mdl::math::cosh(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[517/554] 'mdl::math::cosh(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[518/554] 'mdl::math::cosh(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[519/554] 'mdl::math::cosh(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[520/554] 'mdl::math::cosh(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[521/554] 'mdl::math::sinh(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[522/554] 'mdl::math::sinh(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[523/554] 'mdl::math::sinh(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[524/554] 'mdl::math::sinh(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[525/554] 'mdl::math::sinh(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[526/554] 'mdl::math::sinh(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[527/554] 'mdl::math::sinh(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[528/554] 'mdl::math::sinh(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[529/554] 'mdl::math::tanh(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[530/554] 'mdl::math::tanh(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[531/554] 'mdl::math::tanh(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[532/554] 'mdl::math::tanh(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[533/554] 'mdl::math::tanh(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[534/554] 'mdl::math::tanh(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[535/554] 'mdl::math::tanh(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[536/554] 'mdl::math::tanh(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[537/554] 'mdl::math::float_bits_to_int(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[538/554] 'mdl::math::int_bits_to_float(int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[539/554] 'mdl::math::DX(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[540/554] 'mdl::math::DX(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[541/554] 'mdl::math::DX(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[542/554] 'mdl::math::DX(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[543/554] 'mdl::math::DY(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[544/554] 'mdl::math::DY(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[545/554] 'mdl::math::DY(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[546/554] 'mdl::math::DY(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[547/554] 'mdl::math::DX(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[548/554] 'mdl::math::DX(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[549/554] 'mdl::math::DX(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[550/554] 'mdl::math::DX(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[551/554] 'mdl::math::DY(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[552/554] 'mdl::math::DY(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[553/554] 'mdl::math::DY(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[554/554] 'mdl::math::DY(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
[33/37] 'mdl::std' (SDMDLModule)
	Definitions:
		[1/783] 'mdl::std::position()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[2/783] 'mdl::std::normal()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[3/783] 'mdl::std::geometry_normal()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[4/783] 'mdl::std::motion()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[5/783] 'mdl::std::texture_space_max()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt) [Varying]
				
		[6/783] 'mdl::std::texture_coordinate(int)'
			SDPropertyCategory = 'Input'
				'index' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[7/783] 'mdl::std::texture_tangent_u(int)'
			SDPropertyCategory = 'Input'
				'index' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[8/783] 'mdl::std::texture_tangent_v(int)'
			SDPropertyCategory = 'Input'
				'index' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[9/783] 'mdl::std::tangent_space(int)'
			SDPropertyCategory = 'Input'
				'index' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix) [Varying]
				
		[10/783] 'mdl::std::geometry_tangent_u(int)'
			SDPropertyCategory = 'Input'
				'index' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[11/783] 'mdl::std::geometry_tangent_v(int)'
			SDPropertyCategory = 'Input'
				'index' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[12/783] 'mdl::std::direction()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[13/783] 'mdl::std::animation_time()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat) [Varying]
				
		[14/783] 'mdl::std::wavelength_base()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
		[15/783] 'mdl::std::transform(::state::coordinate_space,::state::coordinate_space)'
			SDPropertyCategory = 'Input'
				'from' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'to' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[16/783] 'mdl::std::transform_point(::state::coordinate_space,::state::coordinate_space,float3)'
			SDPropertyCategory = 'Input'
				'from' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'to' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'point' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[17/783] 'mdl::std::transform_vector(::state::coordinate_space,::state::coordinate_space,float3)'
			SDPropertyCategory = 'Input'
				'from' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'to' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'vector' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[18/783] 'mdl::std::transform_normal(::state::coordinate_space,::state::coordinate_space,float3)'
			SDPropertyCategory = 'Input'
				'from' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'to' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'normal' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[19/783] 'mdl::std::transform_scale(::state::coordinate_space,::state::coordinate_space,float)'
			SDPropertyCategory = 'Input'
				'from' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'to' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'scale' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[20/783] 'mdl::std::rounded_corner_normal$1.2(float,bool)'
			SDPropertyCategory = 'Input'
				'radius' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'across_materials' = SDValueBool(bool(false)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[21/783] 'mdl::std::rounded_corner_normal(float,bool,float)'
			SDPropertyCategory = 'Input'
				'radius' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'across_materials' = SDValueBool(bool(false)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'roundness' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[22/783] 'mdl::std::meters_per_scene_unit()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[23/783] 'mdl::std::scene_units_per_meter()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[24/783] 'mdl::std::object_id()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[25/783] 'mdl::std::wavelength_min()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[26/783] 'mdl::std::wavelength_max()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[27/783] 'mdl::std::abs(int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[28/783] 'mdl::std::abs(int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[29/783] 'mdl::std::abs(int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[30/783] 'mdl::std::abs(int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[31/783] 'mdl::std::abs(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[32/783] 'mdl::std::abs(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[33/783] 'mdl::std::abs(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[34/783] 'mdl::std::abs(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[35/783] 'mdl::std::abs(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[36/783] 'mdl::std::abs(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[37/783] 'mdl::std::abs(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[38/783] 'mdl::std::abs(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[39/783] 'mdl::std::abs(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[40/783] 'mdl::std::acos(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[41/783] 'mdl::std::acos(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[42/783] 'mdl::std::acos(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[43/783] 'mdl::std::acos(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[44/783] 'mdl::std::acos(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[45/783] 'mdl::std::acos(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[46/783] 'mdl::std::acos(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[47/783] 'mdl::std::acos(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[48/783] 'mdl::std::all(bool)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[49/783] 'mdl::std::all(bool2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[50/783] 'mdl::std::all(bool3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[51/783] 'mdl::std::all(bool4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[52/783] 'mdl::std::any(bool)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[53/783] 'mdl::std::any(bool2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[54/783] 'mdl::std::any(bool3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[55/783] 'mdl::std::any(bool4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[56/783] 'mdl::std::asin(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[57/783] 'mdl::std::asin(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[58/783] 'mdl::std::asin(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[59/783] 'mdl::std::asin(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[60/783] 'mdl::std::asin(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[61/783] 'mdl::std::asin(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[62/783] 'mdl::std::asin(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[63/783] 'mdl::std::asin(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[64/783] 'mdl::std::atan(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[65/783] 'mdl::std::atan(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[66/783] 'mdl::std::atan(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[67/783] 'mdl::std::atan(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[68/783] 'mdl::std::atan(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[69/783] 'mdl::std::atan(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[70/783] 'mdl::std::atan(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[71/783] 'mdl::std::atan(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[72/783] 'mdl::std::atan2(float,float)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[73/783] 'mdl::std::atan2(float2,float2)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[74/783] 'mdl::std::atan2(float3,float3)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[75/783] 'mdl::std::atan2(float4,float4)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[76/783] 'mdl::std::atan2(double,double)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[77/783] 'mdl::std::atan2(double2,double2)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[78/783] 'mdl::std::atan2(double3,double3)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[79/783] 'mdl::std::atan2(double4,double4)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[80/783] 'mdl::std::average(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[81/783] 'mdl::std::average(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[82/783] 'mdl::std::average(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[83/783] 'mdl::std::average(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[84/783] 'mdl::std::average(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[85/783] 'mdl::std::average(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[86/783] 'mdl::std::average(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[87/783] 'mdl::std::average(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[88/783] 'mdl::std::average(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[89/783] 'mdl::std::ceil(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[90/783] 'mdl::std::ceil(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[91/783] 'mdl::std::ceil(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[92/783] 'mdl::std::ceil(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[93/783] 'mdl::std::ceil(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[94/783] 'mdl::std::ceil(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[95/783] 'mdl::std::ceil(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[96/783] 'mdl::std::ceil(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[97/783] 'mdl::std::clamp(int,int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[98/783] 'mdl::std::clamp(int2,int2,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'min' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'max' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[99/783] 'mdl::std::clamp(int3,int3,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'min' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'max' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[100/783] 'mdl::std::clamp(int4,int4,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'min' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'max' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[101/783] 'mdl::std::clamp(float,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[102/783] 'mdl::std::clamp(float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'min' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'max' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[103/783] 'mdl::std::clamp(float3,float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'min' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'max' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[104/783] 'mdl::std::clamp(float4,float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'min' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'max' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[105/783] 'mdl::std::clamp(double,double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[106/783] 'mdl::std::clamp(double2,double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'min' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'max' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[107/783] 'mdl::std::clamp(double3,double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'min' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'max' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[108/783] 'mdl::std::clamp(double4,double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'min' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'max' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[109/783] 'mdl::std::clamp(color,color,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'min' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'max' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[110/783] 'mdl::std::clamp(int2,int2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'min' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[111/783] 'mdl::std::clamp(int2,int,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[112/783] 'mdl::std::clamp(int2,int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[113/783] 'mdl::std::clamp(int3,int3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'min' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[114/783] 'mdl::std::clamp(int3,int,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[115/783] 'mdl::std::clamp(int3,int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[116/783] 'mdl::std::clamp(int4,int4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'min' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[117/783] 'mdl::std::clamp(int4,int,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[118/783] 'mdl::std::clamp(int4,int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[119/783] 'mdl::std::clamp(float2,float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'min' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[120/783] 'mdl::std::clamp(float2,float,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[121/783] 'mdl::std::clamp(float2,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[122/783] 'mdl::std::clamp(float3,float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'min' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[123/783] 'mdl::std::clamp(float3,float,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[124/783] 'mdl::std::clamp(float3,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[125/783] 'mdl::std::clamp(float4,float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'min' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[126/783] 'mdl::std::clamp(float4,float,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[127/783] 'mdl::std::clamp(float4,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[128/783] 'mdl::std::clamp(color,color,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'min' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[129/783] 'mdl::std::clamp(color,float,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[130/783] 'mdl::std::clamp(color,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[131/783] 'mdl::std::clamp(double2,double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'min' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[132/783] 'mdl::std::clamp(double2,double,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[133/783] 'mdl::std::clamp(double2,double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[134/783] 'mdl::std::clamp(double3,double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'min' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[135/783] 'mdl::std::clamp(double3,double,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[136/783] 'mdl::std::clamp(double3,double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[137/783] 'mdl::std::clamp(double4,double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'min' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[138/783] 'mdl::std::clamp(double4,double,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[139/783] 'mdl::std::clamp(double4,double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[140/783] 'mdl::std::cos(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[141/783] 'mdl::std::cos(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[142/783] 'mdl::std::cos(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[143/783] 'mdl::std::cos(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[144/783] 'mdl::std::cos(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[145/783] 'mdl::std::cos(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[146/783] 'mdl::std::cos(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[147/783] 'mdl::std::cos(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[148/783] 'mdl::std::cross(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[149/783] 'mdl::std::cross(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[150/783] 'mdl::std::degrees(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[151/783] 'mdl::std::degrees(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[152/783] 'mdl::std::degrees(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[153/783] 'mdl::std::degrees(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[154/783] 'mdl::std::degrees(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[155/783] 'mdl::std::degrees(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[156/783] 'mdl::std::degrees(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[157/783] 'mdl::std::degrees(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[158/783] 'mdl::std::distance(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[159/783] 'mdl::std::distance(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[160/783] 'mdl::std::distance(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[161/783] 'mdl::std::distance(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[162/783] 'mdl::std::distance(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[163/783] 'mdl::std::distance(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[164/783] 'mdl::std::distance(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[165/783] 'mdl::std::distance(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[166/783] 'mdl::std::dot(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[167/783] 'mdl::std::dot(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[168/783] 'mdl::std::dot(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[169/783] 'mdl::std::dot(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[170/783] 'mdl::std::dot(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[171/783] 'mdl::std::dot(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[172/783] 'mdl::std::dot(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[173/783] 'mdl::std::dot(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[174/783] 'mdl::std::eval_at_wavelength(color,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'wavelength' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[175/783] 'mdl::std::exp(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[176/783] 'mdl::std::exp(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[177/783] 'mdl::std::exp(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[178/783] 'mdl::std::exp(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[179/783] 'mdl::std::exp(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[180/783] 'mdl::std::exp(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[181/783] 'mdl::std::exp(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[182/783] 'mdl::std::exp(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[183/783] 'mdl::std::exp(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[184/783] 'mdl::std::exp2(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[185/783] 'mdl::std::exp2(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[186/783] 'mdl::std::exp2(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[187/783] 'mdl::std::exp2(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[188/783] 'mdl::std::exp2(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[189/783] 'mdl::std::exp2(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[190/783] 'mdl::std::exp2(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[191/783] 'mdl::std::exp2(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[192/783] 'mdl::std::exp2(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[193/783] 'mdl::std::floor(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[194/783] 'mdl::std::floor(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[195/783] 'mdl::std::floor(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[196/783] 'mdl::std::floor(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[197/783] 'mdl::std::floor(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[198/783] 'mdl::std::floor(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[199/783] 'mdl::std::floor(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[200/783] 'mdl::std::floor(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[201/783] 'mdl::std::fmod(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[202/783] 'mdl::std::fmod(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[203/783] 'mdl::std::fmod(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[204/783] 'mdl::std::fmod(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[205/783] 'mdl::std::fmod(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[206/783] 'mdl::std::fmod(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[207/783] 'mdl::std::fmod(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[208/783] 'mdl::std::fmod(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[209/783] 'mdl::std::fmod(float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[210/783] 'mdl::std::fmod(float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[211/783] 'mdl::std::fmod(float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[212/783] 'mdl::std::fmod(double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[213/783] 'mdl::std::fmod(double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[214/783] 'mdl::std::fmod(double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[215/783] 'mdl::std::frac(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[216/783] 'mdl::std::frac(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[217/783] 'mdl::std::frac(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[218/783] 'mdl::std::frac(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[219/783] 'mdl::std::frac(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[220/783] 'mdl::std::frac(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[221/783] 'mdl::std::frac(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[222/783] 'mdl::std::frac(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[223/783] 'mdl::std::isnan(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[224/783] 'mdl::std::isnan(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[225/783] 'mdl::std::isnan(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[226/783] 'mdl::std::isnan(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[227/783] 'mdl::std::isnan(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[228/783] 'mdl::std::isnan(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[229/783] 'mdl::std::isnan(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[230/783] 'mdl::std::isnan(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[231/783] 'mdl::std::isfinite(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[232/783] 'mdl::std::isfinite(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[233/783] 'mdl::std::isfinite(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[234/783] 'mdl::std::isfinite(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[235/783] 'mdl::std::isfinite(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[236/783] 'mdl::std::isfinite(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[237/783] 'mdl::std::isfinite(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[238/783] 'mdl::std::isfinite(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[239/783] 'mdl::std::length(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[240/783] 'mdl::std::length(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[241/783] 'mdl::std::length(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[242/783] 'mdl::std::length(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[243/783] 'mdl::std::length(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[244/783] 'mdl::std::length(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[245/783] 'mdl::std::length(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[246/783] 'mdl::std::length(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[247/783] 'mdl::std::lerp(float,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[248/783] 'mdl::std::lerp(float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'l' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[249/783] 'mdl::std::lerp(float3,float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'l' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[250/783] 'mdl::std::lerp(float4,float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'l' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[251/783] 'mdl::std::lerp(double,double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[252/783] 'mdl::std::lerp(double2,double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'l' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[253/783] 'mdl::std::lerp(double3,double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'l' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[254/783] 'mdl::std::lerp(double4,double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'l' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[255/783] 'mdl::std::lerp(float2,float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[256/783] 'mdl::std::lerp(float3,float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[257/783] 'mdl::std::lerp(float4,float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[258/783] 'mdl::std::lerp(double2,double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[259/783] 'mdl::std::lerp(double3,double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[260/783] 'mdl::std::lerp(double4,double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[261/783] 'mdl::std::lerp(color,color,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'l' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[262/783] 'mdl::std::lerp(color,color,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[263/783] 'mdl::std::log(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[264/783] 'mdl::std::log(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[265/783] 'mdl::std::log(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[266/783] 'mdl::std::log(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[267/783] 'mdl::std::log(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[268/783] 'mdl::std::log(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[269/783] 'mdl::std::log(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[270/783] 'mdl::std::log(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[271/783] 'mdl::std::log(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[272/783] 'mdl::std::log2(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[273/783] 'mdl::std::log2(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[274/783] 'mdl::std::log2(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[275/783] 'mdl::std::log2(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[276/783] 'mdl::std::log2(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[277/783] 'mdl::std::log2(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[278/783] 'mdl::std::log2(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[279/783] 'mdl::std::log2(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[280/783] 'mdl::std::log2(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[281/783] 'mdl::std::log10(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[282/783] 'mdl::std::log10(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[283/783] 'mdl::std::log10(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[284/783] 'mdl::std::log10(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[285/783] 'mdl::std::log10(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[286/783] 'mdl::std::log10(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[287/783] 'mdl::std::log10(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[288/783] 'mdl::std::log10(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[289/783] 'mdl::std::log10(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[290/783] 'mdl::std::luminance(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[291/783] 'mdl::std::luminance(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[292/783] 'mdl::std::max(int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[293/783] 'mdl::std::max(int2,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'b' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[294/783] 'mdl::std::max(int3,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'b' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[295/783] 'mdl::std::max(int4,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'b' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[296/783] 'mdl::std::max(int2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[297/783] 'mdl::std::max(int3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[298/783] 'mdl::std::max(int4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[299/783] 'mdl::std::max(int,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[300/783] 'mdl::std::max(int,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[301/783] 'mdl::std::max(int,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[302/783] 'mdl::std::max(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[303/783] 'mdl::std::max(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[304/783] 'mdl::std::max(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[305/783] 'mdl::std::max(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[306/783] 'mdl::std::max(float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[307/783] 'mdl::std::max(float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[308/783] 'mdl::std::max(float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[309/783] 'mdl::std::max(float,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[310/783] 'mdl::std::max(float,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[311/783] 'mdl::std::max(float,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[312/783] 'mdl::std::max(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[313/783] 'mdl::std::max(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[314/783] 'mdl::std::max(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[315/783] 'mdl::std::max(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[316/783] 'mdl::std::max(double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[317/783] 'mdl::std::max(double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[318/783] 'mdl::std::max(double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[319/783] 'mdl::std::max(double,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[320/783] 'mdl::std::max(double,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[321/783] 'mdl::std::max(double,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[322/783] 'mdl::std::max(color,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[323/783] 'mdl::std::max(float,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[324/783] 'mdl::std::max(color,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[325/783] 'mdl::std::max_value(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[326/783] 'mdl::std::max_value(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[327/783] 'mdl::std::max_value(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[328/783] 'mdl::std::max_value(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[329/783] 'mdl::std::max_value(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[330/783] 'mdl::std::max_value(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[331/783] 'mdl::std::max_value(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[332/783] 'mdl::std::max_value(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[333/783] 'mdl::std::max_value(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[334/783] 'mdl::std::max_value_wavelength(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[335/783] 'mdl::std::min(int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[336/783] 'mdl::std::min(int2,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'b' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[337/783] 'mdl::std::min(int3,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'b' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[338/783] 'mdl::std::min(int4,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'b' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[339/783] 'mdl::std::min(int2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[340/783] 'mdl::std::min(int3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[341/783] 'mdl::std::min(int4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[342/783] 'mdl::std::min(int,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[343/783] 'mdl::std::min(int,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[344/783] 'mdl::std::min(int,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[345/783] 'mdl::std::min(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[346/783] 'mdl::std::min(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[347/783] 'mdl::std::min(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[348/783] 'mdl::std::min(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[349/783] 'mdl::std::min(float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[350/783] 'mdl::std::min(float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[351/783] 'mdl::std::min(float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[352/783] 'mdl::std::min(float,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[353/783] 'mdl::std::min(float,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[354/783] 'mdl::std::min(float,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[355/783] 'mdl::std::min(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[356/783] 'mdl::std::min(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[357/783] 'mdl::std::min(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[358/783] 'mdl::std::min(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[359/783] 'mdl::std::min(double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[360/783] 'mdl::std::min(double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[361/783] 'mdl::std::min(double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[362/783] 'mdl::std::min(double,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[363/783] 'mdl::std::min(double,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[364/783] 'mdl::std::min(double,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[365/783] 'mdl::std::min(color,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[366/783] 'mdl::std::min(float,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[367/783] 'mdl::std::min(color,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[368/783] 'mdl::std::min_value(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[369/783] 'mdl::std::min_value(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[370/783] 'mdl::std::min_value(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[371/783] 'mdl::std::min_value(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[372/783] 'mdl::std::min_value(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[373/783] 'mdl::std::min_value(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[374/783] 'mdl::std::min_value(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[375/783] 'mdl::std::min_value(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[376/783] 'mdl::std::min_value(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[377/783] 'mdl::std::min_value_wavelength(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[378/783] 'mdl::std::modf(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
		[379/783] 'mdl::std::modf(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float2>' (SDTypeArray)
				
		[380/783] 'mdl::std::modf(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float3>' (SDTypeArray)
				
		[381/783] 'mdl::std::modf(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float4>' (SDTypeArray)
				
		[382/783] 'mdl::std::modf(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double>' (SDTypeArray)
				
		[383/783] 'mdl::std::modf(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double2>' (SDTypeArray)
				
		[384/783] 'mdl::std::modf(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double3>' (SDTypeArray)
				
		[385/783] 'mdl::std::modf(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double4>' (SDTypeArray)
				
		[386/783] 'mdl::std::normalize(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[387/783] 'mdl::std::normalize(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[388/783] 'mdl::std::normalize(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[389/783] 'mdl::std::normalize(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[390/783] 'mdl::std::normalize(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[391/783] 'mdl::std::normalize(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[392/783] 'mdl::std::normalize(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[393/783] 'mdl::std::normalize(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[394/783] 'mdl::std::pow(int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[395/783] 'mdl::std::pow(int2,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'b' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[396/783] 'mdl::std::pow(int3,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'b' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[397/783] 'mdl::std::pow(int4,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'b' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[398/783] 'mdl::std::pow(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[399/783] 'mdl::std::pow(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[400/783] 'mdl::std::pow(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[401/783] 'mdl::std::pow(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[402/783] 'mdl::std::pow(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[403/783] 'mdl::std::pow(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[404/783] 'mdl::std::pow(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[405/783] 'mdl::std::pow(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[406/783] 'mdl::std::pow(int2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[407/783] 'mdl::std::pow(int3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[408/783] 'mdl::std::pow(int4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[409/783] 'mdl::std::pow(float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[410/783] 'mdl::std::pow(float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[411/783] 'mdl::std::pow(float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[412/783] 'mdl::std::pow(double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[413/783] 'mdl::std::pow(double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[414/783] 'mdl::std::pow(double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[415/783] 'mdl::std::pow(color,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[416/783] 'mdl::std::pow(color,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[417/783] 'mdl::std::radians(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[418/783] 'mdl::std::radians(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[419/783] 'mdl::std::radians(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[420/783] 'mdl::std::radians(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[421/783] 'mdl::std::radians(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[422/783] 'mdl::std::radians(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[423/783] 'mdl::std::radians(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[424/783] 'mdl::std::radians(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[425/783] 'mdl::std::round(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[426/783] 'mdl::std::round(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[427/783] 'mdl::std::round(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[428/783] 'mdl::std::round(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[429/783] 'mdl::std::round(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[430/783] 'mdl::std::round(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[431/783] 'mdl::std::round(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[432/783] 'mdl::std::round(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[433/783] 'mdl::std::rsqrt(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[434/783] 'mdl::std::rsqrt(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[435/783] 'mdl::std::rsqrt(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[436/783] 'mdl::std::rsqrt(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[437/783] 'mdl::std::rsqrt(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[438/783] 'mdl::std::rsqrt(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[439/783] 'mdl::std::rsqrt(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[440/783] 'mdl::std::rsqrt(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[441/783] 'mdl::std::rsqrt(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[442/783] 'mdl::std::saturate(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[443/783] 'mdl::std::saturate(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[444/783] 'mdl::std::saturate(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[445/783] 'mdl::std::saturate(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[446/783] 'mdl::std::saturate(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[447/783] 'mdl::std::saturate(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[448/783] 'mdl::std::saturate(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[449/783] 'mdl::std::saturate(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[450/783] 'mdl::std::saturate(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[451/783] 'mdl::std::sign(int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[452/783] 'mdl::std::sign(int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[453/783] 'mdl::std::sign(int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[454/783] 'mdl::std::sign(int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[455/783] 'mdl::std::sign(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[456/783] 'mdl::std::sign(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[457/783] 'mdl::std::sign(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[458/783] 'mdl::std::sign(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[459/783] 'mdl::std::sign(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[460/783] 'mdl::std::sign(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[461/783] 'mdl::std::sign(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[462/783] 'mdl::std::sign(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[463/783] 'mdl::std::sin(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[464/783] 'mdl::std::sin(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[465/783] 'mdl::std::sin(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[466/783] 'mdl::std::sin(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[467/783] 'mdl::std::sin(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[468/783] 'mdl::std::sin(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[469/783] 'mdl::std::sin(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[470/783] 'mdl::std::sin(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[471/783] 'mdl::std::sincos(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
		[472/783] 'mdl::std::sincos(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float2>' (SDTypeArray)
				
		[473/783] 'mdl::std::sincos(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float3>' (SDTypeArray)
				
		[474/783] 'mdl::std::sincos(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float4>' (SDTypeArray)
				
		[475/783] 'mdl::std::sincos(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double>' (SDTypeArray)
				
		[476/783] 'mdl::std::sincos(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double2>' (SDTypeArray)
				
		[477/783] 'mdl::std::sincos(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double3>' (SDTypeArray)
				
		[478/783] 'mdl::std::sincos(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double4>' (SDTypeArray)
				
		[479/783] 'mdl::std::smoothstep(float,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[480/783] 'mdl::std::smoothstep(float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'l' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[481/783] 'mdl::std::smoothstep(float3,float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'l' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[482/783] 'mdl::std::smoothstep(float4,float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'l' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[483/783] 'mdl::std::smoothstep(double,double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[484/783] 'mdl::std::smoothstep(double2,double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'l' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[485/783] 'mdl::std::smoothstep(double3,double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'l' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[486/783] 'mdl::std::smoothstep(double4,double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'l' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[487/783] 'mdl::std::smoothstep(float2,float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[488/783] 'mdl::std::smoothstep(float3,float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[489/783] 'mdl::std::smoothstep(float4,float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[490/783] 'mdl::std::smoothstep(double2,double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[491/783] 'mdl::std::smoothstep(double3,double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[492/783] 'mdl::std::smoothstep(double4,double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[493/783] 'mdl::std::sqrt(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[494/783] 'mdl::std::sqrt(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[495/783] 'mdl::std::sqrt(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[496/783] 'mdl::std::sqrt(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[497/783] 'mdl::std::sqrt(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[498/783] 'mdl::std::sqrt(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[499/783] 'mdl::std::sqrt(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[500/783] 'mdl::std::sqrt(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[501/783] 'mdl::std::sqrt(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[502/783] 'mdl::std::step(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[503/783] 'mdl::std::step(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[504/783] 'mdl::std::step(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[505/783] 'mdl::std::step(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[506/783] 'mdl::std::step(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[507/783] 'mdl::std::step(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[508/783] 'mdl::std::step(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[509/783] 'mdl::std::step(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[510/783] 'mdl::std::tan(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[511/783] 'mdl::std::tan(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[512/783] 'mdl::std::tan(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[513/783] 'mdl::std::tan(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[514/783] 'mdl::std::tan(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[515/783] 'mdl::std::tan(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[516/783] 'mdl::std::tan(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[517/783] 'mdl::std::tan(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[518/783] 'mdl::std::transpose(float2x2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[519/783] 'mdl::std::transpose(float3x2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[520/783] 'mdl::std::transpose(float2x3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[521/783] 'mdl::std::transpose(float3x3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[522/783] 'mdl::std::transpose(float2x4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[523/783] 'mdl::std::transpose(float4x2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[524/783] 'mdl::std::transpose(float4x3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[525/783] 'mdl::std::transpose(float3x4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[526/783] 'mdl::std::transpose(float4x4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[527/783] 'mdl::std::transpose(double2x2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[528/783] 'mdl::std::transpose(double3x2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[529/783] 'mdl::std::transpose(double2x3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[530/783] 'mdl::std::transpose(double3x3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[531/783] 'mdl::std::transpose(double2x4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[532/783] 'mdl::std::transpose(double4x2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[533/783] 'mdl::std::transpose(double4x3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[534/783] 'mdl::std::transpose(double3x4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[535/783] 'mdl::std::transpose(double4x4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[536/783] 'mdl::std::blackbody(float)'
			SDPropertyCategory = 'Input'
				'temperature' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[537/783] 'mdl::std::emission_color(float[N],float[N])'
			SDPropertyCategory = 'Input'
				'wavelengths' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				'amplitudes' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[538/783] 'mdl::std::emission_color(color)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[539/783] 'mdl::std::cosh(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[540/783] 'mdl::std::cosh(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[541/783] 'mdl::std::cosh(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[542/783] 'mdl::std::cosh(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[543/783] 'mdl::std::cosh(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[544/783] 'mdl::std::cosh(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[545/783] 'mdl::std::cosh(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[546/783] 'mdl::std::cosh(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[547/783] 'mdl::std::sinh(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[548/783] 'mdl::std::sinh(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[549/783] 'mdl::std::sinh(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[550/783] 'mdl::std::sinh(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[551/783] 'mdl::std::sinh(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[552/783] 'mdl::std::sinh(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[553/783] 'mdl::std::sinh(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[554/783] 'mdl::std::sinh(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[555/783] 'mdl::std::tanh(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[556/783] 'mdl::std::tanh(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[557/783] 'mdl::std::tanh(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[558/783] 'mdl::std::tanh(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[559/783] 'mdl::std::tanh(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[560/783] 'mdl::std::tanh(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[561/783] 'mdl::std::tanh(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[562/783] 'mdl::std::tanh(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[563/783] 'mdl::std::float_bits_to_int(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[564/783] 'mdl::std::int_bits_to_float(int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[565/783] 'mdl::std::DX(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[566/783] 'mdl::std::DX(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[567/783] 'mdl::std::DX(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[568/783] 'mdl::std::DX(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[569/783] 'mdl::std::DX(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[570/783] 'mdl::std::DX(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[571/783] 'mdl::std::DX(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[572/783] 'mdl::std::DX(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[573/783] 'mdl::std::DY(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[574/783] 'mdl::std::DY(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[575/783] 'mdl::std::DY(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[576/783] 'mdl::std::DY(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[577/783] 'mdl::std::DY(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[578/783] 'mdl::std::DY(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[579/783] 'mdl::std::DY(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[580/783] 'mdl::std::DY(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[581/783] 'mdl::std::width$1.3(texture_2d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[582/783] 'mdl::std::width$1.6(texture_2d,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[583/783] 'mdl::std::width(texture_2d,int2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[584/783] 'mdl::std::width$1.6(texture_3d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[585/783] 'mdl::std::width(texture_3d,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[586/783] 'mdl::std::width(texture_cube)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[587/783] 'mdl::std::height$1.3(texture_2d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[588/783] 'mdl::std::height$1.6(texture_2d,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[589/783] 'mdl::std::height(texture_2d,int2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[590/783] 'mdl::std::height$1.6(texture_3d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[591/783] 'mdl::std::height(texture_3d,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[592/783] 'mdl::std::height(texture_cube)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[593/783] 'mdl::std::depth$1.6(texture_3d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[594/783] 'mdl::std::depth(texture_3d,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[595/783] 'mdl::std::lookup_float$1.6(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[596/783] 'mdl::std::lookup_float(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[597/783] 'mdl::std::lookup_float$1.6(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[598/783] 'mdl::std::lookup_float(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[599/783] 'mdl::std::lookup_float(texture_cube,float3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[600/783] 'mdl::std::lookup_float(texture_ptex,int)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				'channel' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat) [Varying]
				
		[601/783] 'mdl::std::lookup_float2$1.6(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[602/783] 'mdl::std::lookup_float2(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[603/783] 'mdl::std::lookup_float2$1.6(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[604/783] 'mdl::std::lookup_float2(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[605/783] 'mdl::std::lookup_float2(texture_cube,float3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[606/783] 'mdl::std::lookup_float2(texture_ptex,int)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				'channel' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2) [Varying]
				
		[607/783] 'mdl::std::lookup_float3$1.6(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[608/783] 'mdl::std::lookup_float3(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[609/783] 'mdl::std::lookup_float3$1.6(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[610/783] 'mdl::std::lookup_float3(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[611/783] 'mdl::std::lookup_float3(texture_cube,float3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[612/783] 'mdl::std::lookup_float3(texture_ptex,int)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				'channel' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[613/783] 'mdl::std::lookup_float4$1.6(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[614/783] 'mdl::std::lookup_float4(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[615/783] 'mdl::std::lookup_float4$1.6(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[616/783] 'mdl::std::lookup_float4(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[617/783] 'mdl::std::lookup_float4(texture_cube,float3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[618/783] 'mdl::std::lookup_float4(texture_ptex,int)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				'channel' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4) [Varying]
				
		[619/783] 'mdl::std::lookup_color$1.6(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[620/783] 'mdl::std::lookup_color(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[621/783] 'mdl::std::lookup_color$1.6(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[622/783] 'mdl::std::lookup_color(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[623/783] 'mdl::std::lookup_color(texture_cube,float3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[624/783] 'mdl::std::lookup_color(texture_ptex,int)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				'channel' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				
		[625/783] 'mdl::std::texel_float$1.3(texture_2d,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[626/783] 'mdl::std::texel_float$1.6(texture_2d,int2,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[627/783] 'mdl::std::texel_float(texture_2d,int2,int2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[628/783] 'mdl::std::texel_float$1.6(texture_3d,int3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[629/783] 'mdl::std::texel_float(texture_3d,int3,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[630/783] 'mdl::std::texel_float2$1.3(texture_2d,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[631/783] 'mdl::std::texel_float2$1.6(texture_2d,int2,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[632/783] 'mdl::std::texel_float2(texture_2d,int2,int2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[633/783] 'mdl::std::texel_float2$1.6(texture_3d,int3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[634/783] 'mdl::std::texel_float2(texture_3d,int3,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[635/783] 'mdl::std::texel_float3$1.3(texture_2d,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[636/783] 'mdl::std::texel_float3$1.6(texture_2d,int2,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[637/783] 'mdl::std::texel_float3(texture_2d,int2,int2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[638/783] 'mdl::std::texel_float3$1.6(texture_3d,int3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[639/783] 'mdl::std::texel_float3(texture_3d,int3,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[640/783] 'mdl::std::texel_float4$1.3(texture_2d,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[641/783] 'mdl::std::texel_float4$1.6(texture_2d,int2,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[642/783] 'mdl::std::texel_float4(texture_2d,int2,int2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[643/783] 'mdl::std::texel_float4$1.6(texture_3d,int3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[644/783] 'mdl::std::texel_float4(texture_3d,int3,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[645/783] 'mdl::std::texel_color$1.3(texture_2d,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[646/783] 'mdl::std::texel_color$1.6(texture_2d,int2,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[647/783] 'mdl::std::texel_color(texture_2d,int2,int2,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[648/783] 'mdl::std::texel_color$1.6(texture_3d,int3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[649/783] 'mdl::std::texel_color(texture_3d,int3,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[650/783] 'mdl::std::texture_isvalid(texture_2d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[651/783] 'mdl::std::texture_isvalid(texture_3d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[652/783] 'mdl::std::texture_isvalid(texture_cube)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[653/783] 'mdl::std::texture_isvalid(texture_ptex)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[654/783] 'mdl::std::width_offset(texture_3d,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[655/783] 'mdl::std::height_offset(texture_3d,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[656/783] 'mdl::std::depth_offset(texture_3d,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[657/783] 'mdl::std::first_frame(texture_2d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[658/783] 'mdl::std::first_frame(texture_3d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[659/783] 'mdl::std::last_frame(texture_2d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[660/783] 'mdl::std::last_frame(texture_3d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[661/783] 'mdl::std::grid_to_object_space(texture_3d,float)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'frame' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[662/783] 'mdl::std::diffuse_reflection_bsdf(color,float,string)'
			SDPropertyCategory = 'Input'
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[663/783] 'mdl::std::diffuse_transmission_bsdf(color,string)'
			SDPropertyCategory = 'Input'
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[664/783] 'mdl::std::specular_bsdf(color,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[665/783] 'mdl::std::simple_glossy_bsdf$1.5(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___25) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[666/783] 'mdl::std::simple_glossy_bsdf(float,float,color,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'multiscatter_tint' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___26) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[667/783] 'mdl::std::backscattering_glossy_reflection_bsdf$1.5(float,float,color,float3,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___27) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[668/783] 'mdl::std::backscattering_glossy_reflection_bsdf(float,float,color,color,float3,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'multiscatter_tint' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___28) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[669/783] 'mdl::std::measured_bsdf(bsdf_measurement,float,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'measurement' [CONNECTABLE]
					Types:
						'mdl::bsdf_measurement' (SDMDLTypeBSDFMeasurementReference) [Uniform]
				'multiplier' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[670/783] 'mdl::std::microfacet_beckmann_smith_bsdf$1.5(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___29) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[671/783] 'mdl::std::microfacet_beckmann_smith_bsdf(float,float,color,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'multiscatter_tint' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___30) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[672/783] 'mdl::std::microfacet_ggx_smith_bsdf$1.5(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___31) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[673/783] 'mdl::std::microfacet_ggx_smith_bsdf(float,float,color,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'multiscatter_tint' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___32) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[674/783] 'mdl::std::microfacet_beckmann_vcavities_bsdf$1.5(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___33) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[675/783] 'mdl::std::microfacet_beckmann_vcavities_bsdf(float,float,color,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'multiscatter_tint' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___34) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[676/783] 'mdl::std::microfacet_ggx_vcavities_bsdf$1.5(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___35) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[677/783] 'mdl::std::microfacet_ggx_vcavities_bsdf(float,float,color,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'multiscatter_tint' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___36) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[678/783] 'mdl::std::ward_geisler_moroder_bsdf$1.5(float,float,color,float3,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___37) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[679/783] 'mdl::std::ward_geisler_moroder_bsdf(float,float,color,color,float3,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'multiscatter_tint' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___38) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[680/783] 'mdl::std::sheen_bsdf$1.6(float,color,color,string)'
			SDPropertyCategory = 'Input'
				'roughness' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'multiscatter_tint' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[681/783] 'mdl::std::sheen_bsdf(float,color,color,bsdf,string)'
			SDPropertyCategory = 'Input'
				'roughness' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'multiscatter_tint' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'multiscatter' = SDMDLValueCall(mdl::df::diffuse_reflection_bsdf(color,float,string)__default_call___39) [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[682/783] 'mdl::std::diffuse_edf(string)'
			SDPropertyCategory = 'Input'
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[683/783] 'mdl::std::spot_edf$1.0(float,bool,float3x3,string)'
			SDPropertyCategory = 'Input'
				'exponent' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'global_distribution' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'global_frame' = SDValueMatrix(matrix<float>[3][3](float(1),float(0),float(0),float(0),float(1),float(0),float(0),float(0),float(1))) [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[684/783] 'mdl::std::spot_edf(float,float,bool,float3x3,string)'
			SDPropertyCategory = 'Input'
				'exponent' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'spread' = SDValueFloat(float(3.14159274)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'global_distribution' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'global_frame' = SDValueMatrix(matrix<float>[3][3](float(1),float(0),float(0),float(0),float(1),float(0),float(0),float(0),float(1))) [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[685/783] 'mdl::std::measured_edf$1.0(light_profile,bool,float3x3,string)'
			SDPropertyCategory = 'Input'
				'profile' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference) [Uniform]
				'global_distribution' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'global_frame' = SDValueMatrix(matrix<float>[3][3](float(1),float(0),float(0),float(0),float(1),float(0),float(0),float(0),float(1))) [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[686/783] 'mdl::std::measured_edf$1.1(light_profile,float,bool,float3x3,string)'
			SDPropertyCategory = 'Input'
				'profile' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference) [Uniform]
				'multiplier' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'global_distribution' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'global_frame' = SDValueMatrix(matrix<float>[3][3](float(1),float(0),float(0),float(0),float(1),float(0),float(0),float(0),float(1))) [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[687/783] 'mdl::std::measured_edf(light_profile,float,bool,float3x3,float3,string)'
			SDPropertyCategory = 'Input'
				'profile' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference) [Uniform]
				'multiplier' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'global_distribution' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'global_frame' = SDValueMatrix(matrix<float>[3][3](float(1),float(0),float(0),float(0),float(1),float(0),float(0),float(0),float(1))) [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix) [Uniform]
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___40) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[688/783] 'mdl::std::anisotropic_vdf(float,string)'
			SDPropertyCategory = 'Input'
				'directional_bias' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[689/783] 'mdl::std::tint(color,bsdf)'
			SDPropertyCategory = 'Input'
				'tint' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'base' [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[690/783] 'mdl::std::tint(color,color,bsdf)'
			SDPropertyCategory = 'Input'
				'reflection_tint' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'transmission_tint' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'base' [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[691/783] 'mdl::std::tint$1.6(color,edf)'
			SDPropertyCategory = 'Input'
				'tint' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'base' [CONNECTABLE]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[692/783] 'mdl::std::tint(color,edf)'
			SDPropertyCategory = 'Input'
				'tint' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'base' [CONNECTABLE]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[693/783] 'mdl::std::tint(color,vdf)'
			SDPropertyCategory = 'Input'
				'tint' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'base' [CONNECTABLE]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[694/783] 'mdl::std::tint(color,hair_bsdf)'
			SDPropertyCategory = 'Input'
				'tint' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'base' [CONNECTABLE]
					Types:
						'mdl::hair_bsdf' (SDMDLTypeHairBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::hair_bsdf' (SDMDLTypeHairBSDF)
				
		[695/783] 'mdl::std::thin_film(float,color,bsdf)'
			SDPropertyCategory = 'Input'
				'thickness' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'ior' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'base' [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[696/783] 'mdl::std::directional_factor(color,color,float,bsdf)'
			SDPropertyCategory = 'Input'
				'normal_tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'grazing_tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'exponent' = SDValueFloat(float(5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[697/783] 'mdl::std::directional_factor(color,color,float,edf)'
			SDPropertyCategory = 'Input'
				'normal_tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'grazing_tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'exponent' = SDValueFloat(float(5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'base' = SDMDLValueEDF() [CONNECTABLE]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[698/783] 'mdl::std::bsdf_component.weight(::df::bsdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::bsdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[699/783] 'mdl::std::bsdf_component.component(::df::bsdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::bsdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[700/783] 'mdl::std::edf_component.weight(::df::edf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::edf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[701/783] 'mdl::std::edf_component.component(::df::edf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::edf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[702/783] 'mdl::std::vdf_component.weight(::df::vdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::vdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[703/783] 'mdl::std::vdf_component.component(::df::vdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::vdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[704/783] 'mdl::std::normalized_mix(::df::bsdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::bsdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[705/783] 'mdl::std::normalized_mix(::df::edf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::edf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[706/783] 'mdl::std::normalized_mix(::df::vdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::vdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[707/783] 'mdl::std::clamped_mix(::df::bsdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::bsdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[708/783] 'mdl::std::clamped_mix(::df::edf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::edf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[709/783] 'mdl::std::clamped_mix(::df::vdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::vdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[710/783] 'mdl::std::weighted_layer(float,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'weight' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'layer' [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___41) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[711/783] 'mdl::std::fresnel_layer$1.3(color,float,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'ior' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'weight' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___42) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[712/783] 'mdl::std::fresnel_layer(float,float,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'ior' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'weight' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___43) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[713/783] 'mdl::std::custom_curve_layer(float,float,float,float,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'normal_reflectivity' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'grazing_reflectivity' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'exponent' = SDValueFloat(float(5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'weight' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___44) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[714/783] 'mdl::std::measured_curve_layer(color[N],float,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'curve_values' [CONNECTABLE]
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				'weight' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___45) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[715/783] 'mdl::std::measured_curve_factor(color[N],bsdf)'
			SDPropertyCategory = 'Input'
				'curve_values' [CONNECTABLE]
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[716/783] 'mdl::std::light_profile_power(light_profile)'
			SDPropertyCategory = 'Input'
				'profile' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[717/783] 'mdl::std::light_profile_maximum(light_profile)'
			SDPropertyCategory = 'Input'
				'profile' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[718/783] 'mdl::std::light_profile_isvalid(light_profile)'
			SDPropertyCategory = 'Input'
				'profile' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[719/783] 'mdl::std::bsdf_measurement_isvalid(bsdf_measurement)'
			SDPropertyCategory = 'Input'
				'measurement' [CONNECTABLE]
					Types:
						'mdl::bsdf_measurement' (SDMDLTypeBSDFMeasurementReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[720/783] 'mdl::std::color_bsdf_component.weight(::df::color_bsdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::color_bsdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[721/783] 'mdl::std::color_bsdf_component.component(::df::color_bsdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::color_bsdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[722/783] 'mdl::std::color_edf_component.weight(::df::color_edf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::color_edf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[723/783] 'mdl::std::color_edf_component.component(::df::color_edf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::color_edf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[724/783] 'mdl::std::color_vdf_component.weight(::df::color_vdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::color_vdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				
		[725/783] 'mdl::std::color_vdf_component.component(::df::color_vdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::color_vdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[726/783] 'mdl::std::color_normalized_mix(::df::color_bsdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_bsdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[727/783] 'mdl::std::color_normalized_mix(::df::color_edf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_edf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[728/783] 'mdl::std::color_normalized_mix(::df::color_vdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_vdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[729/783] 'mdl::std::color_clamped_mix(::df::color_bsdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_bsdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[730/783] 'mdl::std::color_clamped_mix(::df::color_edf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_edf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[731/783] 'mdl::std::color_clamped_mix(::df::color_vdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_vdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[732/783] 'mdl::std::color_weighted_layer(color,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'weight' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'layer' [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___46) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[733/783] 'mdl::std::color_fresnel_layer(color,color,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'ior' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'weight' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___47) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[734/783] 'mdl::std::color_custom_curve_layer(color,color,float,color,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'normal_reflectivity' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'grazing_reflectivity' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'exponent' = SDValueFloat(float(5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'weight' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___48) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[735/783] 'mdl::std::color_measured_curve_layer(color[N],color,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'curve_values' [CONNECTABLE]
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				'weight' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___49) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[736/783] 'mdl::std::fresnel_factor(color,color,bsdf)'
			SDPropertyCategory = 'Input'
				'ior' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'extinction_coefficient' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[737/783] 'mdl::std::measured_factor(texture_2d,bsdf)'
			SDPropertyCategory = 'Input'
				'values' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[738/783] 'mdl::std::chiang_hair_bsdf(float,color,float2,float2,float2,float,color,float,string)'
			SDPropertyCategory = 'Input'
				'diffuse_reflection_weight' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'diffuse_reflection_tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness_R' = SDValueFloat2(float2(0,0)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'roughness_TT' = SDMDLValueParameterReference(2) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'roughness_TRT' = SDMDLValueParameterReference(3) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'cuticle_angle' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'absorption_coefficient' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'ior' = SDValueFloat(float(1.54999995)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::hair_bsdf' (SDMDLTypeHairBSDF)
				
		[739/783] 'mdl::std::unbounded_mix(::df::bsdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::bsdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[740/783] 'mdl::std::unbounded_mix(::df::edf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::edf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[741/783] 'mdl::std::unbounded_mix(::df::vdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::vdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[742/783] 'mdl::std::color_unbounded_mix(::df::color_bsdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_bsdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[743/783] 'mdl::std::color_unbounded_mix(::df::color_edf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_edf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[744/783] 'mdl::std::color_unbounded_mix(::df::color_vdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_vdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[745/783] 'mdl::std::data_isvalid(string)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[746/783] 'mdl::std::data_lookup_int(string,int)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt) [Varying]
				
		[747/783] 'mdl::std::data_lookup_uniform_int(string,int)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt) [Uniform]
				
		[748/783] 'mdl::std::data_lookup_int2(string,int2)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2) [Varying]
				
		[749/783] 'mdl::std::data_lookup_uniform_int2(string,int2)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2) [Uniform]
				
		[750/783] 'mdl::std::data_lookup_int3(string,int3)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueInt3(int3(0,0,0)) [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3) [Varying]
				
		[751/783] 'mdl::std::data_lookup_uniform_int3(string,int3)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueInt3(int3(0,0,0)) [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3) [Uniform]
				
		[752/783] 'mdl::std::data_lookup_int4(string,int4)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueInt4(int4(0,0,0,0)) [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4) [Varying]
				
		[753/783] 'mdl::std::data_lookup_uniform_int4(string,int4)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueInt4(int4(0,0,0,0)) [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4) [Uniform]
				
		[754/783] 'mdl::std::data_lookup_float(string,float)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat) [Varying]
				
		[755/783] 'mdl::std::data_lookup_uniform_float(string,float)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat) [Uniform]
				
		[756/783] 'mdl::std::data_lookup_float2(string,float2)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueFloat2(float2(0,0)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2) [Varying]
				
		[757/783] 'mdl::std::data_lookup_uniform_float2(string,float2)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueFloat2(float2(0,0)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
		[758/783] 'mdl::std::data_lookup_float3(string,float3)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[759/783] 'mdl::std::data_lookup_uniform_float3(string,float3)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				
		[760/783] 'mdl::std::data_lookup_float4(string,float4)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueFloat4(float4(0,0,0,0)) [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4) [Varying]
				
		[761/783] 'mdl::std::data_lookup_uniform_float4(string,float4)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueFloat4(float4(0,0,0,0)) [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4) [Uniform]
				
		[762/783] 'mdl::std::data_lookup_color(string,color)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				
		[763/783] 'mdl::std::data_lookup_uniform_color(string,color)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'default_value' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				
		[764/783] 'mdl::std::breakpoint()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[765/783] 'mdl::std::assert(bool,string,string,string,int)'
			SDPropertyCategory = 'Input'
				'condition' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'reason' [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				'funcname' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				'filename' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				'line' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[766/783] 'mdl::std::print(bool)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[767/783] 'mdl::std::print(bool2)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[768/783] 'mdl::std::print(bool3)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[769/783] 'mdl::std::print(bool4)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[770/783] 'mdl::std::print(int)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[771/783] 'mdl::std::print(int2)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[772/783] 'mdl::std::print(int3)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[773/783] 'mdl::std::print(int4)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[774/783] 'mdl::std::print(float)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[775/783] 'mdl::std::print(float2)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[776/783] 'mdl::std::print(float3)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[777/783] 'mdl::std::print(float4)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[778/783] 'mdl::std::print(double)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[779/783] 'mdl::std::print(double2)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[780/783] 'mdl::std::print(double3)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[781/783] 'mdl::std::print(double4)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[782/783] 'mdl::std::print(color)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[783/783] 'mdl::std::print(string)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
[34/37] 'mdl::base' (SDMDLModule)
	Definitions:
		[1/71] 'mdl::base::projection_mode(::base::projection_mode)'
			Description: 'Methods for texture projection'
			SDPropertyCategory = 'Input'
				'v' = SDValueEnum("mdl::base::projection_mode",1) [CONNECTABLE]
					Types:
						'mdl::base::projection_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::projection_mode' (SDTypeEnum)
				
		[2/71] 'mdl::base::int(::base::projection_mode)'
			Description: 'Methods for texture projection'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::base::projection_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[3/71] 'mdl::base::color_layer_mode(::base::color_layer_mode)'
			Description: 'Texture combination modes between two layers. The two layers are modified in the manner described by the modes, and the result is blended with the bottom layer based on a weighting factor.'
			SDPropertyCategory = 'Input'
				'v' = SDValueEnum("mdl::base::color_layer_mode",0) [CONNECTABLE]
					Types:
						'mdl::base::color_layer_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::color_layer_mode' (SDTypeEnum)
				
		[4/71] 'mdl::base::int(::base::color_layer_mode)'
			Description: 'Texture combination modes between two layers. The two layers are modified in the manner described by the modes, and the result is blended with the bottom layer based on a weighting factor.'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::base::color_layer_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[5/71] 'mdl::base::texture_coordinate_system(::base::texture_coordinate_system)'
			Description: 'Coordinate system selection for textures'
			SDPropertyCategory = 'Input'
				'v' = SDValueEnum("mdl::base::texture_coordinate_system",0) [CONNECTABLE]
					Types:
						'mdl::base::texture_coordinate_system' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_coordinate_system' (SDTypeEnum)
				
		[6/71] 'mdl::base::int(::base::texture_coordinate_system)'
			Description: 'Coordinate system selection for textures'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::base::texture_coordinate_system' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[7/71] 'mdl::base::mono_mode(::base::mono_mode)'
			Description: 'Modes for the creation of a gray-scale value from a color'
			SDPropertyCategory = 'Input'
				'v' = SDValueEnum("mdl::base::mono_mode",0) [CONNECTABLE]
					Types:
						'mdl::base::mono_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::mono_mode' (SDTypeEnum)
				
		[8/71] 'mdl::base::int(::base::mono_mode)'
			Description: 'Modes for the creation of a gray-scale value from a color'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::base::mono_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[9/71] 'mdl::base::gradient_interpolation_mode(::base::gradient_interpolation_mode)'
			Description: 'Modes for interpolating between the different colors in a gradient texture'
			SDPropertyCategory = 'Input'
				'v' = SDValueEnum("mdl::base::gradient_interpolation_mode",0) [CONNECTABLE]
					Types:
						'mdl::base::gradient_interpolation_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::gradient_interpolation_mode' (SDTypeEnum)
				
		[10/71] 'mdl::base::int(::base::gradient_interpolation_mode)'
			Description: 'Modes for interpolating between the different colors in a gradient texture'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::base::gradient_interpolation_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[11/71] 'mdl::base::gradient_mode(::base::gradient_mode)'
			Description: 'Modes for generating the gradient position based on input uv coordinates'
			SDPropertyCategory = 'Input'
				'v' = SDValueEnum("mdl::base::gradient_mode",0) [CONNECTABLE]
					Types:
						'mdl::base::gradient_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::gradient_mode' (SDTypeEnum)
				
		[12/71] 'mdl::base::int(::base::gradient_mode)'
			Description: 'Modes for generating the gradient position based on input uv coordinates'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::base::gradient_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[13/71] 'mdl::base::texture_coordinate_info(::base::texture_coordinate_info)'
			Description: 'The texture coordinate, tangent_u and tangent_v needed by bump mapping and anisotropy'
			SDPropertyCategory = 'Input'
				'other' [CONNECTABLE]
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				
		[14/71] 'mdl::base::texture_coordinate_info(float3,float3,float3)'
			Description: 'The texture coordinate, tangent_u and tangent_v needed by bump mapping and anisotropy'
			SDPropertyCategory = 'Input'
				'position' = SDMDLValueCall(mdl::state::texture_coordinate(int)__default_call___67) [CONNECTABLE]
					Description: 'Texture coordinate'
					Types:
						'float3' (SDTypeFloat3)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___68) [CONNECTABLE]
					Description: 'Tangent in u direction'
					Types:
						'float3' (SDTypeFloat3)
				'tangent_v' = SDMDLValueCall(mdl::state::texture_tangent_v(int)__default_call___69) [CONNECTABLE]
					Description: 'Tangent in v direction'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				
		[15/71] 'mdl::base::texture_coordinate_info.position(::base::texture_coordinate_info)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[16/71] 'mdl::base::texture_coordinate_info.tangent_u(::base::texture_coordinate_info)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[17/71] 'mdl::base::texture_coordinate_info.tangent_v(::base::texture_coordinate_info)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[18/71] 'mdl::base::color_layer(::base::color_layer)'
			Description: 'Single texture layer for use in blending'
			SDPropertyCategory = 'Input'
				'other' [CONNECTABLE]
					Types:
						'mdl::base::color_layer' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::color_layer' (SDTypeStruct)
				
		[19/71] 'mdl::base::color_layer(color,float,::base::color_layer_mode)'
			Description: 'Single texture layer for use in blending'
			SDPropertyCategory = 'Input'
				'layer_color' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Description: 'The color to be combined with a layer "below" this layer'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'weight' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Scale factor for blending this color with the color produced by the mode value (the "lower layer")'
					Types:
						'float' (SDTypeFloat)
				'mode' = SDValueEnum("mdl::base::color_layer_mode",0) [CONNECTABLE]
					Description: 'Method for combining this layer and the lower layer'
					Types:
						'mdl::base::color_layer_mode' (SDTypeEnum) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::color_layer' (SDTypeStruct)
				
		[20/71] 'mdl::base::color_layer.layer_color(::base::color_layer)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::color_layer' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[21/71] 'mdl::base::color_layer.weight(::base::color_layer)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::color_layer' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[22/71] 'mdl::base::color_layer.mode(::base::color_layer)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::color_layer' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::color_layer_mode' (SDTypeEnum) [Uniform]
				
		[23/71] 'mdl::base::texture_return(::base::texture_return)'
			Description: 'Type of the return value from texturing functions'
			SDPropertyCategory = 'Input'
				'other' [CONNECTABLE]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[24/71] 'mdl::base::texture_return(color,float)'
			Description: 'Type of the return value from texturing functions'
			SDPropertyCategory = 'Input'
				'tint' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Description: 'Return value suitable to for driving input parameters of type color'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'mono' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Gray-scale return value suitable for driving input parameters of type float'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[25/71] 'mdl::base::texture_return.tint(::base::texture_return)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[26/71] 'mdl::base::texture_return.mono(::base::texture_return)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[27/71] 'mdl::base::anisotropy_return(::base::anisotropy_return)'
			Description: 'Type of the return value from functions driving roughness and anisotropy parameters of glossy BSDF'
			SDPropertyCategory = 'Input'
				'other' [CONNECTABLE]
					Types:
						'mdl::base::anisotropy_return' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::anisotropy_return' (SDTypeStruct)
				
		[28/71] 'mdl::base::anisotropy_return(float,float,float3)'
			Description: 'Type of the return value from functions driving roughness and anisotropy parameters of glossy BSDF'
			SDPropertyCategory = 'Input'
				'roughness_u' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Roughness in u direction'
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Roughness in v direction'
					Types:
						'float' (SDTypeFloat)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___70) [CONNECTABLE]
					Description: 'Tangent in u direction'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::anisotropy_return' (SDTypeStruct)
				
		[29/71] 'mdl::base::anisotropy_return.roughness_u(::base::anisotropy_return)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::anisotropy_return' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[30/71] 'mdl::base::anisotropy_return.roughness_v(::base::anisotropy_return)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::anisotropy_return' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[31/71] 'mdl::base::anisotropy_return.tangent_u(::base::anisotropy_return)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::anisotropy_return' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[32/71] 'mdl::base::coordinate_projection(::base::texture_coordinate_system,int,::base::projection_mode,float4x4)'
			Description: 'Constructs a texturing coordinate system based on a variety of projection functions.'
			SDPropertyCategory = 'Input'
				'coordinate_system' = SDValueEnum("mdl::base::texture_coordinate_system",2) [CONNECTABLE]
					Description: 'The projection can be done based on world, object or any uvw space.'
					Types:
						'mdl::base::texture_coordinate_system' (SDTypeEnum) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Description: 'if texture_coordinate_uvw, index into the appropriate one'
					Types:
						'int' (SDTypeInt) [Uniform]
				'projection_type' = SDValueEnum("mdl::base::projection_mode",5) [CONNECTABLE]
					Description: 'Projection method to be used to generate the coordinates'
					Types:
						'mdl::base::projection_mode' (SDTypeEnum) [Uniform]
				'projection_transform' = SDValueMatrix(matrix<float>[4][4](float(1),float(0),float(0),float(0),float(0),float(1),float(0),float(0),float(0),float(0),float(1),float(0),float(0),float(0),float(0),float(1))) [CONNECTABLE]
					Description: 'Transformation of the projector in world space'
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct) [Varying]
				
		[33/71] 'mdl::base::coordinate_source(::base::texture_coordinate_system,int)'
			Description: 'Access to world coordinates, object coordinates or specifically defined texture spaces'
			SDPropertyCategory = 'Input'
				'coordinate_system' = SDValueEnum("mdl::base::texture_coordinate_system",0) [CONNECTABLE]
					Description: 'The function can source coordinates in uvw, world or object space'
					Types:
						'mdl::base::texture_coordinate_system' (SDTypeEnum) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Description: 'if texture_coordinate_uvw, index into the appropriate one'
					Types:
						'int' (SDTypeInt) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct) [Varying]
				
		[34/71] 'mdl::base::transform_coordinate(float4x4,::base::texture_coordinate_info)'
			Description: 'Transform a texture coordinate by a matrix'
			SDPropertyCategory = 'Input'
				'transform' [CONNECTABLE]
					Description: 'A transformation to be applied to the source coordinates. rotation_translation_scale() is a suggested means to compute the transformation matrix'
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix) [Uniform]
				'coordinate' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___74) [CONNECTABLE]
					Description: 'Coordinate, typically sourced from coordinate_source or coordinate_projection'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				
		[35/71] 'mdl::base::rotation_translation_scale(float3,float3,float3)'
			Description: 'Construct transformation matrix from Euler rotation, translation and scale'
			SDPropertyCategory = 'Input'
				'rotation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Description: 'Rotation applied to every UVW coordinate'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'translation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Description: 'Offset applied to every UVW coordinate'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'scaling' = SDValueFloat3(float3(1,1,1)) [CONNECTABLE]
					Description: 'Scale applied to every UVW coordinate'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix) [Uniform]
				
		[36/71] 'mdl::base::file_texture(texture_2d,color,color,::base::mono_mode,::base::texture_coordinate_info,float2,float2,::tex::wrap_mode,::tex::wrap_mode,bool,float,int2,::tex::wrap_mode,float)'
			Description: 'General texturing function for 2D bitmap texture stored in a file'
			SDPropertyCategory = 'Input'
				'texture' [CONNECTABLE]
					Description: 'The input texture'
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'color_offset' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Description: 'Fixed offset value added to all texture values'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color_scale' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Description: 'Fixed scaling factor applied to all texture values'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'mono_source' = SDValueEnum("mdl::base::mono_mode",0) [CONNECTABLE]
					Description: 'Defines how mono_result is computed'
					Types:
						'mdl::base::mono_mode' (SDTypeEnum) [Uniform]
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___78) [CONNECTABLE]
					Description: 'Custom value for texture coordinate'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Description: 'Restricts the texture access to sub-domain of the texture in the u direction'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Description: 'Restricts the texture access to sub-domain of the texture in the v direction'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Description: 'Wrapping mode in the u direction'
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Description: 'Wrapping mode in the v direction'
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'clip' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Deprecated, use wrap_mode=tex::wrap_clip. Defines wrap_clamp behavior. If true, a lookup outside [0,1] results in black/transparent'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'animation_start_time' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'When to start playing first frame of the animation '
					Types:
						'float' (SDTypeFloat) [Uniform]
				'animation_crop' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Description: 'If the texture is an animation, the range of frames to be played can be specified.'
					Types:
						'int2' (SDTypeInt2) [Uniform]
				'animation_wrap' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Description: 'Defines what to do outside of regular animation time'
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'animation_fps' = SDValueFloat(float(30)) [CONNECTABLE]
					Description: 'Framerate to use for animation playback'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct) [Varying]
				
		[37/71] 'mdl::base::architectural_gloss_to_rough(float)'
			Description: 'Convert glossiness parameter to roughness parameter, semantics according to the Iray v2 Arch+Design implementation'
			SDPropertyCategory = 'Input'
				'glossiness' [CONNECTABLE]
					Description: 'Glossiness according to mia material semantic'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[38/71] 'mdl::base::gloss_to_rough(float)'
			Description: 'Convert glossiness parameter to roughness parameter through simple inversion'
			SDPropertyCategory = 'Input'
				'glossiness' [CONNECTABLE]
					Description: 'Inverse of roughness'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[39/71] 'mdl::base::abbe_number_ior(float,float)'
			Description: 'Calculate spectral index of refraction'
			SDPropertyCategory = 'Input'
				'ior' = SDValueFloat(float(1.5)) [CONNECTABLE]
					Description: 'Index of refraction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'abbe_number' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Dispersion in relation to index of refraction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[40/71] 'mdl::base::sellmeier_coefficients_ior(float3,float3)'
			Description: 'Calculate spectral index of refraction using Sellmeier coefficients'
			SDPropertyCategory = 'Input'
				'sellmeier_B' = SDValueFloat3(float3(1.03999996,0.230000004,1.00999999)) [CONNECTABLE]
					Description: 'Sellmeier coefficient B'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'sellmeier_C' = SDValueFloat3(float3(0.00600000005,0.200000003,103.559998)) [CONNECTABLE]
					Description: 'Sellmeier coefficient C (in um^2)'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[41/71] 'mdl::base::environment_spherical(texture_2d)'
			Description: 'Environment function implementing a spherical environment'
			SDPropertyCategory = 'Input'
				'texture' [CONNECTABLE]
					Description: 'Spherical environment'
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct) [Varying]
				
		[42/71] 'mdl::base::sun_and_sky(bool,float,color,float,float,float,float,float,color,color,float3,float,float,float,bool,int,bool)'
			Description: 'Sun and sky model environment. (For documentation of the parameters, please see the official documentation of the matching mental ray shader.)'
			SDPropertyCategory = 'Input'
				'on' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'multiplier' = SDValueFloat(float(0.0250000004)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'rgb_unit_conversion' = SDValueColorRGB(ColorRGB(0.000666667009,0.000666667009,0.000666667009)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'haze' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'redblueshift' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'saturation' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'horizon_height' = SDValueFloat(float(0.00100000005)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'horizon_blur' = SDValueFloat(float(0.100000001)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'ground_color' = SDValueColorRGB(ColorRGB(0.400000006,0.400000006,0.400000006)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'night_color' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'sun_direction' = SDValueFloat3(float3(0,0.229270995,0.418882012)) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'sun_disk_intensity' = SDValueFloat(float(0.00999999978)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'sun_disk_scale' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'sun_glow_intensity' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'y_is_up' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'flags' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt) [Uniform]
				'physically_scaled_sun' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct) [Varying]
				
		[43/71] 'mdl::base::perez_sun_and_sky(float,float,float3,color,float,bool,float,float,float)'
			Description: 'Perez all weather sun and sky model.'
			SDPropertyCategory = 'Input'
				'direct_normal_irradiance' = SDValueFloat(float(500)) [CONNECTABLE]
					Description: 'Direct sun irradiance in W / m^2'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'diffuse_horizontal_irradiance' = SDValueFloat(float(50)) [CONNECTABLE]
					Description: 'Diffuse horizontal sky irradiance in W / m^2 (excluding sun)'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'sun_direction' = SDValueFloat3(float3(0,0.229270995,0.418882012)) [CONNECTABLE]
					Description: 'Sun direction'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'ground_color' = SDValueColorRGB(ColorRGB(0.200000003,0.200000003,0.200000003)) [CONNECTABLE]
					Description: 'Ground reflectivity'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'horizon_blur' = SDValueFloat(float(0.100000001)) [CONNECTABLE]
					Description: 'Blur between ground and sky at the horizon'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'y_is_up' = SDValueBool(bool(true)) [CONNECTABLE]
					Description: 'Sun direction is y-up coordinates'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'julian_date' = SDValueFloat(float(180)) [CONNECTABLE]
					Description: 'Day in year'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'dew_point' = SDValueFloat(float(11)) [CONNECTABLE]
					Description: 'Dew point in degree Celsius'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'haze' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Description: 'Haze value to compute chromaticity of the sky (in analogy to base::sun_and_sky)'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				
		[44/71] 'mdl::base::file_bump_texture(texture_2d,float,::base::mono_mode,::base::texture_coordinate_info,float2,float2,::tex::wrap_mode,::tex::wrap_mode,float3,bool,bool,float,int2,::tex::wrap_mode,float)'
			Description: 'Computes a normal based on a heightfield-style bump texture'
			SDPropertyCategory = 'Input'
				'texture' [CONNECTABLE]
					Description: 'The input texture'
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Determines the degree of bumpiness'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'bump_source' = SDValueEnum("mdl::base::mono_mode",1) [CONNECTABLE]
					Description: 'Defines what value to use for computing the slope of the bump'
					Types:
						'mdl::base::mono_mode' (SDTypeEnum) [Uniform]
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___82) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Description: 'Restricts the texture access to sub-domain of the texture in the u direction'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Description: 'Restricts the texture access to sub-domain of the texture in the v direction'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Description: 'Wrapping mode in the u direction'
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Description: 'Wrapping mode in the v direction'
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___83) [CONNECTABLE]
					Description: 'Base normal for the bump mapping.'
					Types:
						'float3' (SDTypeFloat3)
				'clip' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'deprecated, usewrap_mode=tex::wrap_clip. Defines wrap_clamp behavior. If true, lookup outside [0,1] results in no bump'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'b_spline' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Use b-Spline interpolation for smooth result'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'animation_start_time' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'When to start playing first frame of the animation '
					Types:
						'float' (SDTypeFloat) [Uniform]
				'animation_crop' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Description: 'If the texture is an animation, the range of frames to be played can be specified.'
					Types:
						'int2' (SDTypeInt2) [Uniform]
				'animation_wrap' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Description: 'Defines what to do outside of regular animation time'
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'animation_fps' = SDValueFloat(float(30)) [CONNECTABLE]
					Description: 'Framerate to use for animation playback'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[45/71] 'mdl::base::tangent_space_normal_texture(texture_2d,float,bool,bool,::base::texture_coordinate_info,float2,float2,::tex::wrap_mode,::tex::wrap_mode,bool,float,float,float,int2,::tex::wrap_mode,float)'
			Description: 'Interprets the color values of a bitmap as a vector in tangent space'
			SDPropertyCategory = 'Input'
				'texture' [CONNECTABLE]
					Description: 'The input texture'
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Determines the degree of bumpiness'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'flip_tangent_u' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Can be used to fix mismatches between the object's tangent space and the normal map's tangent space'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'flip_tangent_v' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Can be used to fix mismatches between the object's tangent space and the normal map's tangent space'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___87) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Description: 'Restricts the texture access to sub-domain of the texture in the u direction'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Description: 'Restricts the texture access to sub-domain of the texture in the v direction'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Description: 'Wrapping mode in the u direction'
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Description: 'Wrapping mode in the v direction'
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'clip' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'deprecated, usewrap_mode=tex::wrap_clip. Defines wrap_clamp behavior. If true, lookup outside [0,1] results in no bump'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Scales the value red from the texture file. Can be used to adapt to different normal map formats'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'offset' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Offset applied to the value red from the texture file. Can be used to adapt to different normal map formats'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'animation_start_time' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'When to start playing first frame of the animation '
					Types:
						'float' (SDTypeFloat) [Uniform]
				'animation_crop' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Description: 'If the texture is an animation, the range of frames to be played can be specified.'
					Types:
						'int2' (SDTypeInt2) [Uniform]
				'animation_wrap' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Description: 'Defines what to do outside of regular animation time'
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'animation_fps' = SDValueFloat(float(30)) [CONNECTABLE]
					Description: 'Framerate to use for animation playback'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[46/71] 'mdl::base::blend_color_layers(::base::color_layer[P],color,::base::mono_mode)'
			Description: 'Texture layering functionality similar to the functionality known from painting programs '
			SDPropertyCategory = 'Input'
				'layers' [CONNECTABLE]
					Description: 'Array of structs describing the layers to blend'
					Types:
						'SDTypeArray<mdl::base::color_layer>' (SDTypeArray)
				'base' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Description: 'Color of initial layer'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'mono_source' = SDValueEnum("mdl::base::mono_mode",1) [CONNECTABLE]
					Description: 'Defines how mono_result is computed'
					Types:
						'mdl::base::mono_mode' (SDTypeEnum) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[47/71] 'mdl::base::gradient3_texture(::base::gradient_mode,float[3],color[3],::base::gradient_interpolation_mode[3],::base::texture_coordinate_info,float)'
			Description: 'Gradient calculated from three colors at three positions'
			SDPropertyCategory = 'Input'
				'mode' = SDValueEnum("mdl::base::gradient_mode",0) [CONNECTABLE]
					Description: 'Mode of gradient calculation, describes shape of the gradient'
					Types:
						'mdl::base::gradient_mode' (SDTypeEnum) [Uniform]
				'gradient_positions' = SDValueArray(SDValueFloat(float(0)),SDValueFloat(float(0.5)),SDValueFloat(float(1))) [CONNECTABLE]
					Description: 'Position of the gradient colors'
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				'gradient_colors' = SDValueArray(SDValueColorRGB(ColorRGB(0,0,0)),SDValueColorRGB(ColorRGB(0.5,0.5,0.5)),SDValueColorRGB(ColorRGB(1,1,1))) [CONNECTABLE]
					Description: 'Colors at the positions'
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				'interpolation_modes' = SDValueArray(SDValueEnum("mdl::base::gradient_interpolation_mode",0),SDValueEnum("mdl::base::gradient_interpolation_mode",0),SDValueEnum("mdl::base::gradient_interpolation_mode",0)) [CONNECTABLE]
					Description: 'Interpolation mode between gradient colors'
					Types:
						'SDTypeArray<mdl::base::gradient_interpolation_mode>' (SDTypeArray)
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___91) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'distortion' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Distortion value to be added to the position inside the gradient'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[48/71] 'mdl::base::gradient3_bump_texture(::base::gradient_mode,float[3],color[3],::base::gradient_interpolation_mode[3],::base::texture_coordinate_info,float,float,float3)'
			Description: 'Gradient for bump mapping calculated from three colors at three positions'
			SDPropertyCategory = 'Input'
				'mode' = SDValueEnum("mdl::base::gradient_mode",0) [CONNECTABLE]
					Description: 'Mode of gradient calculation, describes shape of the gradient'
					Types:
						'mdl::base::gradient_mode' (SDTypeEnum) [Uniform]
				'gradient_positions' = SDValueArray(SDValueFloat(float(0)),SDValueFloat(float(0.5)),SDValueFloat(float(1))) [CONNECTABLE]
					Description: 'Position of the gradient colors'
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				'gradient_colors' = SDValueArray(SDValueColorRGB(ColorRGB(0,0,0)),SDValueColorRGB(ColorRGB(0.5,0.5,0.5)),SDValueColorRGB(ColorRGB(1,1,1))) [CONNECTABLE]
					Description: 'Colors at the positions'
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				'interpolation_modes' = SDValueArray(SDValueEnum("mdl::base::gradient_interpolation_mode",0),SDValueEnum("mdl::base::gradient_interpolation_mode",0),SDValueEnum("mdl::base::gradient_interpolation_mode",0)) [CONNECTABLE]
					Description: 'Interpolation mode between gradient colors'
					Types:
						'SDTypeArray<mdl::base::gradient_interpolation_mode>' (SDTypeArray)
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___95) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'distortion' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Distortion value to be added to the position inside the gradient'
					Types:
						'float' (SDTypeFloat)
				'scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Strength of the bump mapping effect'
					Types:
						'float' (SDTypeFloat)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___96) [CONNECTABLE]
					Description: 'Base normal for the bump mapping.'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[49/71] 'mdl::base::gradient3_recolor(float[3],color[3],::base::gradient_interpolation_mode[3],::base::mono_mode,float,float)'
			Description: 'Function mapping an arbitrary float value into a gradient. Can be used to re-color textures'
			SDPropertyCategory = 'Input'
				'gradient_positions' = SDValueArray(SDValueFloat(float(0)),SDValueFloat(float(0.5)),SDValueFloat(float(1))) [CONNECTABLE]
					Description: 'Position of the gradient colors'
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				'gradient_colors' = SDValueArray(SDValueColorRGB(ColorRGB(0,0,0)),SDValueColorRGB(ColorRGB(0.5,0.5,0.5)),SDValueColorRGB(ColorRGB(1,1,1))) [CONNECTABLE]
					Description: 'Colors at the positions'
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				'interpolation_modes' = SDValueArray(SDValueEnum("mdl::base::gradient_interpolation_mode",0),SDValueEnum("mdl::base::gradient_interpolation_mode",0),SDValueEnum("mdl::base::gradient_interpolation_mode",0)) [CONNECTABLE]
					Description: 'Mode of gradient calculations'
					Types:
						'SDTypeArray<mdl::base::gradient_interpolation_mode>' (SDTypeArray)
				'mono_source' = SDValueEnum("mdl::base::mono_mode",0) [CONNECTABLE]
					Description: 'deprecated, has no effect in gradient3 recolor'
					Types:
						'mdl::base::mono_mode' (SDTypeEnum) [Uniform]
				'distortion' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Distortion value to be added to the position inside the gradient'
					Types:
						'float' (SDTypeFloat)
				'position' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Value driving the gradient calculation'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[50/71] 'mdl::base::checker_texture(::base::texture_coordinate_info,color,color,float,float)'
			Description: '3D color checker pattern'
			SDPropertyCategory = 'Input'
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___100) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'color1' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Description: 'Color of the even tiles of the checker function'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color2' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Description: 'Color of the odd tiles of the checker function'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'blur' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Softens the border between tiles'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'checker_position' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Description: 'Ratio of division. Values other than .5 produce non square tiles'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[51/71] 'mdl::base::checker_bump_texture(::base::texture_coordinate_info,float,float,float,float3)'
			Description: '3D bump mapping checker pattern'
			SDPropertyCategory = 'Input'
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___104) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Strength of the bump mapping effect'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'blur' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Softens the border between tiles'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'checker_position' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Description: 'Ratio of division. Values other than .5 produce non square tiles'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___105) [CONNECTABLE]
					Description: 'Base normal for the bump mapping.'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[52/71] 'mdl::base::perlin_noise_texture(::base::texture_coordinate_info,color,color,float,bool,bool,float,int,bool,bool,float3,float,float,float)'
			Description: 'Color Perlin noise'
			SDPropertyCategory = 'Input'
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___109) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'color1' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Description: 'The Perlin noise function will blend between this color and "color2"'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color2' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Description: 'The Perlin noise function will blend between "color1" and this color'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'size' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Size of the biggest feature of the pattern'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'apply_marble' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Triggers a modification to make the pattern have a marble like appearance (cosine)'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'apply_dent' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Raises the output of the function to the power of 3'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'noise_phase' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Controls the 4th dimension of the function (can be time in animations)'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_levels' = SDValueInt(int(1)) [CONNECTABLE]
					Description: 'Number of octaves to of Perlin to sum up'
					Types:
						'int' (SDTypeInt) [Uniform]
				'absolute_noise' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'If set to true, the appearance of the pattern will be more "billowing" and "turbulent"'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'ridged_noise' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'If set to true, the appearance of the pattern will be more "electrical"'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'noise_distortion' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Description: 'Weight of additional noise turbulence'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'noise_threshold_high' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Noise values greater then "noise_threshold_high" are mapped to "color1"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_threshold_low' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Noise values greater then "noise_threshold_low" are mapped to "color2"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_bands' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'creates a "tree ring" like banding effect'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[53/71] 'mdl::base::perlin_noise_bump_texture(::base::texture_coordinate_info,float,float,bool,bool,float,int,bool,bool,float3,float,float,float,float3)'
			Description: 'Bump-mapping Perlin noise'
			SDPropertyCategory = 'Input'
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___113) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Strength of the bump mapping effect'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'size' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Size of the biggest feature of the pattern'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'apply_marble' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Triggers a modification to make the pattern have a marble like appearance (cosine)'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'apply_dent' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Raises the output of the function to the power of 3'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'noise_phase' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Controls the 4th dimension of the function'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_levels' = SDValueInt(int(1)) [CONNECTABLE]
					Description: 'Number of octaves to of Perlin to sum up'
					Types:
						'int' (SDTypeInt) [Uniform]
				'absolute_noise' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'If set to true, the appearance of the pattern will be more "billowing" and "turbulent"'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'ridged_noise' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'If set to true, the appearance of the pattern will be more "electrical"'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'noise_distortion' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Description: 'Weight of additional noise turbulence'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'noise_threshold_high' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Noise values greater then "noise_threshold_high" are mapped to the maximum bump height'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_threshold_low' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Noise values greater then "noise_threshold_low" are mapped to the minimum bump height'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_bands' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'creates a "tree ring" like banding effect'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___114) [CONNECTABLE]
					Description: 'Base normal for the bump mapping.'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[54/71] 'mdl::base::worley_noise_texture(::base::texture_coordinate_info,color,color,float,int,int,bool,bool,float3,float,float,float,float,float)'
			Description: 'Color Worley noise'
			SDPropertyCategory = 'Input'
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___118) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'color1' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Description: 'The Worley noise function will blend between this color and "color2"'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color2' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Description: 'The Worley noise function will blend between "color1" and this color'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'size' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Size of the biggest feature of the pattern'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'mode' = SDValueInt(int(0)) [CONNECTABLE]
					Description: 'Output function used to modify the noise result (0..11)'
					Types:
						'int' (SDTypeInt) [Uniform]
				'metric' = SDValueInt(int(0)) [CONNECTABLE]
					Description: 'Metric used in the noise function (0: Euclidean, 1: Manhattan, 2: Chebyshev)'
					Types:
						'int' (SDTypeInt) [Uniform]
				'apply_marble' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Triggers a modification to make the pattern have a marble like appearance (cosine)'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'apply_dent' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Raises the output of the function to the power of 3'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'noise_distortion' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Description: 'Weight of additional noise turbulence'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'noise_threshold_high' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Noise values greater then "noise_threshold_high" are mapped to "color1"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_threshold_low' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Noise values greater then "noise_threshold_low" are mapped to "color2"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_bands' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Creates a "tree ring" like banding effect'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'step_threshold' = SDValueFloat(float(0.200000003)) [CONNECTABLE]
					Description: 'Used only in mode 3'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'edge' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Smoothness of noise'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[55/71] 'mdl::base::worley_noise_bump_texture(::base::texture_coordinate_info,float,float,int,int,bool,bool,float3,float,float,float,float,float,float3)'
			Description: 'Bump-mapping Worley noise'
			SDPropertyCategory = 'Input'
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___122) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Strength of the bump mapping effect'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'size' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Size of the biggest feature of the pattern'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'mode' = SDValueInt(int(0)) [CONNECTABLE]
					Description: 'Output function used to modify the noise result (0..11)'
					Types:
						'int' (SDTypeInt) [Uniform]
				'metric' = SDValueInt(int(0)) [CONNECTABLE]
					Description: 'Metric used in the noise function (0: Euclidean, 1: Manhattan, 2: Chebyshev)'
					Types:
						'int' (SDTypeInt) [Uniform]
				'apply_marble' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Triggers a modification to make the pattern have a marble like appearance (cosine)'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'apply_dent' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Raises the output of the function to the power of 3'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'noise_distortion' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Description: 'Weight of additional noise turbulence'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'noise_threshold_high' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Noise values greater then "noise_threshold_high" are mapped to the maximum bump height'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_threshold_low' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Noise values greater then "noise_threshold_low" are mapped to the minimum bump height'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_bands' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Creates a "tree ring" like banding effect'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'step_threshold' = SDValueFloat(float(0.200000003)) [CONNECTABLE]
					Description: 'Used only in mode 3'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'edge' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Smoothness of noise'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___123) [CONNECTABLE]
					Description: 'Base normal for the bump mapping.'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[56/71] 'mdl::base::flow_noise_texture(::base::texture_coordinate_info,color,color,float,float,int,bool,float,float,float,float)'
			Description: 'Color Perlin flow noise'
			SDPropertyCategory = 'Input'
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___127) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'color1' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Description: 'The Flow noise function will blend between this color and "color2"'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color2' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Description: 'The Flow noise function will blend between "color1" and this color'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'size' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Size of the biggest feature of the pattern'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'phase' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Controls the 3rd dimension of the function'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'levels' = SDValueInt(int(1)) [CONNECTABLE]
					Description: 'Number of octaves to of Flow noise to sum up'
					Types:
						'int' (SDTypeInt) [Uniform]
				'absolute_noise' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'If set to true, the appearance of the pattern will be more "billowing" and "turbulent"'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'level_gain' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Description: 'If multiple levels are used, "level_gain" specifies a weighting factor for subsequent levels'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_scale' = SDValueFloat(float(2)) [CONNECTABLE]
					Description: 'If multiple levels are used, "level_scale" specifies a global scaling factor for subsequent levels'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_progressive_u_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'If multiple levels are used, "level_progressive_u_scale" specifies an additional scaling factor in the "u" direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_progressive_v_motion' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'If multiple levels are used, "level_progressive_v_motion" specifies an offset for subsequent levels in the "v" direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[57/71] 'mdl::base::flow_noise_bump_texture(::base::texture_coordinate_info,float,float,float,int,bool,float,float,float,float,float3)'
			Description: 'Bump-mapping flow noise'
			SDPropertyCategory = 'Input'
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___131) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Strength of the bump mapping effect'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'size' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Size of the biggest feature of the pattern'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'phase' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Controls the 4th dimension of the function'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'levels' = SDValueInt(int(1)) [CONNECTABLE]
					Description: 'Number of octaves to of Perlin to sum up'
					Types:
						'int' (SDTypeInt) [Uniform]
				'absolute_noise' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'If set to true, the appearance of the pattern will be more "billowing" and "turbulent"'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'level_gain' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Description: 'If multiple levels are used, "level_gain" specifies a weighting factor for subsequent levels'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_scale' = SDValueFloat(float(2)) [CONNECTABLE]
					Description: 'If multiple levels are used, "level_scale" specifies a global scaling factor for subsequent levels'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_progressive_u_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'If multiple levels are used, "level_progressive_u_scale" specifies an additional scaling factor in the "u" direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_progressive_v_motion' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'If multiple levels are used, "level_progressive_v_motion" specifies an offset for subsequent levels in the "v" direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___132) [CONNECTABLE]
					Description: 'Base normal for the bump mapping.'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[58/71] 'mdl::base::flake_noise_texture(::base::texture_coordinate_info,float,float,float,int,float,int)'
			Description: 'Flake noise'
			SDPropertyCategory = 'Input'
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___136) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'intensity' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Specifies the maximum reflectivity of any flake'
					Types:
						'float' (SDTypeFloat)
				'scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Size of the features of the pattern'
					Types:
						'float' (SDTypeFloat)
				'density' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Controls the amount of flakes in the substrate. The higher the number, the bigger is the space between flakes'
					Types:
						'float' (SDTypeFloat)
				'noise_type' = SDValueInt(int(0)) [CONNECTABLE]
					Description: 'Selects the noise type (0: Classic, 1: Worley)'
					Types:
						'int' (SDTypeInt) [Uniform]
				'maximum_size' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Controls the shape of flakes in the secondary noise mode (Worley)'
					Types:
						'float' (SDTypeFloat)
				'metric' = SDValueInt(int(0)) [CONNECTABLE]
					Description: 'Metric used in the secondary noise mode (Worley: 0: Euclidean, 1: Manhattan, 2: Chebyshev)'
					Types:
						'int' (SDTypeInt) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[59/71] 'mdl::base::flake_noise_bump_texture(::base::texture_coordinate_info,float,float,int,float,int,float3)'
			Description: 'Bump-mapping flake noise'
			SDPropertyCategory = 'Input'
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___140) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Size of the features of the pattern'
					Types:
						'float' (SDTypeFloat)
				'strength' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Controls the randomness of the flake orientation'
					Types:
						'float' (SDTypeFloat)
				'noise_type' = SDValueInt(int(0)) [CONNECTABLE]
					Description: 'Selects the noise type (0: Classic, 1: Worley)'
					Types:
						'int' (SDTypeInt) [Uniform]
				'maximum_size' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Controls the shape of flakes in the secondary noise mode (Worley)'
					Types:
						'float' (SDTypeFloat)
				'metric' = SDValueInt(int(0)) [CONNECTABLE]
					Description: 'Metric used in the secondary noise mode (Worley: 0: Euclidean, 1: Manhattan, 2: Chebyshev)'
					Types:
						'int' (SDTypeInt) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___141) [CONNECTABLE]
					Description: 'Base normal for the bump mapping.'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[60/71] 'mdl::base::tile_texture(::base::texture_coordinate_info,color,color,float,float,float,float,float,float,float,float,int,float,int,float,float,float)'
			Description: 'Color tiling generator'
			SDPropertyCategory = 'Input'
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___145) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'tile_color' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Description: 'Color of "bricks" in the function'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'grout_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Description: 'Color of "grout" between the "bricks" in the function'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'number_of_rows' = SDValueFloat(float(4)) [CONNECTABLE]
					Description: 'Number of tile rows in the 0-1 texturing domain'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'number_of_columns' = SDValueFloat(float(4)) [CONNECTABLE]
					Description: 'Number of tile columns in the 0-1 texturing domain'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'grout_width' = SDValueFloat(float(0.0199999996)) [CONNECTABLE]
					Description: 'Absolute width of vertical grout lines'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'grout_height' = SDValueFloat(float(0.0199999996)) [CONNECTABLE]
					Description: 'Absolute height of horizontal grout lines'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'grout_roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Amount of noise added to grout size'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'missing_tile_amount' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Number of tiles that will end up as grout, rather than as a tile ("holes"). Values are [0,1].'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'tile_brightness_variation' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Randomization factor to the brightness of the tile color'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'seed' = SDValueFloat(float(2.28399992)) [CONNECTABLE]
					Description: 'Seeding number for random number generator controlling tile randomization effects'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'special_row_index' = SDValueInt(int(1)) [CONNECTABLE]
					Description: 'Every nth row, width of tiles is modified. Set nth all to 1 to disable. Never set the nth row or column to 0.'
					Types:
						'int' (SDTypeInt) [Uniform]
				'special_row_width_factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Change of width for tiles identified through "special_row_index"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'special_column_index' = SDValueInt(int(1)) [CONNECTABLE]
					Description: 'Every nth column, height of tiles is modified. Set nth all to 1 to disable. Never set the nth row or column to 0.'
					Types:
						'int' (SDTypeInt) [Uniform]
				'special_column_height_factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Change of height for tiles identified through "special_column_index"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'odd_row_offset' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Description: 'Controls bonding pattern. 0 will result in a "stack bond", .5 a "running bond"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'random_row_offset' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Randomization factor for "odd_row_offset"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[61/71] 'mdl::base::tile_bump_texture(::base::texture_coordinate_info,float,float,float,float,float,float,float,float,float,int,float,int,float,float,float,float3)'
			Description: 'Bump-mapping tiling generator'
			SDPropertyCategory = 'Input'
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___149) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Strength of the bump mapping effect'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'number_of_rows' = SDValueFloat(float(4)) [CONNECTABLE]
					Description: 'Number of tile rows in the 0-1 texturing domain'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'number_of_columns' = SDValueFloat(float(4)) [CONNECTABLE]
					Description: 'Number of tile columns in the 0-1 texturing domain'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'grout_width' = SDValueFloat(float(0.0199999996)) [CONNECTABLE]
					Description: 'Absolute width of vertical grout lines'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'grout_height' = SDValueFloat(float(0.0199999996)) [CONNECTABLE]
					Description: 'Absolute height of horizontal grout lines'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'grout_roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Amount of noise added to grout size'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'missing_tile_amount' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Number of tiles that will end up as grout, rather than as a tile ("holes"). Values are [0,1].'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'tile_brightness_variation' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Randomization factor to the brightness of the tile color, will affect the bumpiness for that tile'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'seed' = SDValueFloat(float(2.28399992)) [CONNECTABLE]
					Description: 'Seeding number for random number generator controlling tile randomization effects'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'special_row_index' = SDValueInt(int(1)) [CONNECTABLE]
					Description: 'Every nth row, width of tiles is modified. Set nth all to 1 to disable. Never set the nth row or column to 0.'
					Types:
						'int' (SDTypeInt) [Uniform]
				'special_row_width_factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Change of width for tiles identified through "special_row_index"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'special_column_index' = SDValueInt(int(1)) [CONNECTABLE]
					Description: 'Every nth column, height of tiles is modified. Set nth all to 1 to disable. Never set the nth row or column to 0.'
					Types:
						'int' (SDTypeInt) [Uniform]
				'special_column_height_factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Change of height for tiles identified through "special_column_index"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'odd_row_offset' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Description: 'Controls bonding pattern. 0 will result in a "stack bond", .5 a "running bond"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'random_row_offset' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Randomization factor for "odd_row_offset"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___150) [CONNECTABLE]
					Description: 'Base normal for the bump mapping.'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[62/71] 'mdl::base::anisotropy_conversion(float,float,float,float3,bool)'
			Description: 'Convert old anisotropy controls into new ones'
			SDPropertyCategory = 'Input'
				'roughness' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Description: 'The base roughness value'
					Types:
						'float' (SDTypeFloat)
				'anisotropy' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'The anisotropy of the roughness'
					Types:
						'float' (SDTypeFloat)
				'anisotropy_rotation' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Rotation of direction of anisotropy, where 1 equals 360 degrees'
					Types:
						'float' (SDTypeFloat)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___151) [CONNECTABLE]
					Description: 'Tangent to align the anisotropy with. "coordinate_source" or "coordinate_projection" are possible sources'
					Types:
						'float3' (SDTypeFloat3)
				'mia_anisotropy_semantic' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'allows backwards compatibility with mia material'
					Types:
						'bool' (SDTypeBool) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::anisotropy_return' (SDTypeStruct) [Varying]
				
		[63/71] 'mdl::base::volume_coefficient(color,float)'
			Description: 'Compute a volume coefficient based on distance and value'
			SDPropertyCategory = 'Input'
				'tint' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Description: 'The basic color of the absorption'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'distance' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'The thickness of the material at which all but "tint" is absorbed'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[64/71] 'mdl::base::blend_normals(float3,float,float3,float)'
			Description: 'Blend two normals for sticker-like situations where a detail normal map is applied to a base normal map'
			SDPropertyCategory = 'Input'
				'base_normal' = SDMDLValueCall(mdl::state::normal()__default_call___152) [CONNECTABLE]
					Description: 'The base normal'
					Types:
						'float3' (SDTypeFloat3)
				'base_normal_weight' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Specifies the strength of the base normal using a linear blend between state::normal and "base_normal"'
					Types:
						'float' (SDTypeFloat)
				'detail_normal' = SDMDLValueCall(mdl::state::normal()__default_call___153) [CONNECTABLE]
					Description: 'The detail normal'
					Types:
						'float3' (SDTypeFloat3)
				'detail_normal_weight' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Specifies the strength of the detail normal using a linear blend between state::normal and "detail_normal"'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[65/71] 'mdl::base::volume_coefficients(::base::volume_coefficients)'
			SDPropertyCategory = 'Input'
				'other' [CONNECTABLE]
					Types:
						'mdl::base::volume_coefficients' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::volume_coefficients' (SDTypeStruct)
				
		[66/71] 'mdl::base::volume_coefficients()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::volume_coefficients' (SDTypeStruct)
				
		[67/71] 'mdl::base::volume_coefficients(color,color)'
			SDPropertyCategory = 'Input'
				'scattering_coefficient' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'absorption_coefficient' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::volume_coefficients' (SDTypeStruct)
				
		[68/71] 'mdl::base::volume_coefficients.scattering_coefficient(::base::volume_coefficients)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::volume_coefficients' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[69/71] 'mdl::base::volume_coefficients.absorption_coefficient(::base::volume_coefficients)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::volume_coefficients' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[70/71] 'mdl::base::lookup_volume_coefficients(texture_3d,color,color,color,color,float4x4,float,bool)'
			SDPropertyCategory = 'Input'
				'density' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'scattering_multiplier' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'absorption_multiplier' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'scattering_offset' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'absorption_offset' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'transform' = SDValueMatrix(matrix<float>[4][4](float(1),float(0),float(0),float(0),float(0),float(1),float(0),float(0),float(0),float(0),float(1),float(0),float(0),float(0),float(0),float(1))) [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix) [Uniform]
				'density_multiplier' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'density_relative_to_size' = SDValueBool(bool(false)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::volume_coefficients' (SDTypeStruct) [Varying]
				
		[71/71] 'mdl::base::blackbody_emission(float,float,float)'
			Description: 'Color of a black body emitter'
			SDPropertyCategory = 'Input'
				'temperature1' = SDValueFloat(float(6500)) [CONNECTABLE]
					Description: 'First correlated color temperature'
					Types:
						'float' (SDTypeFloat)
				'temperature2' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Description: 'Second correlated color temperature'
					Types:
						'float' (SDTypeFloat)
				'blend_value' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Blend value between first and second color temperature'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
	Types:
		[1/21] 'mdl::base::projection_mode'
			'mdl::base::projection_mode' (SDTypeEnum)
				int projection_cubic = SDValueInt(int(1))
				int projection_spherical = SDValueInt(int(2))
				int projection_cylindrical = SDValueInt(int(3))
				int projection_infinite_cylindrical = SDValueInt(int(4))
				int projection_planar = SDValueInt(int(5))
				int projection_spherical_normalized = SDValueInt(int(6))
				int projection_cylindrical_normalized = SDValueInt(int(7))
				int projection_infinite_cylindrical_normalized = SDValueInt(int(8))
				int projection_tri_planar = SDValueInt(int(9))
		[2/21] 'mdl::base::color_layer_mode'
			'mdl::base::color_layer_mode' (SDTypeEnum)
				int color_layer_blend = SDValueInt(int(0))
				int color_layer_add = SDValueInt(int(1))
				int color_layer_multiply = SDValueInt(int(2))
				int color_layer_screen = SDValueInt(int(3))
				int color_layer_overlay = SDValueInt(int(4))
				int color_layer_brightness = SDValueInt(int(5))
				int color_layer_color = SDValueInt(int(6))
				int color_layer_exclusion = SDValueInt(int(7))
				int color_layer_average = SDValueInt(int(8))
				int color_layer_lighten = SDValueInt(int(9))
				int color_layer_darken = SDValueInt(int(10))
				int color_layer_sub = SDValueInt(int(11))
				int color_layer_negation = SDValueInt(int(12))
				int color_layer_difference = SDValueInt(int(13))
				int color_layer_softlight = SDValueInt(int(14))
				int color_layer_colordodge = SDValueInt(int(15))
				int color_layer_reflect = SDValueInt(int(16))
				int color_layer_colorburn = SDValueInt(int(17))
				int color_layer_phoenix = SDValueInt(int(18))
				int color_layer_hardlight = SDValueInt(int(19))
				int color_layer_pinlight = SDValueInt(int(20))
				int color_layer_hardmix = SDValueInt(int(21))
				int color_layer_lineardodge = SDValueInt(int(22))
				int color_layer_linearburn = SDValueInt(int(23))
				int color_layer_spotlight = SDValueInt(int(24))
				int color_layer_spotlightblend = SDValueInt(int(25))
				int color_layer_hue = SDValueInt(int(26))
				int color_layer_saturation = SDValueInt(int(27))
		[3/21] 'mdl::base::texture_coordinate_system'
			'mdl::base::texture_coordinate_system' (SDTypeEnum)
				int texture_coordinate_uvw = SDValueInt(int(0))
				int texture_coordinate_world = SDValueInt(int(1))
				int texture_coordinate_object = SDValueInt(int(2))
		[4/21] 'mdl::base::mono_mode'
			'mdl::base::mono_mode' (SDTypeEnum)
				int mono_alpha = SDValueInt(int(0))
				int mono_average = SDValueInt(int(1))
				int mono_luminance = SDValueInt(int(2))
				int mono_maximum = SDValueInt(int(3))
		[5/21] 'mdl::base::gradient_interpolation_mode'
			'mdl::base::gradient_interpolation_mode' (SDTypeEnum)
				int gradient_interpolation_linear = SDValueInt(int(0))
				int gradient_interpolation_off = SDValueInt(int(1))
				int gradient_interpolation_ease_in = SDValueInt(int(2))
				int gradient_interpolation_ease_out = SDValueInt(int(3))
				int gradient_interpolation_ease_in_out = SDValueInt(int(4))
		[6/21] 'mdl::base::gradient_mode'
			'mdl::base::gradient_mode' (SDTypeEnum)
				int gradient_linear = SDValueInt(int(0))
				int gradient_squared = SDValueInt(int(1))
				int gradient_box = SDValueInt(int(2))
				int gradient_diagonal = SDValueInt(int(3))
				int gradient_90_degree = SDValueInt(int(4))
				int gradient_symmetric_90_degree = SDValueInt(int(5))
				int gradient_radial = SDValueInt(int(6))
				int gradient_360_degree = SDValueInt(int(7))
		[7/21] 'mdl::base::texture_coordinate_info'
			'mdl::base::texture_coordinate_info' (SDTypeStruct)
				float3 position
				float3 tangent_u
				float3 tangent_v
		[8/21] 'mdl::base::color_layer'
			'mdl::base::color_layer' (SDTypeStruct)
				ColorRGB layer_color
				float weight
				mdl::base::color_layer_mode mode
		[9/21] 'mdl::base::texture_return'
			'mdl::base::texture_return' (SDTypeStruct)
				ColorRGB tint
				float mono
		[10/21] 'mdl::base::anisotropy_return'
			'mdl::base::anisotropy_return' (SDTypeStruct)
				float roughness_u
				float roughness_v
				float3 tangent_u
		[11/21] 'mdl::base::perez_coefficients'
			'mdl::base::perez_coefficients' (SDTypeStruct)
				SDTypeArray<float> c
		[12/21] 'mdl::base::perez_data'
			'mdl::base::perez_data' (SDTypeStruct)
				mdl::base::perez_coefficients abcde
				float perez_lum_scale
				float sun_illuminance
				float3 sky_illuminance_rgb
		[13/21] 'mdl::base::perez_data_preetham'
			'mdl::base::perez_data_preetham' (SDTypeStruct)
				SDTypeArray<float> x
				SDTypeArray<float> y
				float perez_x_scale
				float perez_y_scale
		[14/21] 'mdl::base::perez_sun_and_sky_data'
			'mdl::base::perez_sun_and_sky_data' (SDTypeStruct)
				float3 clamped_sun_dir
				float turbidity
				mdl::base::perez_data perez_data_lum
				mdl::base::perez_data_preetham perez_data_xy
				float3 sun_color
				float sun_disk_intensity_scale
				float3 ground_luminance
				float factor
		[15/21] 'mdl::base::value_deriv'
			'mdl::base::value_deriv' (SDTypeStruct)
				float4 value
				float4 deriv
		[16/21] 'SDTypeArray<mdl::base::color_layer>'
			'SDTypeArray<mdl::base::color_layer>' (SDTypeArray)
				Item Type:
					'mdl::base::color_layer' (SDTypeStruct)
						ColorRGB layer_color
						float weight
						mdl::base::color_layer_mode mode
		[17/21] 'SDTypeArray<mdl::base::gradient_interpolation_mode>'
			'SDTypeArray<mdl::base::gradient_interpolation_mode>' (SDTypeArray)
				Item Type:
					'mdl::base::gradient_interpolation_mode' (SDTypeEnum)
						int gradient_interpolation_linear = SDValueInt(int(0))
						int gradient_interpolation_off = SDValueInt(int(1))
						int gradient_interpolation_ease_in = SDValueInt(int(2))
						int gradient_interpolation_ease_out = SDValueInt(int(3))
						int gradient_interpolation_ease_in_out = SDValueInt(int(4))
		[18/21] 'mdl::base::worley_return'
			'mdl::base::worley_return' (SDTypeStruct)
				float3 nearest_pos_0
				float3 nearest_pos_1
				float2 val
		[19/21] 'mdl::base::noise_return'
			'mdl::base::noise_return' (SDTypeStruct)
				float3 grad
				float val
		[20/21] 'mdl::base::Tiledata'
			'mdl::base::Tiledata' (SDTypeStruct)
				bool is_in_tile
				ColorRGB color_result
		[21/21] 'mdl::base::volume_coefficients'
			'mdl::base::volume_coefficients' (SDTypeStruct)
				ColorRGB scattering_coefficient
				ColorRGB absorption_coefficient
[35/37] 'mdl::state' (SDMDLModule)
	Definitions:
		[1/28] 'mdl::state::position()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[2/28] 'mdl::state::normal()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[3/28] 'mdl::state::geometry_normal()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[4/28] 'mdl::state::motion()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[5/28] 'mdl::state::texture_space_max()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt) [Varying]
				
		[6/28] 'mdl::state::texture_coordinate(int)'
			SDPropertyCategory = 'Input'
				'index' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[7/28] 'mdl::state::texture_tangent_u(int)'
			SDPropertyCategory = 'Input'
				'index' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[8/28] 'mdl::state::texture_tangent_v(int)'
			SDPropertyCategory = 'Input'
				'index' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[9/28] 'mdl::state::tangent_space(int)'
			SDPropertyCategory = 'Input'
				'index' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix) [Varying]
				
		[10/28] 'mdl::state::geometry_tangent_u(int)'
			SDPropertyCategory = 'Input'
				'index' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[11/28] 'mdl::state::geometry_tangent_v(int)'
			SDPropertyCategory = 'Input'
				'index' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[12/28] 'mdl::state::direction()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[13/28] 'mdl::state::animation_time()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat) [Varying]
				
		[14/28] 'mdl::state::wavelength_base()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
		[15/28] 'mdl::state::coordinate_space(::state::coordinate_space)'
			SDPropertyCategory = 'Input'
				'v' = SDValueEnum("mdl::state::coordinate_space",0) [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				
		[16/28] 'mdl::state::int(::state::coordinate_space)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[17/28] 'mdl::state::transform(::state::coordinate_space,::state::coordinate_space)'
			SDPropertyCategory = 'Input'
				'from' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'to' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[18/28] 'mdl::state::transform_point(::state::coordinate_space,::state::coordinate_space,float3)'
			SDPropertyCategory = 'Input'
				'from' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'to' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'point' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[19/28] 'mdl::state::transform_vector(::state::coordinate_space,::state::coordinate_space,float3)'
			SDPropertyCategory = 'Input'
				'from' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'to' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'vector' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[20/28] 'mdl::state::transform_normal(::state::coordinate_space,::state::coordinate_space,float3)'
			SDPropertyCategory = 'Input'
				'from' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'to' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'normal' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[21/28] 'mdl::state::transform_scale(::state::coordinate_space,::state::coordinate_space,float)'
			SDPropertyCategory = 'Input'
				'from' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'to' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'scale' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[22/28] 'mdl::state::rounded_corner_normal$1.2(float,bool)'
			SDPropertyCategory = 'Input'
				'radius' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'across_materials' = SDValueBool(bool(false)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[23/28] 'mdl::state::rounded_corner_normal(float,bool,float)'
			SDPropertyCategory = 'Input'
				'radius' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'across_materials' = SDValueBool(bool(false)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'roundness' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3) [Varying]
				
		[24/28] 'mdl::state::meters_per_scene_unit()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[25/28] 'mdl::state::scene_units_per_meter()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[26/28] 'mdl::state::object_id()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[27/28] 'mdl::state::wavelength_min()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[28/28] 'mdl::state::wavelength_max()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
	Types:
		[1/1] 'mdl::state::coordinate_space'
			'mdl::state::coordinate_space' (SDTypeEnum)
				int coordinate_internal = SDValueInt(int(0))
				int coordinate_object = SDValueInt(int(1))
				int coordinate_world = SDValueInt(int(2))
[36/37] 'mdl::<builtins>' (SDMDLModule)
	Definitions:
		[1/886] 'mdl::operator/(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[2/886] 'mdl::operator/(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[3/886] 'mdl::operator/(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[4/886] 'mdl::operator/(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[5/886] 'mdl::operator/(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[6/886] 'mdl::operator/(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[7/886] 'mdl::operator/(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[8/886] 'mdl::operator/(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[9/886] 'mdl::operator/(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[10/886] 'mdl::operator/(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[11/886] 'mdl::operator/(float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[12/886] 'mdl::operator/(float2,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[13/886] 'mdl::operator/(float,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[14/886] 'mdl::operator/(float2,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[15/886] 'mdl::operator/(float3,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[16/886] 'mdl::operator/(float,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[17/886] 'mdl::operator/(float3,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[18/886] 'mdl::operator/(float4,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[19/886] 'mdl::operator/(float,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[20/886] 'mdl::operator/(float4,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[21/886] 'mdl::operator/(double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[22/886] 'mdl::operator/(double2,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[23/886] 'mdl::operator/(double,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[24/886] 'mdl::operator/(double2,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[25/886] 'mdl::operator/(double3,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[26/886] 'mdl::operator/(double,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[27/886] 'mdl::operator/(double3,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[28/886] 'mdl::operator/(double4,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[29/886] 'mdl::operator/(double,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[30/886] 'mdl::operator/(double4,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[31/886] 'mdl::operator/(color,color)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'y' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[32/886] 'mdl::operator/(color,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[33/886] 'mdl::operator/(float2x2,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[34/886] 'mdl::operator/(float2x3,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[35/886] 'mdl::operator/(float2x4,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[36/886] 'mdl::operator/(float3x2,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[37/886] 'mdl::operator/(float3x3,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[38/886] 'mdl::operator/(float3x4,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[39/886] 'mdl::operator/(float4x2,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[40/886] 'mdl::operator/(float4x3,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[41/886] 'mdl::operator/(float4x4,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[42/886] 'mdl::operator/(double2x2,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[43/886] 'mdl::operator/(double2x3,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[44/886] 'mdl::operator/(double2x4,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[45/886] 'mdl::operator/(double3x2,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[46/886] 'mdl::operator/(double3x3,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[47/886] 'mdl::operator/(double3x4,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[48/886] 'mdl::operator/(double4x2,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[49/886] 'mdl::operator/(double4x3,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[50/886] 'mdl::operator/(double4x4,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[51/886] 'mdl::operator-(int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[52/886] 'mdl::operator-(int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[53/886] 'mdl::operator-(int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[54/886] 'mdl::operator-(int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[55/886] 'mdl::operator-(float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[56/886] 'mdl::operator-(float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[57/886] 'mdl::operator-(float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[58/886] 'mdl::operator-(float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[59/886] 'mdl::operator-(double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[60/886] 'mdl::operator-(double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[61/886] 'mdl::operator-(double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[62/886] 'mdl::operator-(double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[63/886] 'mdl::operator-(color)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[64/886] 'mdl::operator-(float2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[65/886] 'mdl::operator-(float2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[66/886] 'mdl::operator-(float2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[67/886] 'mdl::operator-(float3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[68/886] 'mdl::operator-(float3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[69/886] 'mdl::operator-(float3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[70/886] 'mdl::operator-(float4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[71/886] 'mdl::operator-(float4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[72/886] 'mdl::operator-(float4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[73/886] 'mdl::operator-(double2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[74/886] 'mdl::operator-(double2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[75/886] 'mdl::operator-(double2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[76/886] 'mdl::operator-(double3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[77/886] 'mdl::operator-(double3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[78/886] 'mdl::operator-(double3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[79/886] 'mdl::operator-(double4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[80/886] 'mdl::operator-(double4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[81/886] 'mdl::operator-(double4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[82/886] 'mdl::operator+(int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[83/886] 'mdl::operator+(int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[84/886] 'mdl::operator+(int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[85/886] 'mdl::operator+(int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[86/886] 'mdl::operator+(float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[87/886] 'mdl::operator+(float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[88/886] 'mdl::operator+(float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[89/886] 'mdl::operator+(float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[90/886] 'mdl::operator+(double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[91/886] 'mdl::operator+(double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[92/886] 'mdl::operator+(double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[93/886] 'mdl::operator+(double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[94/886] 'mdl::operator+(color)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[95/886] 'mdl::operator+(float2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[96/886] 'mdl::operator+(float2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[97/886] 'mdl::operator+(float2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[98/886] 'mdl::operator+(float3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[99/886] 'mdl::operator+(float3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[100/886] 'mdl::operator+(float3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[101/886] 'mdl::operator+(float4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[102/886] 'mdl::operator+(float4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[103/886] 'mdl::operator+(float4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[104/886] 'mdl::operator+(double2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[105/886] 'mdl::operator+(double2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[106/886] 'mdl::operator+(double2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[107/886] 'mdl::operator+(double3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[108/886] 'mdl::operator+(double3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[109/886] 'mdl::operator+(double3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[110/886] 'mdl::operator+(double4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[111/886] 'mdl::operator+(double4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[112/886] 'mdl::operator+(double4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[113/886] 'mdl::operator^(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[114/886] 'mdl::operator^(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[115/886] 'mdl::operator^(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[116/886] 'mdl::operator^(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[117/886] 'mdl::operator^(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[118/886] 'mdl::operator^(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[119/886] 'mdl::operator^(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[120/886] 'mdl::operator^(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[121/886] 'mdl::operator^(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[122/886] 'mdl::operator^(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[123/886] 'mdl::operator|(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[124/886] 'mdl::operator|(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[125/886] 'mdl::operator|(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[126/886] 'mdl::operator|(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[127/886] 'mdl::operator|(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[128/886] 'mdl::operator|(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[129/886] 'mdl::operator|(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[130/886] 'mdl::operator|(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[131/886] 'mdl::operator|(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[132/886] 'mdl::operator|(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[133/886] 'mdl::operator&(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[134/886] 'mdl::operator&(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[135/886] 'mdl::operator&(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[136/886] 'mdl::operator&(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[137/886] 'mdl::operator&(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[138/886] 'mdl::operator&(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[139/886] 'mdl::operator&(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[140/886] 'mdl::operator&(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[141/886] 'mdl::operator&(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[142/886] 'mdl::operator&(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[143/886] 'mdl::operator~(int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[144/886] 'mdl::operator~(int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[145/886] 'mdl::operator~(int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[146/886] 'mdl::operator~(int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[147/886] 'mdl::operator>>>(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[148/886] 'mdl::operator>>>(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[149/886] 'mdl::operator>>>(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[150/886] 'mdl::operator>>>(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[151/886] 'mdl::operator>>>(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[152/886] 'mdl::operator>>>(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[153/886] 'mdl::operator>>>(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[154/886] 'mdl::operator>>>(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[155/886] 'mdl::operator>>>(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[156/886] 'mdl::operator>>>(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[157/886] 'mdl::operator>>(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[158/886] 'mdl::operator>>(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[159/886] 'mdl::operator>>(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[160/886] 'mdl::operator>>(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[161/886] 'mdl::operator>>(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[162/886] 'mdl::operator>>(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[163/886] 'mdl::operator>>(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[164/886] 'mdl::operator>>(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[165/886] 'mdl::operator>>(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[166/886] 'mdl::operator>>(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[167/886] 'mdl::operator<<(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[168/886] 'mdl::operator<<(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[169/886] 'mdl::operator<<(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[170/886] 'mdl::operator<<(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[171/886] 'mdl::operator<<(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[172/886] 'mdl::operator<<(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[173/886] 'mdl::operator<<(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[174/886] 'mdl::operator<<(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[175/886] 'mdl::operator<<(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[176/886] 'mdl::operator<<(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[177/886] 'mdl::operator%(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[178/886] 'mdl::operator%(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[179/886] 'mdl::operator%(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[180/886] 'mdl::operator%(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[181/886] 'mdl::operator%(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[182/886] 'mdl::operator%(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[183/886] 'mdl::operator%(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[184/886] 'mdl::operator%(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[185/886] 'mdl::operator%(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[186/886] 'mdl::operator%(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[187/886] 'mdl::operator||(bool,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[188/886] 'mdl::operator||(bool2,bool2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				'y' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[189/886] 'mdl::operator||(bool,bool2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[190/886] 'mdl::operator||(bool2,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[191/886] 'mdl::operator||(bool3,bool3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				'y' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[192/886] 'mdl::operator||(bool,bool3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[193/886] 'mdl::operator||(bool3,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[194/886] 'mdl::operator||(bool4,bool4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				'y' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[195/886] 'mdl::operator||(bool,bool4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[196/886] 'mdl::operator||(bool4,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[197/886] 'mdl::operator&&(bool,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[198/886] 'mdl::operator&&(bool2,bool2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				'y' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[199/886] 'mdl::operator&&(bool,bool2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[200/886] 'mdl::operator&&(bool2,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[201/886] 'mdl::operator&&(bool3,bool3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				'y' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[202/886] 'mdl::operator&&(bool,bool3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[203/886] 'mdl::operator&&(bool3,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[204/886] 'mdl::operator&&(bool4,bool4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				'y' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[205/886] 'mdl::operator&&(bool,bool4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[206/886] 'mdl::operator&&(bool4,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[207/886] 'mdl::operator!(bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[208/886] 'mdl::operator!(bool2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[209/886] 'mdl::operator!(bool3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[210/886] 'mdl::operator!(bool4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[211/886] 'mdl::operator*(float2x2,float2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[212/886] 'mdl::operator*(float2x2,float3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[213/886] 'mdl::operator*(float2x2,float4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[214/886] 'mdl::operator*(float3x2,float2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[215/886] 'mdl::operator*(float3x2,float3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[216/886] 'mdl::operator*(float3x2,float4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[217/886] 'mdl::operator*(float4x2,float2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[218/886] 'mdl::operator*(float4x2,float3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[219/886] 'mdl::operator*(float4x2,float4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[220/886] 'mdl::operator*(float2x3,float2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[221/886] 'mdl::operator*(float2x3,float3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[222/886] 'mdl::operator*(float2x3,float4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[223/886] 'mdl::operator*(float3x3,float2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[224/886] 'mdl::operator*(float3x3,float3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[225/886] 'mdl::operator*(float3x3,float4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[226/886] 'mdl::operator*(float4x3,float2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[227/886] 'mdl::operator*(float4x3,float3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[228/886] 'mdl::operator*(float4x3,float4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[229/886] 'mdl::operator*(float2x4,float2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[230/886] 'mdl::operator*(float2x4,float3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[231/886] 'mdl::operator*(float2x4,float4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[232/886] 'mdl::operator*(float3x4,float2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[233/886] 'mdl::operator*(float3x4,float3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[234/886] 'mdl::operator*(float3x4,float4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[235/886] 'mdl::operator*(float4x4,float2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[236/886] 'mdl::operator*(float4x4,float3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[237/886] 'mdl::operator*(float4x4,float4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[238/886] 'mdl::operator*(double2x2,double2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[239/886] 'mdl::operator*(double2x2,double3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[240/886] 'mdl::operator*(double2x2,double4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[241/886] 'mdl::operator*(double3x2,double2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[242/886] 'mdl::operator*(double3x2,double3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[243/886] 'mdl::operator*(double3x2,double4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[244/886] 'mdl::operator*(double4x2,double2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[245/886] 'mdl::operator*(double4x2,double3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[246/886] 'mdl::operator*(double4x2,double4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[247/886] 'mdl::operator*(double2x3,double2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[248/886] 'mdl::operator*(double2x3,double3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[249/886] 'mdl::operator*(double2x3,double4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[250/886] 'mdl::operator*(double3x3,double2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[251/886] 'mdl::operator*(double3x3,double3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[252/886] 'mdl::operator*(double3x3,double4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[253/886] 'mdl::operator*(double4x3,double2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[254/886] 'mdl::operator*(double4x3,double3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[255/886] 'mdl::operator*(double4x3,double4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[256/886] 'mdl::operator*(double2x4,double2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[257/886] 'mdl::operator*(double2x4,double3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[258/886] 'mdl::operator*(double2x4,double4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[259/886] 'mdl::operator*(double3x4,double2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[260/886] 'mdl::operator*(double3x4,double3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[261/886] 'mdl::operator*(double3x4,double4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[262/886] 'mdl::operator*(double4x4,double2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[263/886] 'mdl::operator*(double4x4,double3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[264/886] 'mdl::operator*(double4x4,double4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[265/886] 'mdl::operator*(float2x2,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[266/886] 'mdl::operator*(float3x2,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[267/886] 'mdl::operator*(float4x2,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[268/886] 'mdl::operator*(float2x3,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[269/886] 'mdl::operator*(float3x3,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[270/886] 'mdl::operator*(float4x3,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[271/886] 'mdl::operator*(float2x4,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[272/886] 'mdl::operator*(float3x4,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[273/886] 'mdl::operator*(float4x4,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[274/886] 'mdl::operator*(double2x2,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[275/886] 'mdl::operator*(double3x2,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[276/886] 'mdl::operator*(double4x2,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[277/886] 'mdl::operator*(double2x3,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[278/886] 'mdl::operator*(double3x3,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[279/886] 'mdl::operator*(double4x3,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[280/886] 'mdl::operator*(double2x4,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[281/886] 'mdl::operator*(double3x4,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[282/886] 'mdl::operator*(double4x4,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[283/886] 'mdl::operator*(float2,float2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[284/886] 'mdl::operator*(float2,float3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[285/886] 'mdl::operator*(float2,float4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[286/886] 'mdl::operator*(float3,float2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[287/886] 'mdl::operator*(float3,float3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[288/886] 'mdl::operator*(float3,float4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[289/886] 'mdl::operator*(float4,float2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[290/886] 'mdl::operator*(float4,float3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[291/886] 'mdl::operator*(float4,float4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[292/886] 'mdl::operator*(double2,double2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[293/886] 'mdl::operator*(double2,double3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[294/886] 'mdl::operator*(double2,double4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[295/886] 'mdl::operator*(double3,double2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[296/886] 'mdl::operator*(double3,double3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[297/886] 'mdl::operator*(double3,double4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[298/886] 'mdl::operator*(double4,double2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[299/886] 'mdl::operator*(double4,double3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[300/886] 'mdl::operator*(double4,double4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[301/886] 'mdl::operator*(float2x2,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[302/886] 'mdl::operator*(float,float2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[303/886] 'mdl::operator*(float2x3,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[304/886] 'mdl::operator*(float,float2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[305/886] 'mdl::operator*(float2x4,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[306/886] 'mdl::operator*(float,float2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[307/886] 'mdl::operator*(float3x2,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[308/886] 'mdl::operator*(float,float3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[309/886] 'mdl::operator*(float3x3,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[310/886] 'mdl::operator*(float,float3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[311/886] 'mdl::operator*(float3x4,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[312/886] 'mdl::operator*(float,float3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[313/886] 'mdl::operator*(float4x2,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[314/886] 'mdl::operator*(float,float4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[315/886] 'mdl::operator*(float4x3,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[316/886] 'mdl::operator*(float,float4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[317/886] 'mdl::operator*(float4x4,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[318/886] 'mdl::operator*(float,float4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[319/886] 'mdl::operator*(double2x2,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[320/886] 'mdl::operator*(double,double2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[321/886] 'mdl::operator*(double2x3,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[322/886] 'mdl::operator*(double,double2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[323/886] 'mdl::operator*(double2x4,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[324/886] 'mdl::operator*(double,double2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[325/886] 'mdl::operator*(double3x2,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[326/886] 'mdl::operator*(double,double3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[327/886] 'mdl::operator*(double3x3,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[328/886] 'mdl::operator*(double,double3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[329/886] 'mdl::operator*(double3x4,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[330/886] 'mdl::operator*(double,double3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[331/886] 'mdl::operator*(double4x2,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[332/886] 'mdl::operator*(double,double4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[333/886] 'mdl::operator*(double4x3,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[334/886] 'mdl::operator*(double,double4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[335/886] 'mdl::operator*(double4x4,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[336/886] 'mdl::operator*(double,double4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[337/886] 'mdl::operator*(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[338/886] 'mdl::operator*(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[339/886] 'mdl::operator*(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[340/886] 'mdl::operator*(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[341/886] 'mdl::operator*(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[342/886] 'mdl::operator*(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[343/886] 'mdl::operator*(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[344/886] 'mdl::operator*(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[345/886] 'mdl::operator*(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[346/886] 'mdl::operator*(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[347/886] 'mdl::operator*(float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[348/886] 'mdl::operator*(float2,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[349/886] 'mdl::operator*(float,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[350/886] 'mdl::operator*(float2,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[351/886] 'mdl::operator*(float3,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[352/886] 'mdl::operator*(float,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[353/886] 'mdl::operator*(float3,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[354/886] 'mdl::operator*(float4,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[355/886] 'mdl::operator*(float,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[356/886] 'mdl::operator*(float4,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[357/886] 'mdl::operator*(double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[358/886] 'mdl::operator*(double2,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[359/886] 'mdl::operator*(double,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[360/886] 'mdl::operator*(double2,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[361/886] 'mdl::operator*(double3,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[362/886] 'mdl::operator*(double,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[363/886] 'mdl::operator*(double3,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[364/886] 'mdl::operator*(double4,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[365/886] 'mdl::operator*(double,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[366/886] 'mdl::operator*(double4,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[367/886] 'mdl::operator*(color,color)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'y' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[368/886] 'mdl::operator*(float,color)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[369/886] 'mdl::operator*(color,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[370/886] 'mdl::operator>=(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[371/886] 'mdl::operator>=(float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[372/886] 'mdl::operator>=(double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[373/886] 'mdl::operator>(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[374/886] 'mdl::operator>(float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[375/886] 'mdl::operator>(double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[376/886] 'mdl::operator<=(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[377/886] 'mdl::operator<=(float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[378/886] 'mdl::operator<=(double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[379/886] 'mdl::operator<(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[380/886] 'mdl::operator<(float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[381/886] 'mdl::operator<(double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[382/886] 'mdl::operator-(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[383/886] 'mdl::operator-(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[384/886] 'mdl::operator-(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[385/886] 'mdl::operator-(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[386/886] 'mdl::operator-(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[387/886] 'mdl::operator-(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[388/886] 'mdl::operator-(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[389/886] 'mdl::operator-(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[390/886] 'mdl::operator-(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[391/886] 'mdl::operator-(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[392/886] 'mdl::operator-(float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[393/886] 'mdl::operator-(float2,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[394/886] 'mdl::operator-(float,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[395/886] 'mdl::operator-(float2,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[396/886] 'mdl::operator-(float3,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[397/886] 'mdl::operator-(float,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[398/886] 'mdl::operator-(float3,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[399/886] 'mdl::operator-(float4,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[400/886] 'mdl::operator-(float,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[401/886] 'mdl::operator-(float4,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[402/886] 'mdl::operator-(double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[403/886] 'mdl::operator-(double2,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[404/886] 'mdl::operator-(double,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[405/886] 'mdl::operator-(double2,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[406/886] 'mdl::operator-(double3,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[407/886] 'mdl::operator-(double,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[408/886] 'mdl::operator-(double3,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[409/886] 'mdl::operator-(double4,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[410/886] 'mdl::operator-(double,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[411/886] 'mdl::operator-(double4,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[412/886] 'mdl::operator-(color,color)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'y' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[413/886] 'mdl::operator-(float,color)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[414/886] 'mdl::operator-(color,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[415/886] 'mdl::operator-(float2x2,float2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[416/886] 'mdl::operator-(float2x3,float2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[417/886] 'mdl::operator-(float2x4,float2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[418/886] 'mdl::operator-(float3x2,float3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[419/886] 'mdl::operator-(float3x3,float3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[420/886] 'mdl::operator-(float3x4,float3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[421/886] 'mdl::operator-(float4x2,float4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[422/886] 'mdl::operator-(float4x3,float4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[423/886] 'mdl::operator-(float4x4,float4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[424/886] 'mdl::operator-(double2x2,double2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[425/886] 'mdl::operator-(double2x3,double2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[426/886] 'mdl::operator-(double2x4,double2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[427/886] 'mdl::operator-(double3x2,double3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[428/886] 'mdl::operator-(double3x3,double3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[429/886] 'mdl::operator-(double3x4,double3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[430/886] 'mdl::operator-(double4x2,double4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[431/886] 'mdl::operator-(double4x3,double4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[432/886] 'mdl::operator-(double4x4,double4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[433/886] 'mdl::operator+(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[434/886] 'mdl::operator+(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[435/886] 'mdl::operator+(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[436/886] 'mdl::operator+(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[437/886] 'mdl::operator+(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[438/886] 'mdl::operator+(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[439/886] 'mdl::operator+(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[440/886] 'mdl::operator+(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[441/886] 'mdl::operator+(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[442/886] 'mdl::operator+(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[443/886] 'mdl::operator+(float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[444/886] 'mdl::operator+(float2,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[445/886] 'mdl::operator+(float,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[446/886] 'mdl::operator+(float2,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[447/886] 'mdl::operator+(float3,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[448/886] 'mdl::operator+(float,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[449/886] 'mdl::operator+(float3,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[450/886] 'mdl::operator+(float4,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[451/886] 'mdl::operator+(float,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[452/886] 'mdl::operator+(float4,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[453/886] 'mdl::operator+(double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[454/886] 'mdl::operator+(double2,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[455/886] 'mdl::operator+(double,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[456/886] 'mdl::operator+(double2,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[457/886] 'mdl::operator+(double3,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[458/886] 'mdl::operator+(double,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[459/886] 'mdl::operator+(double3,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[460/886] 'mdl::operator+(double4,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[461/886] 'mdl::operator+(double,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[462/886] 'mdl::operator+(double4,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[463/886] 'mdl::operator+(color,color)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'y' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[464/886] 'mdl::operator+(float,color)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[465/886] 'mdl::operator+(color,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[466/886] 'mdl::operator+(float2x2,float2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[467/886] 'mdl::operator+(float2x3,float2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[468/886] 'mdl::operator+(float2x4,float2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[469/886] 'mdl::operator+(float3x2,float3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[470/886] 'mdl::operator+(float3x3,float3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[471/886] 'mdl::operator+(float3x4,float3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[472/886] 'mdl::operator+(float4x2,float4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[473/886] 'mdl::operator+(float4x3,float4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[474/886] 'mdl::operator+(float4x4,float4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[475/886] 'mdl::operator+(double2x2,double2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[476/886] 'mdl::operator+(double2x3,double2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[477/886] 'mdl::operator+(double2x4,double2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[478/886] 'mdl::operator+(double3x2,double3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[479/886] 'mdl::operator+(double3x3,double3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[480/886] 'mdl::operator+(double3x4,double3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[481/886] 'mdl::operator+(double4x2,double4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[482/886] 'mdl::operator+(double4x3,double4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[483/886] 'mdl::operator+(double4x4,double4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[484/886] 'mdl::operator!=(bool,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[485/886] 'mdl::operator!=(bool2,bool2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				'y' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[486/886] 'mdl::operator!=(bool,bool2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[487/886] 'mdl::operator!=(bool2,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[488/886] 'mdl::operator!=(bool3,bool3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				'y' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[489/886] 'mdl::operator!=(bool,bool3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[490/886] 'mdl::operator!=(bool3,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[491/886] 'mdl::operator!=(bool4,bool4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				'y' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[492/886] 'mdl::operator!=(bool,bool4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[493/886] 'mdl::operator!=(bool4,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[494/886] 'mdl::operator!=(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[495/886] 'mdl::operator!=(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[496/886] 'mdl::operator!=(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[497/886] 'mdl::operator!=(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[498/886] 'mdl::operator!=(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[499/886] 'mdl::operator!=(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[500/886] 'mdl::operator!=(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[501/886] 'mdl::operator!=(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[502/886] 'mdl::operator!=(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[503/886] 'mdl::operator!=(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[504/886] 'mdl::operator!=(float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[505/886] 'mdl::operator!=(float2,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[506/886] 'mdl::operator!=(float,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[507/886] 'mdl::operator!=(float2,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[508/886] 'mdl::operator!=(float3,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[509/886] 'mdl::operator!=(float,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[510/886] 'mdl::operator!=(float3,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[511/886] 'mdl::operator!=(float4,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[512/886] 'mdl::operator!=(float,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[513/886] 'mdl::operator!=(float4,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[514/886] 'mdl::operator!=(double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[515/886] 'mdl::operator!=(double2,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[516/886] 'mdl::operator!=(double,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[517/886] 'mdl::operator!=(double2,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[518/886] 'mdl::operator!=(double3,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[519/886] 'mdl::operator!=(double,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[520/886] 'mdl::operator!=(double3,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[521/886] 'mdl::operator!=(double4,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[522/886] 'mdl::operator!=(double,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[523/886] 'mdl::operator!=(double4,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[524/886] 'mdl::operator!=(color,color)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'y' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[525/886] 'mdl::operator!=(string,string)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				'y' [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[526/886] 'mdl::operator!=(float2x2,float2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[527/886] 'mdl::operator!=(float2x3,float2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[528/886] 'mdl::operator!=(float2x4,float2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[529/886] 'mdl::operator!=(float3x2,float3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[530/886] 'mdl::operator!=(float3x3,float3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[531/886] 'mdl::operator!=(float3x4,float3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[532/886] 'mdl::operator!=(float4x2,float4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[533/886] 'mdl::operator!=(float4x3,float4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[534/886] 'mdl::operator!=(float4x4,float4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[535/886] 'mdl::operator!=(double2x2,double2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[536/886] 'mdl::operator!=(double2x3,double2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[537/886] 'mdl::operator!=(double2x4,double2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[538/886] 'mdl::operator!=(double3x2,double3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[539/886] 'mdl::operator!=(double3x3,double3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[540/886] 'mdl::operator!=(double3x4,double3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[541/886] 'mdl::operator!=(double4x2,double4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[542/886] 'mdl::operator!=(double4x3,double4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[543/886] 'mdl::operator!=(double4x4,double4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[544/886] 'mdl::operator==(bool,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[545/886] 'mdl::operator==(bool2,bool2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				'y' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[546/886] 'mdl::operator==(bool,bool2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[547/886] 'mdl::operator==(bool2,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[548/886] 'mdl::operator==(bool3,bool3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				'y' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[549/886] 'mdl::operator==(bool,bool3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[550/886] 'mdl::operator==(bool3,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[551/886] 'mdl::operator==(bool4,bool4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				'y' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[552/886] 'mdl::operator==(bool,bool4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[553/886] 'mdl::operator==(bool4,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[554/886] 'mdl::operator==(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[555/886] 'mdl::operator==(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[556/886] 'mdl::operator==(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[557/886] 'mdl::operator==(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[558/886] 'mdl::operator==(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[559/886] 'mdl::operator==(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[560/886] 'mdl::operator==(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[561/886] 'mdl::operator==(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[562/886] 'mdl::operator==(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[563/886] 'mdl::operator==(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[564/886] 'mdl::operator==(float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[565/886] 'mdl::operator==(float2,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[566/886] 'mdl::operator==(float,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[567/886] 'mdl::operator==(float2,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[568/886] 'mdl::operator==(float3,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[569/886] 'mdl::operator==(float,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[570/886] 'mdl::operator==(float3,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[571/886] 'mdl::operator==(float4,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[572/886] 'mdl::operator==(float,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[573/886] 'mdl::operator==(float4,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[574/886] 'mdl::operator==(double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[575/886] 'mdl::operator==(double2,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[576/886] 'mdl::operator==(double,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[577/886] 'mdl::operator==(double2,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[578/886] 'mdl::operator==(double3,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[579/886] 'mdl::operator==(double,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[580/886] 'mdl::operator==(double3,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[581/886] 'mdl::operator==(double4,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[582/886] 'mdl::operator==(double,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[583/886] 'mdl::operator==(double4,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[584/886] 'mdl::operator==(color,color)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'y' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[585/886] 'mdl::operator==(string,string)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				'y' [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[586/886] 'mdl::operator==(float2x2,float2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[587/886] 'mdl::operator==(float2x3,float2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[588/886] 'mdl::operator==(float2x4,float2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[589/886] 'mdl::operator==(float3x2,float3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[590/886] 'mdl::operator==(float3x3,float3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[591/886] 'mdl::operator==(float3x4,float3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[592/886] 'mdl::operator==(float4x2,float4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[593/886] 'mdl::operator==(float4x3,float4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[594/886] 'mdl::operator==(float4x4,float4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[595/886] 'mdl::operator==(double2x2,double2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[596/886] 'mdl::operator==(double2x3,double2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[597/886] 'mdl::operator==(double2x4,double2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[598/886] 'mdl::operator==(double3x2,double3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[599/886] 'mdl::operator==(double3x3,double3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[600/886] 'mdl::operator==(double3x4,double3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[601/886] 'mdl::operator==(double4x2,double4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[602/886] 'mdl::operator==(double4x3,double4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[603/886] 'mdl::operator==(double4x4,double4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[604/886] 'mdl::intensity_mode(intensity_mode)'
			SDPropertyCategory = 'Input'
				'value' = SDValueEnum("mdl::intensity_mode",0) [CONNECTABLE]
					Types:
						'mdl::intensity_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::intensity_mode' (SDTypeEnum)
				
		[605/886] 'mdl::int(intensity_mode)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'mdl::intensity_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[606/886] 'mdl::texture_ptex()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference)
				
		[607/886] 'mdl::texture_ptex(texture_ptex)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference)
				
		[608/886] 'mdl::texture_ptex(string,::tex::gamma_mode)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'gamma' = SDValueEnum("mdl::tex::gamma_mode",0) [CONNECTABLE]
					Types:
						'mdl::tex::gamma_mode' (SDTypeEnum) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference)
				
		[609/886] 'mdl::texture_cube()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference)
				
		[610/886] 'mdl::texture_cube(texture_cube)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference)
				
		[611/886] 'mdl::texture_cube(string,::tex::gamma_mode)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'gamma' = SDValueEnum("mdl::tex::gamma_mode",0) [CONNECTABLE]
					Types:
						'mdl::tex::gamma_mode' (SDTypeEnum) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference)
				
		[612/886] 'mdl::texture_3d()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference)
				
		[613/886] 'mdl::texture_3d(texture_3d)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference)
				
		[614/886] 'mdl::texture_3d$1.6(string,::tex::gamma_mode)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'gamma' = SDValueEnum("mdl::tex::gamma_mode",0) [CONNECTABLE]
					Types:
						'mdl::tex::gamma_mode' (SDTypeEnum) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference)
				
		[615/886] 'mdl::texture_3d(string,::tex::gamma_mode,string)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'gamma' = SDValueEnum("mdl::tex::gamma_mode",0) [CONNECTABLE]
					Types:
						'mdl::tex::gamma_mode' (SDTypeEnum) [Uniform]
				'selector' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference)
				
		[616/886] 'mdl::texture_2d()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference)
				
		[617/886] 'mdl::texture_2d(texture_2d)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference)
				
		[618/886] 'mdl::texture_2d$1.6(string,::tex::gamma_mode)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'gamma' = SDValueEnum("mdl::tex::gamma_mode",0) [CONNECTABLE]
					Types:
						'mdl::tex::gamma_mode' (SDTypeEnum) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference)
				
		[619/886] 'mdl::texture_2d(string,::tex::gamma_mode,string)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'gamma' = SDValueEnum("mdl::tex::gamma_mode",0) [CONNECTABLE]
					Types:
						'mdl::tex::gamma_mode' (SDTypeEnum) [Uniform]
				'selector' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference)
				
		[620/886] 'mdl::vdf()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[621/886] 'mdl::vdf(vdf)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[622/886] 'mdl::edf()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[623/886] 'mdl::edf(edf)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[624/886] 'mdl::hair_bsdf()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::hair_bsdf' (SDMDLTypeHairBSDF)
				
		[625/886] 'mdl::hair_bsdf(hair_bsdf)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'mdl::hair_bsdf' (SDMDLTypeHairBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::hair_bsdf' (SDMDLTypeHairBSDF)
				
		[626/886] 'mdl::bsdf()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[627/886] 'mdl::bsdf(bsdf)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[628/886] 'mdl::bsdf_measurement()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf_measurement' (SDMDLTypeBSDFMeasurementReference)
				
		[629/886] 'mdl::bsdf_measurement(bsdf_measurement)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'mdl::bsdf_measurement' (SDMDLTypeBSDFMeasurementReference)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf_measurement' (SDMDLTypeBSDFMeasurementReference)
				
		[630/886] 'mdl::bsdf_measurement(string)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf_measurement' (SDMDLTypeBSDFMeasurementReference)
				
		[631/886] 'mdl::light_profile()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference)
				
		[632/886] 'mdl::light_profile(light_profile)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference)
				
		[633/886] 'mdl::light_profile(string)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference)
				
		[634/886] 'mdl::double4x4(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[635/886] 'mdl::double4x4(double4x4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[636/886] 'mdl::double4x4(double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm01' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm02' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm03' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm10' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm11' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm12' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm13' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm20' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm21' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm22' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm23' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm30' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm31' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm32' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm33' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[637/886] 'mdl::double4x4(double4,double4,double4,double4)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'col1' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'col2' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'col3' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[638/886] 'mdl::double4x4(float4x4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[639/886] 'mdl::double4x3(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[640/886] 'mdl::double4x3(double4x3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[641/886] 'mdl::double4x3(double,double,double,double,double,double,double,double,double,double,double,double)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm01' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm02' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm10' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm11' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm12' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm20' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm21' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm22' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm30' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm31' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm32' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[642/886] 'mdl::double4x3(double3,double3,double3,double3)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'col1' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'col2' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'col3' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[643/886] 'mdl::double4x3(float4x3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[644/886] 'mdl::double4x2(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[645/886] 'mdl::double4x2(double4x2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[646/886] 'mdl::double4x2(double,double,double,double,double,double,double,double)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm01' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm10' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm11' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm20' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm21' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm30' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm31' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[647/886] 'mdl::double4x2(double2,double2,double2,double2)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'col1' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'col2' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'col3' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[648/886] 'mdl::double4x2(float4x2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[649/886] 'mdl::double3x4(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[650/886] 'mdl::double3x4(double3x4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[651/886] 'mdl::double3x4(double,double,double,double,double,double,double,double,double,double,double,double)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm01' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm02' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm03' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm10' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm11' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm12' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm13' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm20' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm21' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm22' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm23' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[652/886] 'mdl::double3x4(double4,double4,double4)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'col1' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'col2' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[653/886] 'mdl::double3x4(float3x4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[654/886] 'mdl::double3x3(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[655/886] 'mdl::double3x3(double3x3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[656/886] 'mdl::double3x3(double,double,double,double,double,double,double,double,double)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm01' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm02' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm10' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm11' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm12' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm20' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm21' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm22' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[657/886] 'mdl::double3x3(double3,double3,double3)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'col1' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'col2' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[658/886] 'mdl::double3x3(float3x3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[659/886] 'mdl::double3x2(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[660/886] 'mdl::double3x2(double3x2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[661/886] 'mdl::double3x2(double,double,double,double,double,double)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm01' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm10' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm11' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm20' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm21' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[662/886] 'mdl::double3x2(double2,double2,double2)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'col1' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'col2' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[663/886] 'mdl::double3x2(float3x2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[664/886] 'mdl::double2x4(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[665/886] 'mdl::double2x4(double2x4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[666/886] 'mdl::double2x4(double,double,double,double,double,double,double,double)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm01' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm02' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm03' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm10' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm11' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm12' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm13' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[667/886] 'mdl::double2x4(double4,double4)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'col1' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[668/886] 'mdl::double2x4(float2x4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[669/886] 'mdl::double2x3(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[670/886] 'mdl::double2x3(double2x3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[671/886] 'mdl::double2x3(double,double,double,double,double,double)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm01' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm02' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm10' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm11' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm12' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[672/886] 'mdl::double2x3(double3,double3)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'col1' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[673/886] 'mdl::double2x3(float2x3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[674/886] 'mdl::double2x2(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[675/886] 'mdl::double2x2(double2x2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[676/886] 'mdl::double2x2(double,double,double,double)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm01' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm10' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm11' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[677/886] 'mdl::double2x2(double2,double2)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'col1' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[678/886] 'mdl::double2x2(float2x2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[679/886] 'mdl::float4x4(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[680/886] 'mdl::float4x4(float4x4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[681/886] 'mdl::float4x4(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm01' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm02' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm03' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm10' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm11' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm12' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm13' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm20' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm21' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm22' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm23' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm30' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm31' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm32' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm33' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[682/886] 'mdl::float4x4(float4,float4,float4,float4)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'col1' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'col2' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'col3' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[683/886] 'mdl::float4x4(double4x4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[684/886] 'mdl::float4x3(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[685/886] 'mdl::float4x3(float4x3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[686/886] 'mdl::float4x3(float,float,float,float,float,float,float,float,float,float,float,float)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm01' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm02' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm10' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm11' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm12' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm20' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm21' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm22' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm30' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm31' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm32' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[687/886] 'mdl::float4x3(float3,float3,float3,float3)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'col1' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'col2' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'col3' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[688/886] 'mdl::float4x3(double4x3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[689/886] 'mdl::float4x2(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[690/886] 'mdl::float4x2(float4x2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[691/886] 'mdl::float4x2(float,float,float,float,float,float,float,float)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm01' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm10' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm11' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm20' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm21' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm30' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm31' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[692/886] 'mdl::float4x2(float2,float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'col1' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'col2' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'col3' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[693/886] 'mdl::float4x2(double4x2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[694/886] 'mdl::float3x4(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[695/886] 'mdl::float3x4(float3x4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[696/886] 'mdl::float3x4(float,float,float,float,float,float,float,float,float,float,float,float)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm01' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm02' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm03' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm10' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm11' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm12' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm13' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm20' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm21' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm22' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm23' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[697/886] 'mdl::float3x4(float4,float4,float4)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'col1' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'col2' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[698/886] 'mdl::float3x4(double3x4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[699/886] 'mdl::float3x3(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[700/886] 'mdl::float3x3(float3x3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[701/886] 'mdl::float3x3(float,float,float,float,float,float,float,float,float)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm01' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm02' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm10' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm11' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm12' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm20' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm21' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm22' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[702/886] 'mdl::float3x3(float3,float3,float3)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'col1' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'col2' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[703/886] 'mdl::float3x3(double3x3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[704/886] 'mdl::float3x2(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[705/886] 'mdl::float3x2(float3x2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[706/886] 'mdl::float3x2(float,float,float,float,float,float)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm01' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm10' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm11' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm20' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm21' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[707/886] 'mdl::float3x2(float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'col1' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'col2' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[708/886] 'mdl::float3x2(double3x2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[709/886] 'mdl::float2x4(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[710/886] 'mdl::float2x4(float2x4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[711/886] 'mdl::float2x4(float,float,float,float,float,float,float,float)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm01' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm02' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm03' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm10' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm11' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm12' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm13' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[712/886] 'mdl::float2x4(float4,float4)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'col1' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[713/886] 'mdl::float2x4(double2x4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[714/886] 'mdl::float2x3(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[715/886] 'mdl::float2x3(float2x3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[716/886] 'mdl::float2x3(float,float,float,float,float,float)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm01' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm02' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm10' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm11' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm12' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[717/886] 'mdl::float2x3(float3,float3)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'col1' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[718/886] 'mdl::float2x3(double2x3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[719/886] 'mdl::float2x2(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[720/886] 'mdl::float2x2(float2x2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[721/886] 'mdl::float2x2(float,float,float,float)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm01' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm10' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm11' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[722/886] 'mdl::float2x2(float2,float2)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'col1' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[723/886] 'mdl::float2x2(double2x2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[724/886] 'mdl::color(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[725/886] 'mdl::color(float,float,float)'
			SDPropertyCategory = 'Input'
				'r' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'g' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[726/886] 'mdl::color(float3)'
			SDPropertyCategory = 'Input'
				'rgb' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[727/886] 'mdl::color(float[N],float[N])'
			SDPropertyCategory = 'Input'
				'wavelengths' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				'amplitudes' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[728/886] 'mdl::color(color)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[729/886] 'mdl::string(string)'
			SDPropertyCategory = 'Input'
				'value' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'string' (SDTypeString)
				
		[730/886] 'mdl::double4(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[731/886] 'mdl::double4(double,double,double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'z' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'w' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[732/886] 'mdl::double4.x(double4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[733/886] 'mdl::double4.y(double4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[734/886] 'mdl::double4.z(double4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[735/886] 'mdl::double4.w(double4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[736/886] 'mdl::double4(double4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[737/886] 'mdl::double4(bool4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[738/886] 'mdl::double4(int4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[739/886] 'mdl::double4(float4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[740/886] 'mdl::double3(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[741/886] 'mdl::double3(double,double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'z' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[742/886] 'mdl::double3.x(double3)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[743/886] 'mdl::double3.y(double3)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[744/886] 'mdl::double3.z(double3)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[745/886] 'mdl::double3(double3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[746/886] 'mdl::double3(bool3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[747/886] 'mdl::double3(int3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[748/886] 'mdl::double3(float3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[749/886] 'mdl::double2(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[750/886] 'mdl::double2(double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[751/886] 'mdl::double2.x(double2)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[752/886] 'mdl::double2.y(double2)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[753/886] 'mdl::double2(double2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[754/886] 'mdl::double2(bool2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[755/886] 'mdl::double2(int2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[756/886] 'mdl::double2(float2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[757/886] 'mdl::double(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[758/886] 'mdl::double(bool)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[759/886] 'mdl::double(int)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[760/886] 'mdl::double(float)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[761/886] 'mdl::float4(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[762/886] 'mdl::float4(float,float,float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'z' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'w' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[763/886] 'mdl::float4.x(float4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[764/886] 'mdl::float4.y(float4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[765/886] 'mdl::float4.z(float4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[766/886] 'mdl::float4.w(float4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[767/886] 'mdl::float4(float4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[768/886] 'mdl::float4(bool4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[769/886] 'mdl::float4(int4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[770/886] 'mdl::float4(double4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[771/886] 'mdl::float3(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[772/886] 'mdl::float3(float,float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'z' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[773/886] 'mdl::float3.x(float3)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[774/886] 'mdl::float3.y(float3)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[775/886] 'mdl::float3.z(float3)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[776/886] 'mdl::float3(float3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[777/886] 'mdl::float3(bool3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[778/886] 'mdl::float3(int3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[779/886] 'mdl::float3(double3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[780/886] 'mdl::float3(color)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[781/886] 'mdl::float2(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[782/886] 'mdl::float2(float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[783/886] 'mdl::float2.x(float2)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[784/886] 'mdl::float2.y(float2)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[785/886] 'mdl::float2(float2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[786/886] 'mdl::float2(bool2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[787/886] 'mdl::float2(int2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[788/886] 'mdl::float2(double2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[789/886] 'mdl::float(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[790/886] 'mdl::float(bool)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[791/886] 'mdl::float(int)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[792/886] 'mdl::float(double)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[793/886] 'mdl::int4(int)'
			SDPropertyCategory = 'Input'
				'value' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[794/886] 'mdl::int4(int,int,int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'z' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'w' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[795/886] 'mdl::int4.x(int4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[796/886] 'mdl::int4.y(int4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[797/886] 'mdl::int4.z(int4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[798/886] 'mdl::int4.w(int4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[799/886] 'mdl::int4(int4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[800/886] 'mdl::int4(bool4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[801/886] 'mdl::int4(float4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[802/886] 'mdl::int4(double4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[803/886] 'mdl::int3(int)'
			SDPropertyCategory = 'Input'
				'value' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[804/886] 'mdl::int3(int,int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'z' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[805/886] 'mdl::int3.x(int3)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[806/886] 'mdl::int3.y(int3)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[807/886] 'mdl::int3.z(int3)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[808/886] 'mdl::int3(int3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[809/886] 'mdl::int3(bool3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[810/886] 'mdl::int3(float3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[811/886] 'mdl::int3(double3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[812/886] 'mdl::int2(int)'
			SDPropertyCategory = 'Input'
				'value' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[813/886] 'mdl::int2(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[814/886] 'mdl::int2.x(int2)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[815/886] 'mdl::int2.y(int2)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[816/886] 'mdl::int2(int2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[817/886] 'mdl::int2(bool2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[818/886] 'mdl::int2(float2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[819/886] 'mdl::int2(double2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[820/886] 'mdl::int(int)'
			SDPropertyCategory = 'Input'
				'value' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[821/886] 'mdl::int(bool)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[822/886] 'mdl::int(float)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[823/886] 'mdl::int(double)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[824/886] 'mdl::bool4(bool)'
			SDPropertyCategory = 'Input'
				'value' = SDValueBool(bool(false)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[825/886] 'mdl::bool4(bool,bool,bool,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'z' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'w' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[826/886] 'mdl::bool4.x(bool4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[827/886] 'mdl::bool4.y(bool4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[828/886] 'mdl::bool4.z(bool4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[829/886] 'mdl::bool4.w(bool4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[830/886] 'mdl::bool4(bool4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[831/886] 'mdl::bool4(int4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[832/886] 'mdl::bool4(float4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[833/886] 'mdl::bool4(double4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[834/886] 'mdl::bool3(bool)'
			SDPropertyCategory = 'Input'
				'value' = SDValueBool(bool(false)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[835/886] 'mdl::bool3(bool,bool,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'z' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[836/886] 'mdl::bool3.x(bool3)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[837/886] 'mdl::bool3.y(bool3)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[838/886] 'mdl::bool3.z(bool3)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[839/886] 'mdl::bool3(bool3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[840/886] 'mdl::bool3(int3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[841/886] 'mdl::bool3(float3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[842/886] 'mdl::bool3(double3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[843/886] 'mdl::bool2(bool)'
			SDPropertyCategory = 'Input'
				'value' = SDValueBool(bool(false)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[844/886] 'mdl::bool2(bool,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[845/886] 'mdl::bool2.x(bool2)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[846/886] 'mdl::bool2.y(bool2)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[847/886] 'mdl::bool2(bool2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[848/886] 'mdl::bool2(int2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[849/886] 'mdl::bool2(float2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[850/886] 'mdl::bool2(double2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[851/886] 'mdl::bool(bool)'
			SDPropertyCategory = 'Input'
				'value' = SDValueBool(bool(false)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[852/886] 'mdl::bool(int)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[853/886] 'mdl::bool(float)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[854/886] 'mdl::bool(double)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[855/886] 'mdl::material_emission(material_emission)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'mdl::material_emission' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_emission' (SDTypeStruct)
				
		[856/886] 'mdl::material_emission(edf,color,intensity_mode)'
			SDPropertyCategory = 'Input'
				'emission' = SDMDLValueEDF() [CONNECTABLE]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				'intensity' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'mode' = SDValueEnum("mdl::intensity_mode",0) [CONNECTABLE]
					Types:
						'mdl::intensity_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_emission' (SDTypeStruct)
				
		[857/886] 'mdl::material_emission.emission(material_emission)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material_emission' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[858/886] 'mdl::material_emission.intensity(material_emission)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material_emission' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[859/886] 'mdl::material_emission.mode(material_emission)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material_emission' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::intensity_mode' (SDTypeEnum)
				
		[860/886] 'mdl::material_emission$1.0(edf,color)'
			SDPropertyCategory = 'Input'
				'emission' = SDMDLValueEDF() [CONNECTABLE]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				'intensity' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_emission' (SDTypeStruct)
				
		[861/886] 'mdl::material_surface(material_surface)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'mdl::material_surface' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_surface' (SDTypeStruct)
				
		[862/886] 'mdl::material_surface(bsdf,material_emission)'
			SDPropertyCategory = 'Input'
				'scattering' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'emission' = SDValueStruct("mdl::material_emission",emission=SDMDLValueEDF(),intensity=SDValueColorRGB(ColorRGB(0,0,0)),mode=SDValueEnum("mdl::intensity_mode",0)) [CONNECTABLE]
					Types:
						'mdl::material_emission' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_surface' (SDTypeStruct)
				
		[863/886] 'mdl::material_surface.scattering(material_surface)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material_surface' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[864/886] 'mdl::material_surface.emission(material_surface)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material_surface' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_emission' (SDTypeStruct)
				
		[865/886] 'mdl::material_volume(material_volume)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'mdl::material_volume' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_volume' (SDTypeStruct)
				
		[866/886] 'mdl::material_volume(vdf,color,color,color)'
			SDPropertyCategory = 'Input'
				'scattering' = SDMDLValueVDF() [CONNECTABLE]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				'absorption_coefficient' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'scattering_coefficient' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'emission_intensity' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_volume' (SDTypeStruct)
				
		[867/886] 'mdl::material_volume.scattering(material_volume)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material_volume' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[868/886] 'mdl::material_volume.absorption_coefficient(material_volume)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material_volume' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[869/886] 'mdl::material_volume.scattering_coefficient(material_volume)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material_volume' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[870/886] 'mdl::material_volume.emission_intensity(material_volume)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material_volume' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[871/886] 'mdl::material_volume$1.6(vdf,color,color)'
			SDPropertyCategory = 'Input'
				'scattering' = SDMDLValueVDF() [CONNECTABLE]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				'absorption_coefficient' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'scattering_coefficient' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_volume' (SDTypeStruct)
				
		[872/886] 'mdl::material_geometry(material_geometry)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'mdl::material_geometry' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_geometry' (SDTypeStruct)
				
		[873/886] 'mdl::material_geometry(float3,float,float3)'
			SDPropertyCategory = 'Input'
				'displacement' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'cutout_opacity' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___62) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_geometry' (SDTypeStruct)
				
		[874/886] 'mdl::material_geometry.displacement(material_geometry)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material_geometry' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[875/886] 'mdl::material_geometry.cutout_opacity(material_geometry)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material_geometry' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[876/886] 'mdl::material_geometry.normal(material_geometry)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material_geometry' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[877/886] 'mdl::material(material)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'mdl::material' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[878/886] 'mdl::material(bool,material_surface,material_surface,color,material_volume,material_geometry,hair_bsdf)'
			SDPropertyCategory = 'Input'
				'thin_walled' = SDValueBool(bool(false)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'surface' = SDValueStruct("mdl::material_surface",scattering=SDMDLValueBSDF(),emission=SDValueStruct("mdl::material_emission",emission=SDMDLValueEDF(),intensity=SDValueColorRGB(ColorRGB(0,0,0)),mode=SDValueEnum("mdl::intensity_mode",0))) [CONNECTABLE]
					Types:
						'mdl::material_surface' (SDTypeStruct)
				'backface' = SDValueStruct("mdl::material_surface",scattering=SDMDLValueBSDF(),emission=SDValueStruct("mdl::material_emission",emission=SDMDLValueEDF(),intensity=SDValueColorRGB(ColorRGB(0,0,0)),mode=SDValueEnum("mdl::intensity_mode",0))) [CONNECTABLE]
					Types:
						'mdl::material_surface' (SDTypeStruct)
				'ior' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'volume' = SDValueStruct("mdl::material_volume",scattering=SDMDLValueVDF(),absorption_coefficient=SDValueColorRGB(ColorRGB(0,0,0)),scattering_coefficient=SDValueColorRGB(ColorRGB(0,0,0)),emission_intensity=SDValueColorRGB(ColorRGB(0,0,0))) [CONNECTABLE]
					Types:
						'mdl::material_volume' (SDTypeStruct)
				'geometry' = SDMDLValueCall(mdl::material_geometry(float3,float,float3)__default_call___64) [CONNECTABLE]
					Types:
						'mdl::material_geometry' (SDTypeStruct)
				'hair' = SDMDLValueHairBSDF() [CONNECTABLE]
					Types:
						'mdl::hair_bsdf' (SDMDLTypeHairBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[879/886] 'mdl::material.thin_walled(material)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool) [Uniform]
				
		[880/886] 'mdl::material.surface(material)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_surface' (SDTypeStruct)
				
		[881/886] 'mdl::material.backface(material)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_surface' (SDTypeStruct)
				
		[882/886] 'mdl::material.ior(material)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				
		[883/886] 'mdl::material.volume(material)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_volume' (SDTypeStruct)
				
		[884/886] 'mdl::material.geometry(material)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_geometry' (SDTypeStruct)
				
		[885/886] 'mdl::material.hair(material)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::hair_bsdf' (SDMDLTypeHairBSDF)
				
		[886/886] 'mdl::material$1.4(bool,material_surface,material_surface,color,material_volume,material_geometry)'
			SDPropertyCategory = 'Input'
				'thin_walled' = SDValueBool(bool(false)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'surface' = SDValueStruct("mdl::material_surface",scattering=SDMDLValueBSDF(),emission=SDValueStruct("mdl::material_emission",emission=SDMDLValueEDF(),intensity=SDValueColorRGB(ColorRGB(0,0,0)),mode=SDValueEnum("mdl::intensity_mode",0))) [CONNECTABLE]
					Types:
						'mdl::material_surface' (SDTypeStruct)
				'backface' = SDValueStruct("mdl::material_surface",scattering=SDMDLValueBSDF(),emission=SDValueStruct("mdl::material_emission",emission=SDMDLValueEDF(),intensity=SDValueColorRGB(ColorRGB(0,0,0)),mode=SDValueEnum("mdl::intensity_mode",0))) [CONNECTABLE]
					Types:
						'mdl::material_surface' (SDTypeStruct)
				'ior' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'volume' = SDValueStruct("mdl::material_volume",scattering=SDMDLValueVDF(),absorption_coefficient=SDValueColorRGB(ColorRGB(0,0,0)),scattering_coefficient=SDValueColorRGB(ColorRGB(0,0,0)),emission_intensity=SDValueColorRGB(ColorRGB(0,0,0))) [CONNECTABLE]
					Types:
						'mdl::material_volume' (SDTypeStruct)
				'geometry' = SDMDLValueCall(mdl::material_geometry(float3,float,float3)__default_call___66) [CONNECTABLE]
					Types:
						'mdl::material_geometry' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
	Types:
		[1/77] 'bool'
			'bool' (SDTypeBool)
		[2/77] 'int'
			'int' (SDTypeInt)
		[3/77] 'float'
			'float' (SDTypeFloat)
		[4/77] 'double'
			'double' (SDTypeDouble)
		[5/77] 'string'
			'string' (SDTypeString)
		[6/77] 'bool2'
			'bool2' (SDTypeBool2)
		[7/77] 'bool3'
			'bool3' (SDTypeBool3)
		[8/77] 'bool4'
			'bool4' (SDTypeBool4)
		[9/77] 'int2'
			'int2' (SDTypeInt2)
		[10/77] 'int3'
			'int3' (SDTypeInt3)
		[11/77] 'int4'
			'int4' (SDTypeInt4)
		[12/77] 'float2'
			'float2' (SDTypeFloat2)
		[13/77] 'float3'
			'float3' (SDTypeFloat3)
		[14/77] 'float4'
			'float4' (SDTypeFloat4)
		[15/77] 'double2'
			'double2' (SDTypeDouble2)
		[16/77] 'double3'
			'double3' (SDTypeDouble3)
		[17/77] 'double4'
			'double4' (SDTypeDouble4)
		[18/77] 'matrix<float>[2][2]'
			'matrix<float>[2][2]' (SDTypeMatrix)
				Item Type: 'float' (SDTypeFloat)
				Columns: 2
				Rows : 2
		[19/77] 'matrix<float>[2][3]'
			'matrix<float>[2][3]' (SDTypeMatrix)
				Item Type: 'float' (SDTypeFloat)
				Columns: 2
				Rows : 3
		[20/77] 'matrix<float>[2][4]'
			'matrix<float>[2][4]' (SDTypeMatrix)
				Item Type: 'float' (SDTypeFloat)
				Columns: 2
				Rows : 4
		[21/77] 'matrix<float>[3][2]'
			'matrix<float>[3][2]' (SDTypeMatrix)
				Item Type: 'float' (SDTypeFloat)
				Columns: 3
				Rows : 2
		[22/77] 'matrix<float>[3][3]'
			'matrix<float>[3][3]' (SDTypeMatrix)
				Item Type: 'float' (SDTypeFloat)
				Columns: 3
				Rows : 3
		[23/77] 'matrix<float>[3][4]'
			'matrix<float>[3][4]' (SDTypeMatrix)
				Item Type: 'float' (SDTypeFloat)
				Columns: 3
				Rows : 4
		[24/77] 'matrix<float>[4][2]'
			'matrix<float>[4][2]' (SDTypeMatrix)
				Item Type: 'float' (SDTypeFloat)
				Columns: 4
				Rows : 2
		[25/77] 'matrix<float>[4][3]'
			'matrix<float>[4][3]' (SDTypeMatrix)
				Item Type: 'float' (SDTypeFloat)
				Columns: 4
				Rows : 3
		[26/77] 'matrix<float>[4][4]'
			'matrix<float>[4][4]' (SDTypeMatrix)
				Item Type: 'float' (SDTypeFloat)
				Columns: 4
				Rows : 4
		[27/77] 'matrix<double>[2][2]'
			'matrix<double>[2][2]' (SDTypeMatrix)
				Item Type: 'double' (SDTypeDouble)
				Columns: 2
				Rows : 2
		[28/77] 'matrix<double>[2][3]'
			'matrix<double>[2][3]' (SDTypeMatrix)
				Item Type: 'double' (SDTypeDouble)
				Columns: 2
				Rows : 3
		[29/77] 'matrix<double>[2][4]'
			'matrix<double>[2][4]' (SDTypeMatrix)
				Item Type: 'double' (SDTypeDouble)
				Columns: 2
				Rows : 4
		[30/77] 'matrix<double>[3][2]'
			'matrix<double>[3][2]' (SDTypeMatrix)
				Item Type: 'double' (SDTypeDouble)
				Columns: 3
				Rows : 2
		[31/77] 'matrix<double>[3][3]'
			'matrix<double>[3][3]' (SDTypeMatrix)
				Item Type: 'double' (SDTypeDouble)
				Columns: 3
				Rows : 3
		[32/77] 'matrix<double>[3][4]'
			'matrix<double>[3][4]' (SDTypeMatrix)
				Item Type: 'double' (SDTypeDouble)
				Columns: 3
				Rows : 4
		[33/77] 'matrix<double>[4][2]'
			'matrix<double>[4][2]' (SDTypeMatrix)
				Item Type: 'double' (SDTypeDouble)
				Columns: 4
				Rows : 2
		[34/77] 'matrix<double>[4][3]'
			'matrix<double>[4][3]' (SDTypeMatrix)
				Item Type: 'double' (SDTypeDouble)
				Columns: 4
				Rows : 3
		[35/77] 'matrix<double>[4][4]'
			'matrix<double>[4][4]' (SDTypeMatrix)
				Item Type: 'double' (SDTypeDouble)
				Columns: 4
				Rows : 4
		[36/77] 'mdl::light_profile'
			'mdl::light_profile' (SDMDLTypeLightProfileReference)
		[37/77] 'mdl::bsdf_measurement'
			'mdl::bsdf_measurement' (SDMDLTypeBSDFMeasurementReference)
		[38/77] 'mdl::texture_2d'
			'mdl::texture_2d' (SDMDLTypeTextureReference)
				TextureShape: TextureShape.TwoDim
		[39/77] 'mdl::texture_3d'
			'mdl::texture_3d' (SDMDLTypeTextureReference)
				TextureShape: TextureShape.ThreeDim
		[40/77] 'mdl::texture_cube'
			'mdl::texture_cube' (SDMDLTypeTextureReference)
				TextureShape: TextureShape.Cube
		[41/77] 'mdl::texture_ptex'
			'mdl::texture_ptex' (SDMDLTypeTextureReference)
				TextureShape: TextureShape.Ptex
		[42/77] 'mdl::edf'
			'mdl::edf' (SDMDLTypeEDF)
		[43/77] 'mdl::vdf'
			'mdl::vdf' (SDMDLTypeVDF)
		[44/77] 'mdl::bsdf'
			'mdl::bsdf' (SDMDLTypeBSDF)
		[45/77] 'mdl::hair_bsdf'
			'mdl::hair_bsdf' (SDMDLTypeHairBSDF)
		[46/77] 'mdl::call'
			'mdl::call' (SDMDLTypeCall)
		[47/77] 'mdl::paramref'
			'mdl::paramref' (SDMDLTypeParameterReference)
		[48/77] 'SDTypeArray<float>'
			'SDTypeArray<float>' (SDTypeArray)
				Item Type:
					'float' (SDTypeFloat)
		[49/77] 'ColorRGB'
			'ColorRGB' (SDTypeColorRGB)
		[50/77] 'mdl::intensity_mode'
			'mdl::intensity_mode' (SDTypeEnum)
				int intensity_radiant_exitance = SDValueInt(int(0))
				int intensity_power = SDValueInt(int(1))
		[51/77] 'SDTypeArray<float>'
			'SDTypeArray<float>' (SDTypeArray)
				Item Type:
					'float' (SDTypeFloat)
		[52/77] 'mdl::material_emission'
			'mdl::material_emission' (SDTypeStruct)
				mdl::edf emission
				ColorRGB intensity
				mdl::intensity_mode mode
		[53/77] 'mdl::material_surface'
			'mdl::material_surface' (SDTypeStruct)
				mdl::bsdf scattering
				mdl::material_emission emission
		[54/77] 'mdl::material_volume'
			'mdl::material_volume' (SDTypeStruct)
				mdl::vdf scattering
				ColorRGB absorption_coefficient
				ColorRGB scattering_coefficient
				ColorRGB emission_intensity
		[55/77] 'mdl::material_geometry'
			'mdl::material_geometry' (SDTypeStruct)
				float3 displacement
				float cutout_opacity
				float3 normal
		[56/77] 'mdl::material'
			'mdl::material' (SDTypeStruct)
				bool thin_walled
				mdl::material_surface surface
				mdl::material_surface backface
				ColorRGB ior
				mdl::material_volume volume
				mdl::material_geometry geometry
				mdl::hair_bsdf hair
		[57/77] 'SDTypeArray<float>'
			'SDTypeArray<float>' (SDTypeArray)
				Item Type:
					'float' (SDTypeFloat)
		[58/77] 'SDTypeArray<float2>'
			'SDTypeArray<float2>' (SDTypeArray)
				Item Type:
					'float2' (SDTypeFloat2)
		[59/77] 'SDTypeArray<float3>'
			'SDTypeArray<float3>' (SDTypeArray)
				Item Type:
					'float3' (SDTypeFloat3)
		[60/77] 'SDTypeArray<float4>'
			'SDTypeArray<float4>' (SDTypeArray)
				Item Type:
					'float4' (SDTypeFloat4)
		[61/77] 'SDTypeArray<double>'
			'SDTypeArray<double>' (SDTypeArray)
				Item Type:
					'double' (SDTypeDouble)
		[62/77] 'SDTypeArray<double2>'
			'SDTypeArray<double2>' (SDTypeArray)
				Item Type:
					'double2' (SDTypeDouble2)
		[63/77] 'SDTypeArray<double3>'
			'SDTypeArray<double3>' (SDTypeArray)
				Item Type:
					'double3' (SDTypeDouble3)
		[64/77] 'SDTypeArray<double4>'
			'SDTypeArray<double4>' (SDTypeArray)
				Item Type:
					'double4' (SDTypeDouble4)
		[65/77] 'SDTypeArray<float>'
			'SDTypeArray<float>' (SDTypeArray)
				Item Type:
					'float' (SDTypeFloat)
		[66/77] 'SDTypeArray<float>'
			'SDTypeArray<float>' (SDTypeArray)
				Item Type:
					'float' (SDTypeFloat)
		[67/77] 'SDTypeArray<ColorRGB>'
			'SDTypeArray<ColorRGB>' (SDTypeArray)
				Item Type:
					'ColorRGB' (SDTypeColorRGB)
		[68/77] 'SDTypeArray<float>'
			'SDTypeArray<float>' (SDTypeArray)
				Item Type:
					'float' (SDTypeFloat)
		[69/77] 'SDTypeArray<ColorRGB>'
			'SDTypeArray<ColorRGB>' (SDTypeArray)
				Item Type:
					'ColorRGB' (SDTypeColorRGB)
		[70/77] 'SDTypeArray<ColorRGB>'
			'SDTypeArray<ColorRGB>' (SDTypeArray)
				Item Type:
					'ColorRGB' (SDTypeColorRGB)
		[71/77] 'SDTypeArray<ColorRGB>'
			'SDTypeArray<ColorRGB>' (SDTypeArray)
				Item Type:
					'ColorRGB' (SDTypeColorRGB)
		[72/77] 'SDTypeArray<ColorRGB>'
			'SDTypeArray<ColorRGB>' (SDTypeArray)
				Item Type:
					'ColorRGB' (SDTypeColorRGB) [Uniform]
		[73/77] 'SDTypeArray<int>'
			'SDTypeArray<int>' (SDTypeArray)
				Item Type:
					'int' (SDTypeInt) [Uniform]
		[74/77] 'SDTypeArray<float>'
			'SDTypeArray<float>' (SDTypeArray)
				Item Type:
					'float' (SDTypeFloat) [Uniform]
		[75/77] 'SDTypeArray<int>'
			'SDTypeArray<int>' (SDTypeArray)
				Item Type:
					'int' (SDTypeInt)
		[76/77] 'SDTypeArray<int>'
			'SDTypeArray<int>' (SDTypeArray)
				Item Type:
					'int' (SDTypeInt)
		[77/77] 'SDTypeArray<float>'
			'SDTypeArray<float>' (SDTypeArray)
				Item Type:
					'float' (SDTypeFloat)
